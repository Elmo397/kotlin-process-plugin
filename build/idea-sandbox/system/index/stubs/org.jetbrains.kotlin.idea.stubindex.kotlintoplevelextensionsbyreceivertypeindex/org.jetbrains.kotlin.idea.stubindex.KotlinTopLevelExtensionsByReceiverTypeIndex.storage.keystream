Map
filterNotMap
asSequenceMap
minWithMap
filterNotToMap
optimizeReadOnlyMapEntry
toPairMap
filterValuesMap
mapNotNullMap
getMap
mapValuesEntry
component2Entry
component1Map
ifEmptyMap
getOrElseNullableMap
mapValuesTo	Map
mapToMap
all	Map
minBy	Map
countMap
filterKeysMap
toSingletonMap
Map
filter	Map
maxByMap
containsValueMap
toMutableMapMap
flatMapToMap
mapMap
getOrElse	Map
minusMap
orEmptyMap
containsKeyMap
containsMap
plusMap
mapKeys
Map
onEachMap
flatMapMap
isNotEmptyMap
maxWithMap
filterToMutableMap
putAllMap
mapNotNullToSequence
toMapMutableMap
setMap
anyArray
toMapMap
toSingletonMapOrSelfMutableMap
plusAssignIterable
toMapMutableMap
minusAssignMutableMap
getOrPutMap
mapKeysToMap
isNullOrEmptyMutableMap
iteratorMap
none	Map
toMapMap
asIterable
Map
toListMap
iteratorSet
plusSet
optimizeReadOnlySetSet
orEmptySet
minusElementSet
plusElement	Set
minusUByteArray
elementAtUShortArray
sortedArrayUShortArray
sumUByteArray
maxWithUShortArray
anyUByteArray
flatMapUByteArray
indexOfFirstUIntArray
findLastULongArray
reduceRightIndexedUByteArray
sortDescendingShortArray
toUShortArrayUByteArray
findLastUShortArray
noneUShortArray
singleOrNullULongArray
sortedDescendingUByteArray
minUShortArray
filterIndexedUIntArray
randomUByteArray
lastOrNullUByteArray
takeLastWhileUByteArray
copyOfRangeUByteArray
getOrNullUIntArray
forEachULongArray
filterIndexedToArray
toUShortArrayUByteArray
reduceRightULongArray
sortDescendingUByteArray
sumByUShortArray
reverseUShortArray
countUShortArray
toTypedArrayLongArray
toULongArrayUShortArray
maxByULongArray
maxWithLongArray
asULongArrayULongArray
flatMapUByteArray
component1ULongArray
reverseUShortArray
takeLastWhileUIntArray
toIntArrayUByteArray
noneULongArray
toLongArrayUByteArray
dropWhileULongArray
filterNotToUIntArray
contentToStringUIntArray
takeWhileUByteArray
takeWhileUByteArray
filterIndexedToUShortArray
reduceIndexedULongArray
groupByToUByteArray
foldRightUByteArray
reverseUIntArray
reduceULongArray
filterULongArray
foldRightUIntArray
maxWithUIntArray
flatMapULongArray
sortedArrayULongArray
findUIntArray
dropLastULongArray
foldULongArray
sliceUIntArray
noneUIntArray
lastOrNullUByteArray
reduceRightIndexedUIntArray
anyUIntArray
filterNotToUShortArray
asShortArrayUByteArray
indexOfLastUByteArray
sortedUShortArray
sumByDoubleUIntArray
sumUShortArray
lastIndexOfUIntArray
reversedArrayUShortArray
dropLastWhileULongArray
copyIntoShortArray
asUShortArrayUShortArray
elementAtOrElseUShortArray
dropWhileUIntArray
filterIndexedToULongArray
lastULongArray
sliceArrayUByteArray
dropUShortArray
minUByteArray
mapIndexedToUShortArray
singleUByteArray
filterUByteArray
sliceArrayUIntArray
groupByToUShortArray
lastIndexULongArray
indexOfFirstUShortArray
foldULongArray
mapToUIntArray
mapToUShortArray
flatMapToUIntArray
sortedDescendingULongArray
dropUIntArray
component4UShortArray
contentEqualsULongArray
mapIndexedToULongArray
asListUIntArray
sliceUShortArray
elementAtOrNullUIntArray
sortDescendingUIntArray
sortedArrayUIntArray
takeLastWhileULongArray
reduceRightUShortArray
minWithIntArray
toUIntArrayUIntArray
minUIntArray
reverseUShortArray
lastULongArray
toTypedArrayUShortArray
forEachULongArray
filterToULongArray
sortedUShortArray
filterULongArray
copyOfUByteArray
toByteArrayUByteArray
mapToUShortArray
withIndexUByteArray
asByteArrayULongArray
lastOrNullUShortArray
toShortArrayUByteArray
foldUIntArray
indicesUShortArray
dropUByteArray
foldIndexedUByteArray
component5UByteArray
component4UByteArray
component3UByteArray
component2UByteArray
asListULongArray
component2UShortArray
lastOrNullULongArray
reversedArrayUByteArray
takeUIntArray
sortedArrayDescendingUIntArray
sliceArrayUIntArray
forEachIndexedUByteArray
filterNotToUByteArray
lastUShortArray
reversedArrayUByteArray
maxUByteArray
copyOfUIntArray
lastUIntArray
foldUByteArray
mapUByteArray
singleOrNullUShortArray
maxWithULongArray
contentToStringIntArray
asUIntArrayUIntArray
dropUByteArray
filterIndexedULongArray
sortULongArray
indexOfLastUIntArray
indexOfFirstUShortArray
filterIndexedToUShortArray
asListUByteArray
minWithUShortArray
copyOfRangeULongArray
sumUShortArray
plusULongArray
anyULongArray
dropLastUIntArray
foldRightIndexedUIntArray
indexOfUByteArray
foldRightIndexedUShortArray
sortedUByteArray
firstOrNullULongArray
indicesULongArray
filterIndexedUShortArray
copyOfULongArray
copyOfRangeULongArray
asLongArrayUByteArray
zipUShortArray
getOrNullUIntArray
asIntArrayUShortArray
maxUIntArray
indexOfLastUByteArray
sumByDoubleUIntArray
component5UByteArray
contentToStringUIntArray
component3UIntArray
component2UIntArray
component1UByteArray
indexOfUShortArray
getOrElseUIntArray
groupByULongArray
lastIndexUShortArray
contentToStringUByteArray
reduceIndexedUShortArray
flatMapUByteArray
groupByToUByteArray
forEachIndexedULongArray
flatMapToArray
toUByteArrayULongArray
allUByteArray
plusUByteArray
allUIntArray
copyOfRangeULongArray
takeLastWhileUIntArray
dropLastWhileUIntArray
reversedULongArray
randomULongArray
withIndexUShortArray
foldRightIndexedUShortArray
copyIntoULongArray
firstUShortArray
sliceArrayUIntArray
firstUShortArray
zipUShortArray
indexOfULongArray
sumByULongArray
reduceIndexedUShortArray
sumByUIntArray
sumByUIntArray
elementAtOrElseULongArray
foldIndexedULongArray
indexOfUIntArray
takeLastUShortArray
filterNotUByteArray
sortArray
toUIntArrayUByteArray
takeLastUShortArray
reduceRightULongArray
groupByUShortArray
takeWhileUShortArray
takeLastUByteArray
mapIndexedUIntArray
lastIndexUIntArray
foldRightUShortArray
indexOfFirstULongArray
takeLastUIntArray
allByteArray
asUByteArrayUIntArray
flatMapToUByteArray
firstUByteArray
withIndexUShortArray
slice ULongArray
sortedArrayDescendingUShortArray
allULongArray
dropLastWhileULongArray
reversedULongArray
component5ULongArray
component4ULongArray
component3ULongArray
countULongArray
component1UShortArray
filterToUIntArray
countUIntArray
sortULongArray
maxByULongArray
findLastUIntArray
maxByUByteArray
flatMapToUShortArray
contentHashCodeUByteArray
contentHashCodeUIntArray
contentHashCodeUIntArray
filterIndexedULongArray
minUIntArray
mapUIntArray
maxUByteArray
randomULongArray
getOrElseUShortArray
component5UShortArray
component4UShortArray
component3UShortArray
component2UShortArray
component1UShortArray
mapUByteArray
groupByULongArray
singleULongArray
firstOrNullUIntArray
elementAtOrNullUIntArray
asListULongArray
contentEqualsUIntArray
singleUShortArray
mapToUIntArray
zipUByteArray
countULongArray
foldRightIndexedUIntArray
copyIntoUShortArray
reduceRightIndexedUShortArray
indexOfLastUByteArray
copyIntoUShortArray
findULongArray
getOrNullUIntArray
mapIndexedULongArray
forEachUByteArray
reversedULongArray
minWithULongArray
reduceUByteArray
sortedArrayUShortArray
groupByUShortArray
filterNotToUIntArray
mapIndexedToUIntArray
reduceIndexed!UShortArray
sortedArrayDescendingUIntArray
getOrElseULongArray
sumByDoubleArray
toULongArrayUByteArray
dropLastWhileUIntArray
withIndexUIntArray
filterUIntArray
elementAtUShortArray
indicesUShortArray
dropLastUByteArray
toTypedArrayUShortArray
sortULongArray
singleOrNullULongArray
minByByteArray
toUByteArrayUIntArray
minByUIntArray
toTypedArrayUIntArray
reduceRightIndexedUByteArray
contentEqualsUIntArray
filterToUIntArray
minWithUByteArray
findUByteArray
filterToUShortArray
mapIndexedToUIntArray
foldIndexedUByteArray
lastIndexUIntArray
getOrNullULongArray
filterNotUShortArray
forEachIndexedUShortArray
sortDescendingULongArray
elementAtOrElseUByteArray
maxByUIntArray
singleOrNullUShortArray
findLastUShortArray
minByUShortArray
takeUByteArray
minByUByteArray
sliceUShortArray
reversedULongArray
elementAtUShortArray
foldIndexedUIntArray
takeULongArray
takeWhileUIntArray
findULongArray
mapIndexedUShortArray
sortedDescendingUShortArray
groupByTo UByteArray
sortedArrayDescendingUIntArray
contentEqualsUShortArray
reduceUShortArray
foldRightUIntArray
dropWhileUShortArray
elementAtULongArray
lastIndexOfUByteArray
forEachULongArray
maxULongArray
elementAtOrNullULongArray
plusUShortArray
mapIndexedUByteArray
reduceULongArray
mapUIntArray
sortedUByteArray
elementAtOrElseUByteArray
anyUShortArray
randomUIntArray
copyOfUIntArray
filterNotULongArray
contentHashCodeUIntArray
firstOrNullUByteArray
indicesULongArray
noneUByteArray
dropLastUIntArray
sumByDoubleUByteArray
reversedArrayUIntArray
lastIndexOfUByteArray
filterNotULongArray
forEachIndexedUByteArray
singleUIntArray
plusUByteArray
sumULongArray
takeUByteArray
lastIndexOfUIntArray
reduceRightUByteArray
getOrElseUShortArray
firstOrNullULongArray
zipUByteArray
elementAtOrNullULongArray
dropWhileUShortArray
firstUByteArray
sortedDescendingGrouping
foldGrouping
aggregateToGrouping
aggregateGrouping
reduceToGrouping
eachCountGrouping
eachCountToGrouping
foldToGrouping
reduceIterable
joinToStringIterable
toMutableSetList
elementAtOrElseIterable
firstOrNullIterable
joinToIterable
toMutableListIterable
minusElementIterable
subtractIterable
mapNotNullToList
binarySearchByList
lastOrNullIterable
associateByArray
asCollectionIterable
onEachList
findLastList
indexOfFirstList
dropLastIterable
toHashSetList
asReversedList
reduceRightIterable
findList
reduceRightIndexedIterable
firstCollection
safeToConvertToSetIterable
filterIndexedList
elementAtIterable
flatMapIterable
averageList
lastIndexIterable
sortedByIterable
maxByIterable
filterNotNullIterable
reversedIterable
minBy	List
lastIterable
filterNotNullToMutableCollection
retainAllIterable
groupByToIterable
windowedIterable
zipWithNextMutableList
sortByIterable
reduceCollection
countIterable
anyIterable
dropWhileCollection
plusElementMutableCollection
removeAllMutableList
retainAllIterable
elementAtIterable
reduceIndexedIterable
asSequenceMutableIterable
retainAllIterable
minMutableList
sortDescendingCollection
toFloatArrayCollection
toBooleanArrayList
component5List
component4List
component3List
dropLastWhileList
component1Array
copyToArrayOfAnyIterable
mapNotNullList
getOrNullCollection
toMutableListCollection
toCharArrayMutableList
shuffleIterable
shuffledIterable
indexOfFirstIterable
filterIterable
collectionSizeOrNullList
component2MutableCollection
retainNothingCollection
toByteArrayIterable
mapIndexedToIterable
filterIsInstanceToCollection
plusIterable
takeWhileIterable
distinctIterable
mapIndexedNotNullToCollection
indicesIterable
filterNotToMutableList
removeAllIterable
associateByToIterable
associateToIterable
foldIndexedMutableIterable
removeAllIterable
distinctByIterable
withIndexCollection
toIntArrayList
foldRightIndexedIterable
allMutableList
reverseList
singleIterable
requireNoNullsIterable
plusElementIterator
withIndexIterable
chunkedIterable
filterNotMutableList
removeList
takeLastWhileMutableCollection
addAllIterable
filterTo(Iterable
convertToSetForSetOperationWithList
elementAtOrNullIterable
toListIterable
toCollectionList
orEmptyIterable
indexOfLastIterable
sumByList
binarySearchIterator
forEachIterable
minusIterable
flattenList
indexOfIterable
intersectCollection
toShortArrayIterable
flatMapToIterable
singleMutableList
asReversedCollection
randomIterable
takeMutableList
sortWithIterable
mapIndexedList
singleOrNullIterable
mapIterable
toSetList
reversePositionIndexIterable
lastIndexOfCollection
containsAllCollection
ifEmpty Iterable
collectionSizeOrDefaultIterable
sortedWithIterable
countIterable
groupByIterable
noneIterable
plusCollection
toLongArrayList
requireNoNullsIterable
sumByDoubleIterable
findLastMutableCollection
removeIterable
indexOf
List
sliceMutableList
filterInPlaceIterable
mapToIterable
partitionIterable
unionMutableCollection
plusAssignIterable
maxIterable
forEachIterable
asIterableList
indexOfLast
List
firstIterable
filterIsInstanceIterable
sortedDescendingList
reverseElementIndexIterable
forEachIndexedIterable
mapIndexedNotNullMutableList
sortByDescendingIterable
lastIterator
iteratorIterable
associateWith$Iterable
convertToSetForSetOperationList
firstOrNullList
getOrElseMutableCollection
minusAssignCollection
isNotEmptyIterable
dropMutableIterable
filterInPlaceList
optimizeReadOnlyListIterable
elementAtOrNullList
lastIndexOfIterable
zipIterable
sortedMutableList
sortIterable
filterIndexedToIterable
singleOrNullIterable
minWithIterable
sortedByDescendingIterable
unzipIterable
lastOrNullMutableList
fillList
takeLastIterable
maxWithIterable
associateIterable
elementAtOrElseCollection
orEmptyIterable
groupingByIterable
associateWithToCollection
toDoubleArrayMap
getValueMutableMap
setValueMutableMap
getValueCollection
toUIntArrayCollection
toUShortArrayCollection
toUByteArrayCollection
toULongArraySequence
windowedSequence)SuspendFunction0
createCoroutineUnchecked)SuspendFunction1
createCoroutineUncheckedIntArray
foldRightFloatArray
reduceRightLongArray
intersectCharArray
singleOrNullArray
sortedByLongArray
reduceRightIntArray
sortedByDoubleArray
associateByToByteArray
associateByCharArray
maxWithBooleanArray
mapShortArray
maxLongArray
allCharArray
dropLastWhileShortArray
mapLongArray
flatMapBooleanArray
sliceBooleanArray
foldShortArray
indexOfFirstArray
sortedArrayWithByteArray
contentEqualsLongArray
lastIndexDoubleArray
lastOrNull	Array
minArray
mapIndexedNotNullIntArray
elementAtOrNullLongArray
takeLastWhileByteArray
asListFloatArray
associateByShortArray
findLastIntArray
maxByLongArray
associateByteArray
copyOfLongArray
countIntArray
copyIntoByteArray
flatMapByteArray
averageArray
maxWithByteArray
intersectByteArray
indexOfLastFloatArray
flatMapBooleanArray
subtractArray
contentDeepToStringImplArray
sortedArrayFloatArray
sortedArrayBooleanArray
toTypedArrayBooleanArray
intersectShortArray
flatMapDoubleArray
minByFloatArray
filterIndexedToCharArray
flatMapToByteArray
toTypedArrayDoubleArray
filterNotToCharArray
toMutableSetFloatArray
elementAtOrNullCharArray
foldRightIndexedShortArray
unionDoubleArray
findDoubleArray
anyBooleanArray
singleOrNullFloatArray
takeLastShortArray
associateByToDoubleArray
withIndexIntArray
indicesCharArray
indexOfFirstFloatArray
associateLongArray
toMutableSetShortArray
elementAtLongArray
groupByArray
withIndexArray
filterNotShortArray
zipCharArray
dropWhileShortArray
takeWhileCharArray
getOrElseCharArray
foldFloatArray
findCharArray
toListFloatArray
isNotEmptyFloatArray
toMutableSetBooleanArray
indexOfBooleanArray
associate
Array
noneArray
foldIndexedByteArray
maxByByteArray
getOrNullDoubleArray
toMutableListIntArray
isEmptyShortArray
contentHashCodeCharArray
sortDoubleArray
allFloatArray
singleLongArray
joinToShortArray
dropLastWhileBooleanArray
associateToCharArray
contentEqualsShortArray
mapToShortArray
forEachIndexedShortArray
anyCharArray
distinctByDoubleArray
noneFloatArray
takeArray
mapToFloatArray
component3FloatArray
randomCharArray
isEmptyIntArray
noneBooleanArray
joinToBooleanArray
lastIndexOf ShortArray
sortedArrayDescendingFloatArray
partitionArray
mapIndexedBooleanArray
findCharArray
elementAtOrElseLongArray
toSetLongArray
reduceRightIndexedArray
sortByDescendingFloatArray
toSetByteArray
getOrElseCharArray
toSetIntArray
sumByCharArray
sortedArrayDescendingDoubleArray
flatMapToFloatArray
dropLastShortArray
sortDescendingBooleanArray
distinctCharArray
lastIndexBooleanArray
indexOfFirstFloatArray
joinToLongArray
foldRightArray
isEmptyShortArray
distinctByShortArray
indicesArray
joinToFloatArray
component4IntArray
groupByToDoubleArray
elementAtOrElse FloatArray
sortedArrayDescendingIntArray
foldRightIndexedShortArray
noneBooleanArray
filterToIntArray
firstArray
toBooleanArrayBooleanArray
takeByteArray
elementAtOrElseFloatArray
sliceArrayCharArray
findLastFloatArray
maxByFloatArray
toCollectionLongArray
sortedLongArray
plusDoubleArray
getOrElseDoubleArray
asIterableDoubleArray
singleFloatArray
subtractFloatArray
takeWhileArray
filterIsInstanceToFloatArray
lastOrNullLongArray
dropLastWhileArray
contentEqualsByteArray
foldLongArray
sumByDoubleByteArray
reduceRightIndexedDoubleArray
sortedByShortArray
containsFloatArray
contentToStringDoubleArray
randomFloatArray
foldIndexedByteArray
toListDoubleArray
reduceRightCharArray
reduceIndexedLongArray
minByteArray
sortLongArray
maxWithCharArray
filterLongArray
foldIndexedArray
filterNotNullShortArray
contentEqualsCharArray
findShortArray
mapIndexedToBooleanArray
asIterableIntArray
filterIndexedToByteArray
sumByShortArray
toTypedArrayIntArray
filterArray
singleOrNullByteArray
findLastCharArray
component5CharArray
component4CharArray
component3CharArray
component2CharArray
component1
Array
dropLongArray
takeWhileDoubleArray
copyIntoByteArray
firstByteArray
sortedArrayDescendingArray
toDoubleArrayByteArray
sumByDoubleShortArray
toHashSetIntArray
sumDoubleArray
dropByteArray
indicesBooleanArray
takeLastIntArray
forEachArray
contentDeepEqualsImplCharArray
lastOrNullIntArray
mapIndexedIntArray
dropShortArray
associateToByteArray
countShortArray
withIndexIntArray
toHashSetBooleanArray
toSetCharArray
countShortArray
component5ShortArray
component4ShortArray
component3ShortArray
component2ShortArray
component1LongArray
maxByBooleanArray
foldRightIndexedDoubleArray
singleOrNullDoubleArray
associateDoubleArray
component4ByteArray
flatMapToByteArray
associateToDoubleArray
asListCharArray
copyOfRangeDoubleArray
groupByArray
associateArray
contentHashCodeArray
findLast
Array
plusFloatArray
sumByArray
requireNoNullsIntArray
findLastShortArray
dropShortArray
lastOrNullDoubleArray
reduceRightIndexedArray
sortedWithShortArray
getOrNullBooleanArray
reduceRightIndexedFloatArray
sortDescendingArray
indexOfFirstFloatArray
maxFloatArray
minShortArray
firstOrNullByteArray
minFloatArray
sumIntArray
associateToArray
mapNotNullBooleanArray
filterIndexedToBooleanArray
reduceRightFloatArray
firstArray
averageDoubleArray
plusDoubleArray
sliceBooleanArray
elementAtOrNullFloatArray
mapArray
lastIndexOfShortArray
indexOfFloatArray
lastIndexOfIntArray
plusShortArray
joinToStringArray
randomCharArray
forEachIndexedDoubleArray
takeLastWhileShortArray
firstArray
filterToLongArray
sortedWithBooleanArray
reverseShortArray
filterIndexedToCharArray
reduceRightIndexedFloatArray
withIndexArray
contentToStringArray
reduceRightIndexedIntArray
containsShortArray
elementAtOrNullLongArray
containsByteArray
sortedByShortArray
reduceBooleanArray
mapIndexedDoubleArray
dropLastWhileCharArray
containsLongArray
elementAtOrElseByteArray
isNotEmptyByteArray
takeIntArray
takeLastWhileArray
isNullOrEmptyBooleanArray
isNotEmptyIntArray
copyOfRangeIntArray
mapShortArray
subtractIntArray
zipShortArray
plusCharArray
sortDescendingFloatArray
elementAtOrElseIntArray
toMutableSetShortArray
dropWhileArray
contentDeepHashCodeIntArray
filterNotToLongArray
elementAtOrNullIntArray
joinToStringShortArray
sortedArrayArray
associateByByteArray
copyIntoIntArray
reduceShortArray
toCollectionShortArray
sumByDoubleShortArray
asListCharArray
takeIntArray
flatMapArray
reduceRightIntArray
findByteArray
joinToBooleanArray
dropLastLongArray
toHashSetIntArray
foldFloatArray
toListArray
asSequenceByteArray
mapIndexedToByteArray
containsLongArray
sumByDoubleArray
sliceArrayCharArray
minBooleanArray
isEmptyShortArray
takeLongArray
filterCharArray
foldIndexedByteArray
toMutableSetArray
takeLastWhileFloatArray
flatMapToFloatArray
mapIndexedToArray
mapIndexedNotNullToLongArray
firstShortArray
countByteArray
component5ByteArray
component4ByteArray
component3ByteArray
component2IntArray
sortedWithLongArray
asSequenceDoubleArray
maxWithDoubleArray
foldIndexedArray
countFloatArray
reversedFloatArray
anyFloatArray
toMutableListIntArray
firstOrNullByteArray
forEachByteArray
sliceArrayByteArray
indexOfFirstDoubleArray
zipBooleanArray
sliceArrayByteArray
maxIntArray
toCollection	Array
zipShortArray
lastIndexByteArray
mapArray
filterNotNullToFloatArray
getOrElseBooleanArray
copyOfRangeCharArray
reduceRightCharArray
filterNotLongArray
indexOfFloatArray
minByBooleanArray
reduceIndexedLongArray
getOrNullArray
filterFloatArray
reduceIndexedDoubleArray
contentHashCodeIntArray
lastFloatArray
lastIntArray
partitionByteArray
sortedArray
mapNotNullToIntArray
groupByBooleanArray
filterNotToDoubleArray
reversedArrayBooleanArray
reversedByteArray
contentHashCodeFloatArray
allByteArray
withIndexArray
containsFloatArray
distinctByShortArray
distinctBooleanArray
contentToStringArray
indexOfLastCharArray
reverseFloatArray
indexOfLastBooleanArray
zipBooleanArray
sumByDoubleIntArray
takeWhileShortArray
partitionShortArray
filterToBooleanArray
toMutableSetLongArray
indexOfLastLongArray
sortedArrayDescendingLongArray
foldCharArray
groupByToBooleanArray
mapToByteArray
dropCharArray
indicesFloatArray
indexOfDoubleArray
findLastByteArray
filterNotBooleanArray
lastLongArray
sortArray
reverseIntArray
elementAtOrElseArray
ifEmptyCharArray
subtractIntArray
asSequenceFloatArray
filterByteArray
findBooleanArray
firstOrNullBooleanArray
getOrNullFloatArray
joinToStringArray
getOrElseBooleanArray
reversedArray!DoubleArray
sortedArrayDescendingCharArray
maxFloatArray
reversedArrayCharArray
lastIndexOfIntArray
sortedByDescendingCharArray
mapLongArray
subtractArray
indicesLongArray
joinToStringLongArray
averageCharArray
mapIndexedBooleanArray
filterIndexedShortArray
foldRightDoubleArray
filterNotDoubleArray
lastIndexOfShortArray
associateByShortArray
groupByLongArray
toMutableListByteArray
anyDoubleArray
reduceIndexedLongArray
minByFloatArray
groupByByteArray
groupByToBooleanArray
toCollectionLongArray
indexOfFirstIntArray
elementAtIntArray
sliceFloatArray
sortedByCharArray
intersectShortArray
toSetByteArray
takeLastWhileArray
toHashSetFloatArray
dropWhileArray
toSetLongArray
sortedByDescendingShortArray
mapIndexedCharArray
lastBooleanArray
filterArray
orEmptyByteArray
allCharArray
minWithDoubleArray
groupByToIntArray
maxWithCharArray
mapToLongArray
toCollectionIntArray
contentToStringCharArray
maxByCharArray
sliceArray!Array
contentDeepToStringInternalArray
groupByToFloatArray
copyIntoIntArray
associateByIntArray
minFloatArray
contentEquals
Array
foldShortArray
singleCharArray
associateDoubleArray
copyOfArray
component4FloatArray
component1FloatArray
component2Array
reduceDoubleArray
unionCharArray
associateByArray
sortedCharArray
distinctLongArray
filterToBooleanArray
unionArray
subtract
Array
sortArray
minWithDoubleArray
foldLongArray
reduceByteArray
copyOfRangeBooleanArray
associateByToByteArray
sortedByDescendingLongArray
partitionByteArray
sortedArrayCharArray
filterToFloatArray
associateByToIntArray
subtractByteArray
sliceDoubleArray
isNotEmptyByteArray
groupByCharArray
sumByArray
toMutableSetBooleanArray
reduceByteArray
filterNotToArray
toMutableListFloatArray
sortedLongArray
reversedArrayLongArray
takeIntArray
sortDoubleArray
joinToStringLongArray
findLastBooleanArray
flatMapToDoubleArray
joinToLongArray
sortedArrayCharArray
filterIndexedDoubleArray
indexOfDoubleArray
intersectBooleanArray
countLongArray
asIterableShortArray
filterNotToDoubleArray
contentEqualsDoubleArray
mapDoubleArray
mapToBooleanArray
dropLastWhileArray
intersectBooleanArray
toMutableListCharArray
takeLastWhileFloatArray
dropLastWhileArray
sumByDoubleIntArray
sliceArrayShortArray
foldArray
filterIsInstanceIntArray
toTypedArrayCharArray
forEachCharArray
allShortArray
maxWithIntArray
sortedDescendingByteArray
filterToCharArray
indexOfLastBooleanArray
sortedWithFloatArray
maxWithDoubleArray
filterIndexedToLongArray
reverseArray
filterIndexedBooleanArray
associateByByteArray
lastIntArray
mapIndexedToShortArray
sortArray
maxByBooleanArray
partitionIntArray
getOrNullByteArray
firstOrNullCharArray
sortedWithByteArray
mapIndexedFloatArray
indicesArray
forEachFloatArray
sliceIntArray
reduceRightCharArray
unionBooleanArray
takeWhileArray
sortWithByteArray
lastOrNullArray
sortByDoubleArray
sortedCharArray
mapIndexedToIntArray
maxByteArray
distinctByDoubleArray
toCollectionLongArray
elementAtBooleanArray
distinctByDoubleArray
sortedByDescendingLongArray
distinctCharArray
foldRightBooleanArray
sortedByDescendingFloatArray
forEachIndexedIntArray
distinctDoubleArray
subtractByteArray
filterShortArray
dropLastShortArray
sortedWithIntArray
asIterableLongArray
associateByToLongArray
isEmptyIntArray
filterToArray
toLongArrayByteArray
reduceShortArray
flatMapTo
Array
takeIntArray
dropWhileByteArray
singleOrNullByteArray
maxWithArray
sortedByDescendingArray
isNotEmptyBooleanArray
asListBooleanArray
contentEqualsShortArray
takeLastWhileIntArray
lastIndexOfBooleanArray
indicesShortArray
reversedIntArray
sortedArrayBooleanArray
copyOfShortArray
sumByDoubleArray
takeCharArray
minByIntArray
takeArray
sumByShortArray
getOrElseCharArray
asSequenceCharArray
reduceByteArray
foldRightBooleanArray
elementAtLongArray
minWithLongArray
isNotEmptyCharArray
associateToShortArray
findFloatArray
isEmptyLongArray
sumIntArray
reverseBooleanArray
mapIndexedToShortArray
randomDoubleArray
component5Array
firstDoubleArray
component3DoubleArray
component2DoubleArray
component1LongArray
sliceCharArray
takeWhileArray
unionShortArray
maxByDoubleArray
associateToFloatArray
toTypedArrayShortArray
foldIndexedArray
unzipByteArray
forEachIndexedBooleanArray
minWithShortArray
takeLastShortArray
elementAtOrElseIntArray
indexOfDoubleArray
containsIntArray
singleLongArray
dropDoubleArray
foldRightLongArray
toTypedArrayIntArray
lastIndexIntArray
anyShortArray
asSequence	Array
maxArray
foldRightByteArray
sortedDescending	Array
mapBooleanArray
sortedByBooleanArray
component5Array
flatMapBooleanArray
component3BooleanArray
component2BooleanArray
component1BooleanArray
elementAtOrElseArray
sliceArrayLongArray
findFloatArray
groupByToArray
toShortArrayArray
toFloatArrayBooleanArray
component4IntArray
unionDoubleArray
copyOfRangeByteArray
foldRightIndexedFloatArray
findLastLongArray
component5LongArray
component4LongArray
component3LongArray
component2LongArray
component1ByteArray
takeWhileBooleanArray
lastOrNullFloatArray
filterNotIntArray
allIntArray
toMutableListBooleanArray
toHashSetBooleanArray
copyIntoCharArray
sumByDoubleArray
elementAtOrElseCharArray
groupByFloatArray
noneLongArray
dropLastIntArray
flatMapToFloatArray
mapIndexedCharArray
toCollectionLongArray
forEachIndexedShortArray
associateByteArray
sortedWithDoubleArray
sumByDoubleDoubleArray
reverseLongArray
contentEqualsShortArray
joinToCharArray
flatMapIntArray
reduceIndexedBooleanArray
maxByDoubleArray
sumLongArray
flatMapToLongArray
lastOrNullDoubleArray
sortedDescendingIntArray
mapToBooleanArray
joinToStringShortArray
singleOrNullByteArray
zipArray
distinctLongArray
lastArray
takeWhileCharArray
sortedDescendingArray
contentDeepToStringFloatArray
intersectArray
toIntArrayArray
groupingByCharArray
asListIntArray
countCharArray
reversedCollection
toTypedArrayShortArray
reduceRightIndexedByteArray
unionCharArray
copyOfIntArray
asListIntArray
foldIndexedDoubleArray
foldRightIndexedLongArray
sortDescendingBooleanArray
noneShortArray
minByBooleanArray
foldRightShortArray
foldRightIndexedCharArray
dropLastLongArray
dropWhileIntArray
copyOfLongArray
getOrElseArray
filterIndexedToArray
minByLongArray
randomDoubleArray
distinctByArray
takeLastArray
plusElementArray
elementAtOrNullLongArray
contentToStringByteArray
elementAtByteArray
reversedArray	Array
anyIntArray
forEachIndexedFloatArray
copyOfRangeBooleanArray
forEachDoubleArray
filterToDoubleArray
distinct
Array
findArray
mapIndexedToFloatArray
averageLongArray
takeLastDoubleArray
isEmptyDoubleArray
toTypedArrayDoubleArray
countCharArray
toHashSetCharArray
takeLastIntArray
sortedArrayDescendingIntArray
reversedArrayByteArray
minByLongArray
mapIndexedToByteArray
subtractLongArray
withIndexByteArray
mapToDoubleArray
mapIndexedToByteArray
reduceRightBooleanArray
allDoubleArray
elementAt	Array
allShortArray
allIntArray
sortDescendingLongArray
reduceIndexedIntArray
filterIndexedArray
elementAtByteArray
asSequenceShortArray
sumCharArray
sortedDoubleArray
averageByteArray
indexOfFloatArray
reduceRightIndexedBooleanArray
dropWhileBooleanArray
getOrElseFloatArray
unionArray
flatMapToDoubleArray
minWithDoubleArray
filterCharArray
noneArray
dropLastFloatArray
associateToFloatArray
dropIntArray
dropLastFloatArray
sortedByDescendingArray
firstOrNullBooleanArray
foldIndexedByteArray
takeLastBooleanArray
sumByByteArray
toHashSetLongArray
associateToCharArray
getOrNullCharArray
asIterableArray
reversedArrayFloatArray
containsBooleanArray
firstArray
reversedIntArray
reversedCharArray
sliceIntArray
indexOfFirstByteArray
filterIndexedFloatArray
sortedWithArray
copyOfRangeFloatArray
mapToArray
singleCharArray
firstArray
joinToStringByteArray
toSetBooleanArray
dropLongArray
lastIndexOfLongArray
copyOfRangeLongArray
singleArray
filterNotToBooleanArray
lastIndexFloatArray
filterNotToShortArray
toListShortArray
asIterableShortArray
reduceRightCharArray
filterIndexedToLongArray
filterIndexedToIntArray
associateByToFloatArray
plusLongArray
filterIndexedCharArray
elementAtOrNullIntArray
reduceRightIndexedLongArray
filterNotToByteArray
distinctBooleanArray
flatMapBooleanArray
singleCharArray
anyFloatArray
reduceFloatArray
foldRightFloatArray
sumByDoubleIntArray
takeLastByteArray
toMutableListBooleanArray
contentHashCodeDoubleArray
forEach
Array
lastCharArray
zipShortArray
lastIndexOfFloatArray
component5BooleanArray
randomDoubleArray
associateByDoubleArray
elementAtOrNullLongArray
unionFloatArray
singleOrNullDoubleArray
sortDescendingByteArray
filterIndexedToIntArray
toListShortArray
contentToStringByteArray
elementAtOrNullByteArray
noneDoubleArray
toSetIntArray
contentHashCodeDoubleArray
mapIndexedDoubleArray
lastByteArray
reduceIndexedFloatArray
lastIndexLongArray
singleOrNullLongArray
mapIndexedShortArray
indexOfLastArray
toCollectionDoubleArray
getOrNullLongArray
indicesCharArray
toTypedArrayFloatArray
firstOrNullBooleanArray
plusDoubleArray
toHashSetArray
getOrNullFloatArray
reverseArray
associateByToBooleanArray
findLastLongArray
firstOrNullCharArray
dropArray
distinctByFloatArray
asSequenceShortArray
reverseShortArray
filterNotLongArray
contentHashCodeByteArray
dropWhileBooleanArray
filterNotShortArray
sortedByDoubleArray
filterIndexedLongArray
mapToBooleanArray
groupByArray
flattenArray
asListShortArray
lastArray
copyOfCharArray
isNotEmptyDoubleArray
reduceArray
associateToLongArray
distinctByLongArray
asListBooleanArray
minByArray
dropLastWhileFloatArray
sortedDescendingLongArray
copyOfIntArray
getOrElseByteArray
joinToStringDoubleArray
dropWhileCharArray
toMutableListShortArray
copyIntoFloatArray
indexOfFirstShortArray
filterShortArray
sliceDoubleArray
indexOfLastCharArray
joinToStringShortArray
groupByToBooleanArray
forEachIndexedByteArray
foldIndexedFloatArray
distinctFloatArray
foldRightIndexedIntArray
indexOfLastArray
sliceLongArray
reversedCharArray
partitionCharArray
plusDoubleArray
maxByByteArray
component1ShortArray
isNotEmptyArray
dropWhileDoubleArray
dropLastShortArray
isEmptyDoubleArray
sortDoubleArray
toMutableSetFloatArray
asListByteArray
lastIndexByteArray
asIterableIntArray
contentEqualsByteArray
reversedFloatArray
copyOfLongArray
sortedDescendingDoubleArray
flatMapIntArray
randomCharArray
contentToStringCharArray
singleByteArray
reverseArray
asIterableIntArray
intersectArray
toCharArrayFloatArray
elementAtFloatArray
asIterableCharArray
indexOfDoubleArray
reversedByteArray
toCollectionLongArray
foldRightIndexedCharArray
randomArray
component5FloatArray
contentHashCodeArray
component3Array
component2Array
component1DoubleArray
contentToStringDoubleArray
lastIndexDoubleArray
minShortArray
minWithIntArray
distinctByFloatArray
zipByteArray
partitionCharArray
sortedArrayByteArray
contentToStringShortArray
intersectArray
lastIndexFloatArray
filterIndexedCharArray
filterNotToByteArray
sortDescendingBooleanArray
anyArray
indexOfDoubleArray
sortedWithLongArray
maxArray
contentDeepEqualsArray
lastOrNullIntArray
associateCharArray
joinToLongArray
mapIntArray
averageBooleanArray
maxWithBooleanArray
indexOfLastCharArray
reversedArrayShortArray
sliceArrayDoubleArray
takeLastIntArray
joinToLongArray
sortedByShortArray
toMutableListLongArray
filterNotByteArray
associateByToDoubleArray
forEachIndexedArray
forEachIndexedDoubleArray
partitionLongArray
forEachByteArray
associateCharArray
sortedByIntArray
isNotEmptyByteArray
isEmptyShortArray
minCharArray
elementAtArray
partitionLongArray
associateByBooleanArray
containsArray
sortedArrayDescendingByteArray
plusArray
toByteArrayBooleanArray
withIndexFloatArray
filterToByteArray
lastIndexOfShortArray
reduceIndexedShortArray
copyOfRangeFloatArray
toHashSetIntArray
minWithShortArray
toMutableSetShortArray
sortedBooleanArray
takeLastWhileArray
copyIntoDoubleArray
toListLongArray
copyIntoDoubleArray
sumByFloatArray
takeLastWhileArray
groupByCharArray
firstOrNullDoubleArray
indicesByteArray
dropLastWhileDoubleArray
sortedArrayArray
sortDescendingCharArray
copyIntoArray
toListDoubleArray
indexOfFirstLongArray
groupByToShortArray
forEachByteArray
singleDoubleArray
firstDoubleArray
firstOrNullByteArray
minWithFloatArray
forEachIntArray
minByLongArray
toListIntArray
dropLastWhileCharArray
sortedByDescendingShortArray
sortedByDescendingFloatArray
countByteArray
dropLastIntArray
toSetIntArray
sortedByteArray
randomShortArray
copyOfBooleanArray
toListArray
sortedDescendingDoubleArray
asSequenceShortArray
averageIntArray
component5IntArray
component4IntArray
component3IntArray
component2IntArray
component1Array
reduceIndexedShortArray
sortedDescendingIntArray
singleOrNullByteArray
sumDoubleArray
maxFloatArray
getOrNullIntArray
withIndexIntArray
filterNotFloatArray
foldDoubleArray
takeWhileArray
foldRightIndexedLongArray
anyShortArray
reversedArrayCharArray
associateByToFloatArray
minWithIntArray
sumByDoubleIntArray
lastOrNullFloatArray
sortBooleanArray
asSequenceCharArray
withIndexCharArray
contentHashCodeLongArray
zipLongArray
sliceArrayLongArray
noneShortArray
filterIndexedBooleanArray
groupByTo!Collection
getCommonCurrentBranchCollection
divergedComparator
thenDescendingComparator
thenByComparator
thenByDescendingComparator
thenComparatorComparator
reversedComparator
thenLazy
getValueFloat
isFiniteFloat
toBitsFloat
isNaNDouble
toRawBitsDouble
isInfiniteDouble
toBitsCompanion
fromBitsDouble
isFiniteFloat
isInfiniteFloat
toRawBitsDouble
isNaNDouble
toUInt
Int
toUIntShort
toUIntLong
toUIntFloat
toUIntByte
toUIntByte
orShort
or	Short
invByte
inv	Short
andByte
and	Short
xorByte
xorShort
toUByteInt
toUByteLong
toUByteByte
toUByteDouble
toULongInt
toULongLong
toULongByte
toULongShort
toULongFloat
toULongResult
throwOnFailureResult
getOrElseResult
foldResult
recoverCatchingResult
getOrDefaultResult
mapCatchingResult
getOrThrow
Result
mapResult
onSuccessAny
runCatchingResult
recoverResult
onFailureTriple
toListAny
toPair
toListLong
toUShortByte
toUShortShort
toUShortInt
toUShortAny
hashCodeKProperty0
isInitializedAny
takeUnlessAny
run
Any
takeIf	Any
applyAny
alsoAny
let4SuspendFunction1
startCoroutineUninterceptedOrReturn4SuspendFunction0
startCoroutineUninterceptedOrReturn-SuspendFunction0
createCoroutineUnintercepted-SuspendFunction1
createCoroutineUninterceptedByteArray
convertToTextPath
getDirectoryTreeFile
assertMatches-DirectoryContentSpec
generateInVirtualTempDirLC
applyComponent
isPanelWithToolbarCC
applyArray
createRow
enableIfCellBuilder
selectedCellBuilder
actsAsLabel FileChooserDescriptor
chooseFileJComboBox
selectedValueIsAbstractButton
selectedComponentPredicate
orComponentPredicate
andJComboBox
selectedValueMatchesJPasswordField
charsVcsContext
getRootsVcsContext
getCommonVcsFileStatus
attributesVirtualFile
findIgnorePsi-PsiFile
findOrCreateIgnoreBlockDescriptionPsiPsiElement
isNewLine PsiElement
createElementFromText!PsiElement
nextIgnoreGroupElement"IgnoredFileDescriptor
toPsiElementPsiFile
createIgnoreBlockVirtualFile
savePsiElement
createNewlineIterable
foldList
foldRight SuspendFunction0
createCoroutineSuspendFunction0
startCoroutineSuspendFunction1
startCoroutine SuspendFunction1
createCoroutineMutableMap
removeCollection
isNullOrEmptyJsonRpcServer
registerFromEpByteBuf
addBufferByteBuf
writeAsciiByteBuf
writeByteHttpRequest
isSignedRequestCloseable
use%PsiLanguageInjectionHost
contentRangeShred
innerRangeSegment
rangePsiElement
withNextSiblingsPsiElement
getCachedValuePsiElement
strictParentsPsiElement
parentsOfTypeSequence
skipTokensPsiElement
parentsPsiElement
contextOfTypePsiElement
siblingsPsiElement
parentOfTypePrebuiltStubsProviderBase
reset(ComponentManager
registerServiceInstanceFileSystem
file%InspectionProfileImpl
disableAllTools-ProjectInspectionProfileManager
createProfileProject
use#Description
getOwnOrClassAnnotation#Project
runInLoadComponentStateModeVirtualFile
writeChildSecureRandom
generateBytesCredentials
serialize(CredentialAttributes
toPasswordStoreableCharArray
toByteArrayAndClear!ExternalizableScheme
renameSchemeVirtualFile
getOrCreateChildIProjectStore
nameFile!StateMap
getChangedComponentNames$DataWriter
toBufferExposingByteArrayDataWriter
writeToElement
normalizeRootName.ComponentStoreImpl
childlessSaveImplementationArray
sortByDeprecatedKey
getAndClearString
startsWithMacroStorage
path*PathMacroManager
createTrackingSubstitutorPsiElement
prevSiblingsPsiElement
nextSiblingsJvmSubstitutor
toPsiSubstitutorJvmModifier
toPsiModifierAsyncPromise
catchErrorFuture
getResultOrThrowErrorPromise
asDeferredPromise
awaitLogger
errorIfNotMessagePromise
isRejectedPromise
thenAsyncAcceptPromise
thenPromise
processedRunAsyncPromise
computePromise
thenAsyncCollection
collectResultsPromise
isPendingActionCallback
toPromisePromise
thenRunCollection
allPromise
processedPromise
toActionCallbackAutoCloseable
useAnActionEvent
whenActiveDate
formatString
runActionPersistentStateComponent
load+LocalResourceRepository
getSampleDataOfType+SampleDataResourceItem
getDrawableResourcesModule
isSampleDataFile"RenderResources
resolveAsColorIconRenderResources
resolveLayout!RenderResources
resolveAsDrawable"RenderResources
resolveStringValueResourceItem
isAccessibleInXmlResourceUrl
resolveRenderResources
resolveDrawableRenderResources
resolveAsIconRenderResources
resolveColorPsiElement
resourceNamespaceResourceItem
isAccessibleInCode%RenderResources
resolveMultipleColors"RenderResources
makeColorWithAlpha#XmlElement
resolveResourceNamespaceRenderResources
resolveResourceType
isFileBased RenderResources
resolveStateList'RenderResources
resolveNullableResValue#ResourceRepository
getResourceItems#ResourceItem
getSourceAsVirtualFile ResourceValue
isAccessibleInCodeResourceType
isValueBasedResourceValue
isAccessibleInXmlVirtualFile
toIoFilePathString
toVirtualFilePathString
bufferedStreamVirtualFile
toPathStringFile
toVirtualFileFile
toLibraryRootVirtualFileProject
listenUntilNextSync"Project
runWhenSmartAndSyncedOnEdtProject
runWhenSmartAndSyncedDomElement
androidFacetPsiElement
androidFacetModule
androidFacetModule
addDependenciesModule
dependsOnAppCompatModule
dependsOnOldSupportLibModule
mapAndroidxNameModule
dependsOnModule
dependsOnAndroidxAndroidModel
generatedPathsBuilder
withProjectIdExecution
toProtoValue!SourceProvider
toAndroidSourceSetOldTestOptions
toNewOldJavaArtifact
toNewOldAndroidArtifact
toNewLevel2Library
toNewOldJavaSourceSet
toNewOldApiVersion
toNewTestOptions
toLegacyStubLibrary
toLegacy6BaseArtifact
toSourceProviderContainerForDefaultConfig!AndroidSourceSet
toSourceProviderClassField
toLegacyTestOptions
toLegacyJavaArtifact
toLegacyJavaArtifact
toLegacyStubApiVersion
toLegacyAndroidArtifact
toLegacy2BaseArtifact
toSourceProviderContainerForBuildTypeAndroidArtifact
toLegacyStubGradleProject
toJsonAndroidProject
toJsonGlobalLibraryMap
toJsonVariant
toJson!OldVariant
getAndroidTestArtifactOldVariant
getUnitTestArtifactOldBaseArtifact
isTestArtifact%OldBaseArtifact
getLevel2DependenciesLibrary
toProtoBaseArtifact
toProtoGradleTask
toProtoGradleProject
toProtoParsedValue
getTextNotSet
annotatedAny
annotateWithErrorParsedValue
maybeValueAny
annotatedParsedValue
maybeLiteralValueAny
annotateWithModelDescriptor
getValueResolvedPropertyModel
dslText$ResolvedPropertyModel
getParsedValue ResolvedPropertyModel
setDslTextResolvedPropertyModel
clearResolvedPropertyModel
asUnitResolvedPropertyModel
asFile%ResolvedPropertyModel
asLanguageLevelResolvedPropertyModel
asBoolean$ResolvedPropertyModel
setParsedValueResolvedPropertyModel
asIntResolvedPropertyModel
asAnyResolvedPropertyModel
asString&ResolvedPropertyModel
setLanguageLevel$ModelPropertyContext
parseEditorTextModelPropertyCore
getValue2ModelPropertyCore
annotateParsedResolvedMismatchBy#ModelPropertyContext
valueFormatter!ResolvedPropertyModel
addListItem'ResolvedPropertyModel
asParsedListValue$ResolvedPropertyModel
deleteListItemModelDescriptor
listProperty.ResolvedPropertyModel
asResolvedPropertiesList!ResolvedPropertyModel
addMapEntry'ResolvedPropertyModel
changeMapEntryKeyModelDescriptor
mapProperty$ResolvedPropertyModel
deleteMapEntry-ResolvedPropertyModel
asResolvedPropertiesMap&ResolvedPropertyModel
asParsedMapValueModelDescriptor
propertyString
toBooleanOrNull&SearchResult
toVersionValueDescriptorsPsPath
parentsCollection
combineFuture
getResultSafely#FoundArtifact
getRepositoryPriority%PsArtifactDependencySpec
toLibraryKey&GradleBuildModel
parsedModelModuleTypeCollection
combineKnownValues;PsResolvedModuleDependency
targetModuleResolvedDependenciesProjectBuildModel
modules'ProjectBuildModel
getModuleByGradlePathShadowedTreeNode
childNodes!DefaultTreeModel
updateChildrenOfDefaultTreeModel
initializeNodeAnnotated
renderToParsedValue
renderAnyToParsedValue
renderToJComponent
patchScrolling#ListenableFuture
handleFailureOnEdtListenableFuture
continueOnEdtListenableFuture
invokeLaterStatusText
toRendererBorder
adjustBorder!SimpleColoredComponent
toRendererJBTabbedPane
selectedTitle MergingUpdateQueue
enqueueTaggedMyNode
findChildForMyNode
getModel%ConfigurablesTreeModel
initializeNode'ConfigurablesTreeModel
updateChildrenOfMyNode
childNodesLogger
debugIfEnabledNlModel
schema NlComponent
effectiveDestinationNlComponent
classNameNlComponent
startDestinationIdNlComponent
idPathNlComponent
isActivityNlComponent
parentSequenceNlComponent
containsDestinationNlComponent
isOtherNlComponent
isNavigationNlComponent
defaultValueNlComponent
enterAnimationNlComponent
isArgumentNlComponent
popEnterAnimationNlComponent
includeFileNameNlComponent
singleTopNlComponent
actionDestinationIdNlComponent
argumentNameNlComponent
getActionTypeNlComponent
typeAttr!NlComponent
setAsStartDestinationNlComponent
popExitAnimationNlComponent
includeFileNlComponent
actionDestinationNlComponent
destinationType"NlComponent
findVisibleDestinationNlComponent
isInclude&NlComponent
createReturnToSourceActionNlComponent
nullableNlComponent
inclusiveNlComponent
startDestinationNlComponent
includeAttributeNlComponent
isStartDestinationNlComponent
supportsActionsNlComponent
popUpToNlComponent
isActionNlComponent
isFragmentNlComponent
visibleDestinations"NlComponent
effectiveDestinationIdNlComponent
exitAnimationNlComponent
isDestinationNlComponent
createActionNlComponent
getEffectiveSourceNlComponent
createSelfActionNlComponent
layoutNlComponent
isSelfActionNlComponent
uiNameNlComponent
createNestedGraphSceneComponent
flattenSceneComponent
getPositionData$NlModel
overrideConfigurationDensity5NlModel
currentActivityIsDerivedFromAppCompatActivity'NlModel
overrideConfigurationScreenSize NlModel
moduleDependsOnAppCompatGraphics2D
drawMultilineStringNlComponent
xNlComponent
wNlComponent
setBoundsNlComponent
componentClassName%NlComponent
isOrHasAndroidxSuperclassNlComponent
clearAttributes NlComponent
getMostSpecificClassNlComponent
paddingNlComponent
isOrHasSuperclassNlComponent
containsYNlComponent
nlComponentDataNlComponent
hNlComponent
viewInfoNlComponent
containsXNlComponent
hasNlComponentInfoNlComponent
getPaddingNlComponent
needsDefaultIdNlComponent
marginsNlComponent
getBaseline"NlComponent
isMorphableToViewGroupNlComponent
isGroupNlComponent
ensureLiveIdNlComponent
viewGroupHandlerNlComponent
viewHandlerNlComponent
containsNlComponent
ySceneComponent
drawBottomSceneComponent
drawCenterYSceneComponent
drawCenterXSceneComponent
drawRightSceneComponent
drawTopSceneComponent
drawLeftInt
toDpStringSceneContext
getSwingX&SceneComponent
retrieveToLeftAttributeSceneContext
getSwingYSceneComponent
getLeftSceneComponent
getRight,SceneComponent
retrieveBottomMarginAttribute*SceneComponent
retrieveLeftMarginAttribute%SceneComponent
retrieveBelowAttribute'SceneComponent
retrieveToRightAttribute)SceneComponent
retrieveAlignLeftAttributeSceneComponent
getBottom.SceneComponent
retrieveAlignParentTopAttributeSceneComponent
getDrawCenterYSceneComponent
getDrawCenterX%SceneComponent
retrieveAboveAttribute+SceneComponent
retrieveAlignBottomAttributeSceneComponent
getTop+SceneComponent
retrieveRightMarginAttribute)SceneComponent
retrieveTopMarginAttribute1SceneComponent
retrieveAlignParentBottomAttribute*SceneComponent
retrieveAlignRightAttribute0SceneComponent
retrieveAlignParentRightAttribute/SceneComponent
retrieveAlignParentLeftAttribute(SceneComponent
retrieveAlignTopAttributeColor
withAlphaUastVisitor
visitAllModule
getGradleVersionModule
isGradleVersionAtLeastFuture
listenInPoolThreadListenableFuture
addCallbackList
listenInPoolThreadList
successfulAsListList
whenAllCompleteModule
getModuleSystemProject
getSyncManagerProject
getProjectSystemDesignAssetSet
resolveValueString
pluralizeFile
getAllLeafFilesVirtualFile
allChildrenJTabbedPane
resizeTabbedPaneJList
setUIList
toAssetsAndroidFacet
namespacing
Int
moduloJComponent
registerKeyActionFloat
applyInsetsFloat
applyInsetGraphics2D
setColorAndAlphaTextRange
unionPsiElement
createSmartPointerElementPattern
asPsiPattern3PsiReferenceRegistrar
registerUastReferenceProviderCharBuffer
offloadPrefixToBuffer
flipBackCharsetDecoder
tryDecode CharBuffer
endsWithLineSeparatorCloseable
closeFinallyFile
copyTo	File
rootFile
isRootedFile
outputStreamFile
bufferedWriterFile
readLinesFile
deleteRecursivelyFile
normalizeFile
resolveSibling	File
walkFile
inputStreamFile
relativeToFile
invariantSeparatorsPathFile
nameWithoutExtensionFile
writeTextFile
forEachLineFile
forEachBlockFile
relativeToOrNullFile
printWriterFile
writerFile
readTextFile
walkBottomUpFile
toComponentsFile
writeBytesFile
appendBytesFile
relativeToOrSelfFile
bufferedReaderFile
useLinesFile
resolveFilePathComponents
normalizeFile
toRelativeStringOrNullFile
walkTopDownFile
rootNameString
getRootLengthFile
copyRecursivelyFile
endsWithFile
toRelativeStringFile
readBytesFile
subPathFile
readerFile
extensionList
normalizeFile
appendTextFile
startsWithOutputStream
bufferedInputStream
readBytesInputStream
copyToInputStream
bufferedReaderOutputStream
bufferedWriterByteArray
inputStreamString
byteInputStreamBufferedInputStream
iteratorOutputStream
writerInputStream
readerReader
useLinesWriter
bufferedReader
bufferedReader
copyToString
readerReader
readLinesReader
forEachLineURL
readTextURL
readBytesReader
readTextBufferedReader
lineSequenceClass
kotlinAnnotation
annotationClassKClass
javaClassArray
isArrayOfKClass
javaKClass
javaPrimitiveTypeKClass
javaObjectTypeAny
javaClassFloat
nextDownDouble
IEEEremFloat
nextTowardsFloat
nextUp	Float
ulpFloat
IEEEremMatchResult
rangeIterable
toIntMatcher
findNextMatcher
matchEntireChar
categoryChar
isJavaIdentifierStartChar
directionalityChar
isTitleCaseChar
isJavaIdentifierPartChar
isUpperCaseChar
isLowerCaseChar
isDigitChar
isLetterOrDigitChar
isLetterChar
isIdentifierIgnorableChar
isISOControlChar
toTitleCaseChar
isDefinedString
regionMatchesString
toBigDecimalOrNullString
toPatternCompanion
formatString
offsetByCodePointsString
toBigIntegerOrNullString
formatString
internAppendable
appendlnString
contentEqualsString
codePointBeforeString
codePointCountString
toBigDecimalString
toBigIntegerStringBuilder
setPattern
toRegexString
toByteArrayStringBuilder
appendlnString
toCharArrayString
codePointAtCharSequence
toSortedSetRandom
asKotlinRandomRandom
asJavaRandomFloat
rangeToSequence
toSortedSetEnumeration
asSequenceLock
withLockReentrantReadWriteLock
writeReentrantReadWriteLock
readThreadLocal
getOrSetTimer
scheduleTimer
scheduleAtFixedRate/BaseContinuationImpl
getDebugMetadataAnnotation-BaseContinuationImpl
getStackTraceElementImplBaseContinuationImpl
getLabel3BaseContinuationImpl
getSpilledVariableFieldMappingAutoCloseable
closeFinally#CoroutineContext
toCoroutineContext'Function2
toExperimentalSuspendFunction1ContinuationInterceptor
toContinuationInterceptorContinuation
toContinuation/CoroutineContext
toExperimentalCoroutineContext'Function1
toExperimentalSuspendFunction'Continuation
toExperimentalContinuation'Function3
toExperimentalSuspendFunction=ContinuationInterceptor
toExperimentalContinuationInterceptorMatchGroupCollection
getSequence
asStreamStream
asSequenceLongStream
toListIntStream
asSequenceDoubleStream
toListDoubleStream
asSequenceLongStream
asSequenceIntStream
toListStream
toListMap
getOrDefault0CollectionAssertionSession
elementAtShouldComply.CollectionAssertionSession
lastElementShouldBe,CollectionAssertionSession
elementAtShouldBe&CollectionAssertionSession
shouldBeSet'CollectionAssertionSession
sizeShouldBe#CollectionAssertionSession
shouldBe&CollectionAssertionSession
containsAllIterator
remainingConcurrentMap
getOrPutMap
toPropertiesMap
toSortedMapUShortArray
binarySearchUIntArray
binarySearchUShortArray
fillUByteArray
binarySearchULongArray
binarySearchULongArray
fillUByteArray
fillUIntArray
fillMutableMap
mapValuesInPlaceIterable
toSortedSetEnumeration
iteratorEnumeration
toListLongArray
toSortedSetFloatArray
binarySearchArray
binarySearchFloatArray
fillByteArray
copyOfRangeImplByteArray
toStringArray
copyOfRangeImplCharArray
fillShortArray
fillIntArray
toSortedSetShortArray
binarySearchByteArray
fillCharArray
copyOfRangeImplBooleanArray
toSortedSetBooleanArray
fillByteArray
toSortedSetBooleanArray
copyOfRangeImplLongArray
fillShortArray
toSortedSetIntArray
copyOfRangeImpl
Array
fillFloatArray
copyOfRangeImplDoubleArray
fillIntArray
fillIntArray
binarySearchLongArray
binarySearchArray
toSortedSetFloatArray
toSortedSetShortArray
copyOfRangeImplLongArray
copyOfRangeImplDoubleArray
binarySearchCharArray
toSortedSetDoubleArray
toSortedSetCharArray
binarySearchArray
contentDeepHashCodeImplByteArray
binarySearchDoubleArray
copyOfRangeImplFlow
subscribeFlow
concatMapFlow
observeOnFlow
subscribeOnFlow
onErrorResume
Flow
mergeFlow
flatMapFlowCollector
withContextFlow
publishOnFlow
flattenFlow
switchMapFlow
filterNot
Flow
toSetFlow
dropWhileBroadcastChannel
asFlow	Flow
takeFlow
singleFlow
flowOnFlow
onErrorReturnFlow
delayEach	Flow
foldIterator
asFlowAtomicBoolean
release	Flow
dropFlow
toCollection
Flow
countFlow
combineLatestIntRange
asFlowFlow
produceInSequence
asFlowFlow
onErrorCollectFlow
flattenMergeFlow
delayFlowFlow
onEachFlow
debounceFlow
zipLongRange
asFlow CoroutineScope
fixedPeriodTickerFlow
mapCoroutineScope
asFairChannelSelectBuilder
onReceiveFlow
broadcastInFlow
mapNotNullFlow
transformFlow
reduceFlow
filterNotNullFlow
flowWithAtomicBoolean
tryAcquireIterable
asFlowArray
asFlowFlow
collectFlow
takeWhileSuspendFunction0
asFlowFlow
distinctUntilChangedFlow
collectSafely
Flow
retryCoroutineScope
asChannelFlow
flattenConcatFlow
filterIsInstanceFunction0
asFlowFlow
distinctUntilChangedByLongArray
asFlowIntArray
asFlowFlow
flatMapMergeFlow
sampleFlow
singleOrNullFlow
filterFlow
flatMapConcatFlow
toListBigInteger
plusBigInteger
shrBigInteger
orBigDecimal
timesBigDecimal
modBigDecimal
unaryMinusBigInteger
shlBigDecimal
incLong
toBigIntegerInt
toBigIntegerBigInteger
unaryMinusFloat
toBigDecimalBigInteger
timesBigInteger
remDouble
toBigDecimalBigInteger
xorBigDecimal
decBigInteger
invBigInteger
incBigDecimal
minusBigInteger
toBigDecimalBigDecimal
remBigDecimal
divBigInteger
divLong
toBigDecimalInt
toBigDecimalBigInteger
andBigInteger
decBigDecimal
plusBigInteger
minusThrowable
addSuppressedThrowable
stackTraceThrowable
printStackTraceString
plusAny
toStringMutex
withLockDuration
coerceToMillisSelectBuilder
onTimeoutCompletionStage
asDeferredDeferred
asCompletableFutureJob
asCompletableFutureCompletionStage
awaitJob
setupCancellationCoroutineScope
futureCoroutineScope
actorCoroutineScope
produceReceiveChannel
broadcastCoroutineScope
broadcastReceiveChannel
noneReceiveChannel
sumByDoubleReceiveChannel
maxByReceiveChannel
lastReceiveChannel
mapNotNullToBroadcastChannel
consumeReceiveChannel
distinctReceiveChannel
filterIndexedReceiveChannel
toCollectionReceiveChannel
indexOfReceiveChannel
withIndexReceiveChannel
filterNotNullToReceiveChannel
cancelConsumedReceiveChannel
flatMapReceiveChannel
reduceReceiveChannel
consumeReceiveChannel
mapNotNullReceiveChannel
firstOrNullReceiveChannel
filterNotReceiveChannel
indexOfFirstReceiveChannel
reduceIndexedReceiveChannel
associateByReceiveChannel
elementAtOrNullReceiveChannel
mapReceiveChannel
groupByToReceiveChannel
filterNotTo"ReceiveChannel
mapIndexedNotNullToReceiveChannel
associateReceiveChannel
partitionReceiveChannel
toChannelReceiveChannel
requireNoNullsReceiveChannel
consumesReceiveChannel
countReceiveChannel
firstReceiveChannel
toSetReceiveChannel
mapIndexedToReceiveChannel
indexOfLastReceiveChannel
maxWithReceiveChannel
minWithReceiveChannel
foldIndexedReceiveChannel
anyReceiveChannel
filterIndexedToReceiveChannel
findReceiveChannel
groupByReceiveChannel
toListReceiveChannel
elementAtReceiveChannel
toMapReceiveChannel
singleOrNullBroadcastChannel
consumeEach ReceiveChannel
mapIndexedNotNullReceiveChannel
filterReceiveChannel
toMutableSetReceiveChannel
dropWhileReceiveChannel
consumeEachReceiveChannel
associateByToReceiveChannel
singleReceiveChannel
dropReceiveChannel
takeReceiveChannel
distinctByReceiveChannel
takeWhileReceiveChannel
findLastReceiveChannel
filterNotNull!ReceiveChannel
consumeEachIndexedReceiveChannel
mapToReceiveChannel
lastIndexOfReceiveChannel
minByReceiveChannel
filterToReceiveChannel
associateToSendChannel
sendBlockingReceiveChannel
sumByReceiveChannel
zipReceiveChannel
elementAtOrElseReceiveChannel
mapIndexedReceiveChannel
allReceiveChannel
toMutableListReceiveChannel
lastOrNullReceiveChannel
foldAbstractCoroutine
tryRecoverReentrantLock
withLock)MainDispatcherFactory
tryCreateDispatcher!MainCoroutineDispatcher
isMissing
Any
unwrapThrowable
causeAndStacktrace#StackTraceElement
elementWiseEqualsArray
frameIndexThrowable
sanitizeStackTraceStackTraceElement
isArtificialClass
fieldsCountOrDefaultClass
fieldsCount*SuspendFunction1
startCoroutineCancellable*SuspendFunction0
startCoroutineCancellable+AbstractCoroutine
startUndispatchedOrReturn,SuspendFunction1
startCoroutineUnintercepted+SuspendFunction1
startCoroutineUndispatched$AbstractCoroutine
undispatchedResult+SuspendFunction0
startCoroutineUndispatched,SuspendFunction0
startCoroutineUnintercepted8AbstractCoroutine
startUndispatchedOrReturnIgnoreTimeoutCoroutineContext
ensureActiveCoroutineContext
cancelChildrenJob
cancelChildren2CancellableContinuation
cancelFutureOnCancellationJob
cancelAndJoinJob
cancelFutureOnCompletionCoroutineContext
cancelJob
disposeOnCompletionCoroutineContext
isActiveJob
ensureActiveCollection
awaitAllCollection
joinAllAny
classSimpleNameContinuation
toDebugStringAny
hexAddressCoroutineContext
delay CoroutineContext
checkCompletionCoroutineDispatcher
invokeCoroutineScope
launchCoroutineScope
async%ExecutorService
asCoroutineDispatcherExecutor
asCoroutineDispatcherContinuation
resumeDirect&Continuation
resumeDirectWithExceptionDispatchedTask
resumeContinuation
resumeCancellable(DispatchedContinuation
executeUnconfinedDispatchedTask
dispatch!Continuation
resumeWithStackTrace(DispatchedContinuation
yieldUndispatched%DispatchedTask
runUnconfinedEventLoop+Continuation
resumeCancellableWithExceptionDispatchedTask
resumeUnconfined Throwable
addSuppressedThrowableAny
boxIncompleteAny
unboxStateContinuation
resumeMode$Continuation
resumeUninterceptedMode$Continuation
resumeWithExceptionModeInt
isCancellableModeInt
isDispatchedMode1Continuation
resumeUninterceptedWithExceptionModeSchedulerTask
taskContextSchedulerTaskContext
afterTaskCoroutineScope
isActiveCoroutineScope
ensureActiveCoroutineScope
plusCoroutineScope
cancelCoroutineContext
coroutineNameCoroutineContext
minusId"CoroutineScope
newCoroutineContextCancelHandlerBase
asHandlerCompletionHandlerBase
asHandlerCompletionHandler
invokeItThreadLocal
ensurePresentThreadLocal
isPresentThreadLocal
asContextElementResult
toState-CancellableContinuation
disposeOnCancellation,CancellableContinuation
removeOnCancellationCompletionHandler
isHandlerOfList
groupActionsByTypeCaller
arity-CallableMemberDescriptor
expectedReceiverType/CallableMemberDescriptor
hasInlineClassReceiverClass
getBoxMethodKotlinType
toInlineClass+Caller
createInlineClassAwareCallerIfNeeded#DeclarationDescriptor
toInlineClass Any
coerceToExpectedReceiverTypeClass
getUnboxMethodPsiModifierListOwner
setStatic TemplateContext
setupTypeElement"TemplateContext
setupParameterNameTemplateContext
setupParametersList
orObjectJvmClass
toJavaClassOrNullPsiType
toExpectedTypeKind
infoKind
Class
descClass
createArrayTypeType
parameterizedTypeArgumentsClass
wrapperByPrimitive,Class
isEnumClassOrSpecializedEnumEntryClassClass
functionClassArityClass
primitiveByWrapperClass
classIdClass
safeClassLoader#PsiMethod
extractGetterTemplateData#PsiMethod
extractSetterTemplateDataArray
findAnnotationArray
getAnnotations"PsiExpression
isWithinStaticMemberPsiExpression
isInStaticContext%PsiExpression
isWithinConstructorCall$PsiExpression
isWithinStaticMemberOfClassLoader
tryLoadClassClassId
toRuntimeFqNameConstantValue
toRuntimeValue$ReflectKotlinClass
packageModuleNameAny
asKCallableImplAny
asKPropertyImpl,CallableDescriptor
instanceReceiverParameterAnnotated
computeAnnotationsVisibility
toKVisibility)AnnotationDescriptor
toAnnotationInstanceAny
asKFunctionImplClassDescriptor
toJavaClass!Accessor
computeCallerForAccessor6PropertyDescriptor
isJvmFieldPropertyInCompanionObjectAccessor
boundReceiverMethod
signatureClass
getOrCreateModuleKClassifier
jvmErasureKType
jvmErasureKClass
jvmNameKCallable
isAccessibleFunction
reflectKProperty
javaGetterField
kotlinPropertyMethod
kotlinFunctionKProperty
javaFieldKType
javaTypeConstructor
kotlinFunctionKFunction
javaMethodKMutableProperty
javaSetterMember
getKPackageKFunction
javaConstructorKType
isSubtypeOfKType
withNullabilityKType
isSupertypeOfKCallable
findParameterByNameKCallable
callSuspendKCallable
valueParametersKCallable
instanceParameter$KCallable
extensionReceiverParameterKCallable
callSuspendByKProperty1
getExtensionDelegateKProperty2
getExtensionDelegateKClassifier
starProjectedTypeKClassifier
createType'KClass
declaredMemberExtensionFunctionsKClass
superclassesKClass
declaredMemberFunctionsKClass
allSupertypes(KClass
declaredMemberExtensionPropertiesKClass
declaredMemberPropertiesKClass
createInstanceKClass
isSubclassOfKClass
isSuperclassOfKCallableImpl
isNotExtensionKClass
allSuperclasses KClass
memberExtensionPropertiesKClass
safeCastKClass
memberFunctionsKClass
functionsKClass
primaryConstructorKClass
memberPropertiesKClass
castKClass
staticFunctionsKClass
companionObjectInstanceKCallableImpl
isExtensionKClass
memberExtensionFunctionsKClass
companionObjectKClass
staticPropertiesKClass
declaredFunctionsKClass
declaredMembersKClass
defaultType KAnnotatedElement
findAnnotationAny
transformKotlinToJvmUElement
createUastSmartPointerJBPair
toNotNullJBPair
component2JBPair
component1Boolean
condstrAny
printToString	Any
printLifetime
assertAliveLifetime
badStatusForAddActionsLifetime
isAliveLifetime
isEternalLifetime
waitTerminationLifetime
intersectLifetime
onTerminationLifetime
viewLifetime
plusAssignLifetime
viewNotNullLifetime
throwIfNotAliveISource
adviseWithPrevISource
flowIntoISource
adviseNotNullISource
adviseUntilISource
mapISource
adviseOnceISource
adviseNotNullOnceISource
adviseEternalIProperty
setValueIVoidSignal
fireIVoidSource
adviseIOptProperty
valueOrDefaultIViewable
viewNotNullIOptPropertyView
hasValueIOptPropertyView
valueOrThrowIAsyncSource
adviseOnIOptPropertyView
asNullableIViewableMap
createIsEmptyIViewableMap
createIsNotEmptyIViewableSet
createIsNotEmpty"IMutableViewableMap
toViewableListIViewableSet
createIsEmptyIViewableList
viewableTailIViewable
whenTrueIOptPropertyView
andIViewable
whenFalseIOptPropertyView
orIOptPropertyView
hasTrueValueIPropertyView
notIOptPropertyView
notIPropertyView
andIPropertyView
orIPropertyView
mapIMutablePropertyBase
bindISource
distinctIterable
foldOptIOptPropertyView
mapList
foldRightOptIOptPropertyView
composeIPropertyView
composeISource
filterOutputStream
writeKMutableProperty0
usingValueAny
usingTrueFlagImmutableStack
tailList
toImmutableStackTlsBoxed
forbidReentrancyMaybe
asNullableLogger
traceLogger
warn
Logger
logLogger
catchLogger
errorLogger
infoByteArray
putLongByteArray
parseLongTypedBitSlice
getBitSlice
nextSliceLowMutableMap
putUniqueMutableMap
putArray
forEachReversedArray
insertMutableMap
getOrCreateMutableMap
addUniqueMutableCollection
addUniqueArray
remove	Map
firstList
restOrNullMutableMap
blockingPutUniqueMap
firstOrNullISource
asPropertyLong
toZonedDateTimeNlComponent
createChild#NlComponent
getLiveAndroidAttributeListenableFuture
transformDataPack
containsAllDataPack
subgraphDifferenceRefsModel
findBranchModification
hideRowModification
connectRowsCollapsedGraph
modifyLiteLinearGraph
walkLinearGraph
subgraphDifferenceLiteLinearGraph
isAncestorLinearGraph
getReachableNodes&LiteLinearGraph
getCorrespondingParentIterable
minOrDefaultIterable
maxOrDefaultModification
hasDottedEdgesLinearGraph
findAncestorNodeMultiMap
unionTIntHashSet
removeAllCollection
firstNotNullTIntObjectHashMap
removeAll"VcsLogTextFilter
caseSensitiveText&VcsLogFilterCollection
getPresentationVcsLogFilterCollection
withoutVcsLogFilterCollection
withVcsLogFilter
getPrefixVcsLogFilterCollection
matchesOpenTHashSet
replaceCollection
matchesNothingCommitOptions
allOptionsCommitOptions
isEmptyCommitContext
amendDataCommitOptions
restoreStateCommitOptions
refreshCommitOptions
saveStateCommitContext
isAmendCommitMode'CommitOptions
changeListSpecificOptions!CommitExecutor
getPresentableTextCommitOptions
changeListChanged+CommitOptions
saveChangeListSpecificOptions"CommitWorkflowUi
getDisplayedPathsString
fixUnderscoreMnemonic$CheckinProjectPanel
isNonModalCommit!CommitWorkflowUi
getIncludedPathsCollection
toPartialAwareSetInputStream
bufferedJBPopup
showAboveChar
isSurrogateChar
equals	Char
plusChar
isLowSurrogateChar
isWhitespaceChar
isHighSurrogateChar
toUpperCaseChar
toLowerCaseCharSequence
regionMatchesString
toLowerCaseString
indentWidthString
toIntString
toByteString
nativeIndexOfString
toBooleanString
startsWithCharSequence
isBlankString
trimIndent Companion
CASE_INSENSITIVE_ORDERString
toFloatOrNullString
replaceString
compareToString
nativeLastIndexOfByte
toStringString
decapitalizeInt
toStringStringBuilder
clearString
toUpperCaseString
replaceFirstString
trimMarginCharSequence
repeatString
toLongList
reindentString
equalsString
toFloatString
replaceIndentString
replaceIndentByMarginString
toDoubleOrNullString
endsWithString
prependIndentString
toDoubleString
toShortLong
toStringShort
toStringULong
toStringString
toUIntOrNullString
toUIntString
toULongOrNullString
toULongUInt
toStringUShort
toStringString
toUShortOrNullString
toUByteString
toUByteOrNullString
toUShortUByte
toStringCharSequence
trimStartCharSequence
replaceRangeString
removeSuffixString
removeSurroundingCharSequence
commonSuffixWithCharSequence
rangesDelimitedByCharSequence
startsWithCharSequence
regionMatchesImplString
padStartCharSequence
subSequenceCharSequence
isNotBlankString
subSequenceString
substringAfterString
substringString
replaceAfterCharSequence
isNullOrEmptyString
replaceAfterLastCharSequence
replaceFirstCharSequence
lastIndexOfCharSequence
removePrefixCharSequence
isNotEmptyCharSequence
padEndCharSequence
removeSuffixCharSequence
indexOfCharSequence
containsCharSequence
indexOfAnyCharSequence
trimEndString
substringAfterLastString
padEndCharSequence
endsWithCharSequence
trimString
orEmptyCharSequence
removeSurroundingCharSequence
lastIndexCharSequence
substringCharSequence
splitToSequenceString
trimStartCharSequence
matchesCharSequence
hasSurrogatePairAtString
substringBeforeLastCharSequence
padStartCharSequence
isEmptyCharSequence
findLastAnyOfCharSequence
ifBlankCharSequence
replaceCharSequence
removeRangeString
removeRangeCharSequence
iteratorString
trimEndCharSequence
lineSequenceCharSequence
lastIndexOfAnyCharSequence
indicesCharSequence
splitCharSequence
commonPrefixWithCharSequence
ifEmptyCharSequence
findAnyOfString
replaceRangeString
replaceBeforeCharSequence
linesString
replaceBeforeLastCharSequence
isNullOrBlankString
trimString
substringBeforeString
removePrefixAppendable
appendElementStringBuilder
appendAppendable
appendCharSequence
filterIndexedCharSequence
mapCharSequence
chunkedCharSequence
toCollectionString
dropCharSequence
elementAtOrElseString
filterNotCharSequence
dropWhileString
takeLastCharSequence
takeLastCharSequence
forEachCharSequence
filterCharSequence
indexOfFirstCharSequence
foldRightCharSequence
sliceCharSequence
indexOfLastCharSequence
associateToCharSequence
toSetCharSequence
getOrElseCharSequence
singleCharSequence
foldRightIndexedCharSequence
associateByCharSequence
anyCharSequence
forEachIndexedCharSequence
chunkedSequenceCharSequence
countCharSequence
associateByToCharSequence
findCharSequence
foldString
filterIndexedCharSequence
findLastCharSequence
toList CharSequence
mapIndexedNotNullToCharSequence
toHashSetCharSequence
takeCharSequence
reduceString
takeLastWhileCharSequence
firstCharSequence
singleOrNullCharSequence
elementAtOrNullCharSequence
groupByToCharSequence
reduceRightIndexedString
dropLastCharSequence
sumByDoubleCharSequence
associateWithToCharSequence
reduceIndexedCharSequence
mapNotNullToCharSequence
takeLastWhileCharSequence
dropLastWhileCharSequence
reduceRightCharSequence
dropCharSequence
getOrNullCharSequence
minCharSequence
filterToCharSequence
takeWhileCharSequence
withIndexCharSequence
mapIndexedCharSequence
groupByCharSequence
lastOrNullCharSequence
flatMapToCharSequence
filterIndexedToCharSequence
filterNotCharSequence
maxWithCharSequence
elementAtCharSequence
asIterableCharSequence
randomCharSequence
minWithString
sliceCharSequence
allCharSequence
toMutableListCharSequence
mapToString
dropLastWhileCharSequence
windowedSequenceCharSequence
minByCharSequence
groupingByCharSequence
noneCharSequence
partitionCharSequence
associateWithCharSequence
lastCharSequence
sumByString
takeWhileCharSequence
flatMapCharSequence
mapNotNullCharSequence
dropLastCharSequence
mapIndexedToCharSequence
windowedCharSequence
zipCharSequence
reversedString
dropWhileString
partitionCharSequence
mapIndexedNotNullCharSequence
asSequenceCharSequence
firstOrNullCharSequence
maxByString
takeCharSequence
onEachString
filterCharSequence
maxCharSequence
zipWithNextCharSequence
filterNotToString
reversedCharSequence
associateCharSequence
foldIndexedString
toRegexString
toShortOrNullString
toIntOrNullString
toLongOrNullString
toByteOrNullRandom
nextLongInt
takeUpperBitsRandom
nextIntRandom
nextUIntRandom
nextUBytesRandom
nextULongLong
toIntExactOrNullLong
coerceAtMostLong
toShortExactOrNullCharRange
randomShort
untilDouble
toLongExactOrNullLongProgression
reversedChar
downToLong
coerceAtLeastDouble
rangeToByte
downTo
Int
downToDouble
toShortExactOrNullFloat
toShortExactOrNullComparable
rangeTo
Byte
untilCharRange
contains	Int
untilLongProgression
stepShort
coerceInFloat
coerceAtLeastInt
toByteExactOrNullShort
toByteExactOrNull
Char
untilInt
coerceAtMostIntProgression
step
Long
untilClosedRange
containsLongRange
randomLong
downToComparable
coerceAtMostShort
coerceAtLeastFloat
toIntExactOrNullFloat
toByteExactOrNullLong
coerceInShort
downToFloat
coerceAtMostIntRange
containsComparable
coerceAtLeastCharProgression
reversedIntProgression
reversedByte
coerceAtLeastDouble
coerceAtMostIntRange
randomDouble
toByteExactOrNullByte
coerceAtMostByte
coerceInDouble
toIntExactOrNullLong
toByteExactOrNullFloat
toLongExactOrNullComparable
coerceInInt
coerceAtLeastFloat
coerceInCharProgression
stepShort
coerceAtMostLongRange
containsInt
toShortExactOrNullDouble
coerceAtLeastDouble
coerceInInt
coerceInUShort
coerceAtMostUInt
coerceAtMostULong
coerceAtLeastUInt
coerceInUByte
coerceInULong
coerceAtMostULong
coerceInUByte
coerceAtMostUShort
coerceInULong
untilUIntProgression
stepULong
downToUByte
downToUIntRange
randomUByte
untilULongProgression
stepUShort
untilUShort
downToUInt
downToUIntRange
containsUByte
coerceAtLeastULongProgression
reversed
UInt
untilUIntProgression
reversedUInt
coerceAtLeastULongRange
randomULongRange
containsUShort
coerceAtLeastDouble
roundToLongDouble
nextUp
Float
signDouble
signInt
absoluteValueDouble
roundToInt	Long
signDouble
nextTowards
Double
ulpInt
signDouble
absoluteValueFloat
absoluteValue
Double
powDouble
withSignDouble
nextDownFloat
roundToLongFloat
withSignLong
absoluteValueFloat
roundToInt	Float
powSequence
sumBySequence
mapToSequence
sortedSequence
minBySequence
indexOfSequence
dropSequence
partitionSequence
constrainOnceSequence
flatMapSequence
mapNotNullToSequence
sortedWithSequence
foldIndexedSequence
maxWithSequence
associateByToSequence
elementAtOrNullSequence
filterSequence
plusSequence
withIndexSequence
takeWhileSequence
singleOrNullSequence
zipWithNextSequence
filterNotToSequence
filterIsInstanceSequence
containsSequence
maxBySequence
averageSequence
windowedSequence
minSequence
lastOrNullSequence
distinctBySequence
reduceIndexedSequence
indexOfFirstSequence
minusElementSequence
elementAtSequence
asIterableIterator
asSequenceSequence
groupByToSequence
groupBySequence
reduceSequence
indexOfLastSequence
associateSequence
mapIndexedNotNullToSequence
noneSequence
flattenSequence
groupingBySequence
lastSequence
lastIndexOfSequence
allSequence
distinctSequence
requireNoNullsSequence
filterNotNullSequence
mapNotNullSequence
mapIndexedToSequence
forEachIndexedSequence
associateToSequence
joinToSequence
joinToStringSequence
filterIndexedSequence
mapIndexedSequence
sortedByDescendingSequence
countSequence
takeSequence
firstSequence
flatMapToSequence
ifEmptySequence
minusSequence
zipSequence
sumByDoubleSequence
associateWithToSequence
mapIndexedNotNullSequence
sortedDescendingSequence
toMutableSetSequence
asSequenceSequence
associateWithSequence
filterIsInstanceToSequence
maxSequence
dropWhileSequence
filterNotSequence
toMutableListSequence
minWithSequence
mapSequence
singleSequence
chunkedSequence
elementAtOrElseSequence
toCollectionSequence
firstOrNullSequence
orEmptySequence
forEachSequence
associateBySequence
findLastSequence
filterToSequence
toListSequence
unzipSequence
findSequence
foldSequence
plusElementSequence
filterIndexedToSequence
toSetSequence
onEachSequence
sortedBySequence
toHashSetSequence
filterNotNullToSequence
anySequence
sum Continuation
resumeWithExceptionContinuation
resumeMap
withDefaultMap
getOrImplicitDefaultMap
forEachMutableMap
withDefaultIterable
containsIterable
sum	Array
sumContinuation
interceptedAccessModifier
toAsmCodeLanguageLevel
toAsmCode!DirectoryContentBuilder
classFileHttpRequest
hostName+HttpRequest
isWriteFromBrowserWithoutOriginHttpRequest
referrerUrl
hostByteBuf
writeUtf8Bootstrap
handlerHttpRequest
isLocalOriginEventLoop
shutdownIfOioByteBuf
releaseIfError!Channel
closeAndShutdownEventLoopHttpRequest
hostHttpRequest
isRegularBrowserHttpRequest
origin ChannelFuture
addChannelListenerBootstrap
connectRetryingHttpRequest
userAgentByteBuf
readUtf8'EventLoopGroup
serverSocketChannelClassChannel
uriSchemeReader
readCharSequenceString
decodeBase64String
encodeUrlQueryParameterByteBuffer
toByteArray Path
parentSystemIndependentPath
Path
writePath
isWritablePath
writeSafePath
readBytesPath
lastModifiedPath
outputStreamPath
inputStreamPath
isFilePath
sizeOrNull	Path
sizePath
inputStreamSkippingBomPath
existsPath
writeChildPath
createFilePath
deletePath
createSymbolicLink	Path
movePath
readTextPath
isDirectory	Path
copyPath
readCharsPath
systemIndependentPathPath
createDirectoriesPath
basicAttributesIfExistsPath
deleteWithParentsIfEmptyPath
isHiddenPath
deleteChildrenStartingWithPath
inputStreamIfExistsPath
directoryStreamIfExistsList
computeIfAnyCollection
forEachGuaranteedStream
isEmptyMutableList
catchArray
forEachGuaranteedStream
notNullizeCollection
filterSmartList
toMutableSmartListCollection
filterSmartMutableArray
computeIfAnyIterator
computeIfAnyCollection
mapSmartNotNullCollection
mapSmartMutableMap
putValueStream
getIfSingleArray
streamCollection
mapSmartSetArray
mapSmartList
nullizeSequence
withPreviousMap
reversePair
toNotNullAny
castSafelyToCollection
toArrayElement
attribute Element
getAttributeBooleanValueElement
getOrCreateElement
addOptionTagElement
isEmptyParent
writeElement
toByteArray!Element
toBufferExposingByteArrayList
splitByPredicateCharArray
nullizeString
nullizeString
trimMiddleGraphics2D
paint2DLineGraphics2D
fill2DRectIdeGlassPane
mouseMovedIdeGlassPane
childAtMouseJComponent
childAtMouseDisposable
defineNestedLifetimeDisposable
attachChildLifetime
createNestedDisposableDisposable
doIfAliveDisposable
attachDisposable
createLifetimePath
safeOutputStream Project
isExternalStorageEnabledProject
getProjectCachePathProject
guessProjectDir#Project
getExternalConfigurationDirProject
modifyModulesProject
runWhenProjectOpenedModule
rootManagerProject
getProjectCacheFileNameLogger
debugOrInfoIfTestModeLogger
runAndLogExceptionKProperty
declaringClassLogger
debug)ExternalOptionState
unlinkExternalOptionsJsonGenerator
arrayJsonGenerator
objRectangle
bottomCenterEditor
getCaretVisualPositionRectangle
topCenterRectangle
positionRectangle
centerBlock
shiftCharSequence
lineOffsetsDocument
lineOffsets	Range
endRange
startSide
getPath
refreshVfs File
parentSystemIndependentPathFile
systemIndependentPathPath
setOwnerPermissionsPair
component1Pair
component2-String
splitByDotsJoiningIncorrectIdentifiers6String
substringAfterLastDotNotFollowedByIncorrectCharComponentManager
getComponentsProject
serviceComponentManager
stateStore)AppUIExecutor
coroutineDispatchingContextAppUIExecutor
inWriteAction%AppUIExecutor
inUndoTransparentActionAppUIExecutor
withConstraintExpiration
invokeOnExpiration Expiration
cancelJobOnExpirationDisposable
isDisposingDisposable
cancelJobOnDisposalCompanion
composeExpirationDisposable
isDisposed"Element
getMandatoryAttributeValueTopic
subscribeProject
stateStoreProject
isDirectoryBasedString
toPatternElementElement
extractPatternsElement
attributeValueString
toReadable$RunConfiguration
cloneBeforeRunTasksCollection
forEachManaged8RunnerAndConfigurationSettings
isNewSerializationAllowedEditor
assertFoldedASTNode
prev'NavigationTarget
getPresentationIfValidMouseEvent
mouseButtonPoint
translateNewMouseEvent
withTranslatedGraphics2D
withTranslatedTextAttributes
withDefaultTextAttributes
with5InlayParameterHintsProvider
hasDisabledOptionHintInfoMethodInfo
toPatternString
capitalizeString
capitalizeFirstLetter!InlayPresentation
fireUpdateEventInlayPresentation
dimensionInlayHintsProvider
withSettings$InlayPresentation
fireContentChanged&ProviderWithSettings
toSettingsWrapper+ProviderWithSettings
getCollectorWrapperFor$InlayHintsProvider
getActualSettings%ProviderWithSettings
withSettingsCopyCredentials
isFulfilledCredentials
isEmptyCredentials
hasOnlyUserNameElement
deserializeIntoElement
deserializeStreamProvider
writeInspectionProfileImpl
editJPasswordField
getTrimmedCharsElement
digestSchemeManager
saveString
isEmptySafeByteBuf
readIntoCharBufferHttpResponse
sendHttpResponseStatus
orInSafeModeHttpResponseStatus
responseHttpResponse
addKeepAliveIfNeedHttpResponse
addCommonHeaders!HttpResponse
addKeepAliveIfNeededHttpResponseStatus
sendHttpResponse
setDateHttpResponse
addServerHttpResponse
addNoCacheRequestCallback
reject0String
trimTrailingWhitespacesAndAddNewlineAtEOF!UElement
findElementByTextFromPsiUElement
findElementByText$PsiElement
findUElementByTextFromPsiUFile
asIdentifiersUFile
asRefNames.IndentedPrintingVisitor
visitUFileAndGetResultUrl
isSpecialPromise
onSuccessPromise
onErrorOutMessage
writeIntOutMessage
writeBooleanOutMessage
writeEnumOutMessage
writeStringOutMessage
writeDoubleCommitContext
isPushAfterCommitRemoteVmConnection
openScope
createScopeNodeNameISource
throttleLastIPropertyView
debounceNotNullThrowable
getThrowableTextIPropertyView
switchMapJLabel
tooltipForCropped"ListSelectionModel
selectedIndexesJList
selectedItemsJComponent
mouseClickedJComponent
sizePropertyComponent
pressOutsideJComponent
awtMousePointJTextComponent
textPropertyComponent
visiblePropertyGraphics2D
fillRect JComponent
isInHierarchyPropertyJList
hoveredIndexJComboBox
selectedItemPropertyComponent
componentHoverPointJComboBox
addLifetimedItemJComponent
namedProperty"ProcessingContext
withRequestedPsiList
areSequentialPsiParameter
typeTextPsiParameter
isAssignablePsiType
isAssignableToSuiteEntry
isMyTestWizardPopup
onShiftReleased!TestLocator
getNavigatableElement ListPopupImpl
selectOnShiftEnterWizardPopup
onShiftPressedListPopupImpl
navigateOnF4String
toClassName!StringBuilder
appendCommaIfNeededStringBuilder
jsonStringBuilder
jsonEscapedStringJsonObjectBuilder
describeEnumEnum
getReportedIdMutableMap
retainAllProject
getGitRootsProject
anyGitRootsForIndexing PsiModifierListOwner
annotationsPsiElement
getChildByRoleIElementType
getOperatorTypeString
orAnonymous*UElement
unwrapCompositeQualifiedReference!JavaAbstractUElement
unwrapSwitchUElement
isMethodCallUElement
isTypeCastUElement
isAssignmentUElement
isArrayInitializerUElement
isInstanceCheck"UElement
isNewArrayWithInitializerUElement
isNewArrayUVariable
isResourceVariable!UElement
isNewArrayWithDimensionsUElement
isConstructorCallArray
isAssignableFromArray
el
Array
exprArray
nonEmptyOrClass
elUValue
toPossibleConstantsUValue
ifUndeterminedPsiType
toNumeric
Int
asTypeList
acceptListUElement
logString
withMarginPsiType
nameList
asLogStringString
times$PsiModifierListOwner
renderModifiersUExpression
unwrapParenthesisUElement
createEmptyStateUEvaluationInfo
merge	UValue
toUFile
analyzeAllUExpression
uValueOf,UDeclaration
getEvaluationContextWithCaching+UElement
getContainingAnalyzableDeclarationUElement
isStringLiteral%ULiteralExpression
injectedReferences+ULiteralExpression
psiLanguageInjectionHostUElement
isFalseLiteralUElement
isNumberLiteralULiteralExpression
getLongValueUElement
isNullLiteral UElement
getValueIfStringLiteralUElement
isInjectionHostUExpression
sourceInjectionHostUElement
isTrueLiteralUElement
isBooleanLiteralUElement
isIntegralLiteralAny
toConstantUElement
getAsJavaPsiElementUElement
withContainingElementsUElement
sourcePsiElementUResolvable
resolveToUElementUAnnotation
namePsiElementUVariable
visitContentsUDeclaration
getAnchorPsi!UElement
getContainingDeclarationPsiElement
toUElementPsiFile
findUElementAtPsiElement
getUastParentOfType$PsiElement
toUElementOfExpectedTypesPsiElement
toUElementOfTypeUElement
parentAnywayUastLanguagePlugin
convertUastLanguagePlugin
convertOpt$UastLanguagePlugin
convertWithParentUExpression
matchesQualified$UExpression
getQualifiedParentOrThisUExpression
startsWithQualifiedUExpression
getQualifiedChainUExpression
asQualifiedPathUExpression
endsWithQualified!UExpression
getOutermostQualifiedUElement
asRecursiveLogStringUElement
tryResolveNamedUElement
getContainingUClassUElement
tryResolveUDeclarationUFile
getIoFileUElement
skipParentOfTypeUElement
getLanguagePluginUElement
tryResolveUExpression
evaluateStringUElement
getContainingMethodCollection
toPsiElementsUElement
getUastContextUElement
getContainingClass'UCallExpression
getParameterForArgument%UReferenceExpression
getQualifiedNameUElement
getContainingUFilePsiElement
getContainingClassUElement
getParentOfTypeUElement
getContainingFileUElement
isUastChildOfPsiElement
findContainingUElement
getContainingUMethodUElement
getContainingUVariableUElement
getUCallExpressionProject
setAndroidxPropertiesProject
hasAndroidxPropertyProject
isAndroidxProject
getProjectPropertiesDataContext
moduleCompletableFuture
handleOnEdt$ProgressManager
submitBackgroundTask0GradleProjectSettings
setupGradleProjectSettings"GradleSettings
setupGradleSettings'SettingsContext
getJavaHomeJdkReference-SettingsContext
getAndAddExternalJdkReference)SettingsContext
getMostRecentJdkReference&SettingsContext
getProjectJdkReference%SettingsContext
getGradleJdkReference(BuildActionExecuter
setCancellationTokenPsiFile
isGradleScript!PsiClass
isResolvedInGradleScript%GrMethodCall
isDynamicVariableInvoked'GrReferenceExpression
isDynamicVariableString
escapeIfNeededStringJoiner
addAll:ExternalSystemTaskExecutionSettings
applyTestConfiguration+ExternalSystemTaskExecutionSettings
setFromGrStatement
isTableRow$GrBinaryExpression
findMaybeTableRowGrExpression
isTableRowPsiElement
isUnderTableHeader%PsiElement
maybeTableColumnExpression#GrExpression
isTableColumnSeparatorPsiElement
isTableHeaderGrBinaryExpression
isOr$GrBinaryExpression
isInteractionDown GrExpression
isInteractionCallUpGrExpression
isInteractionCall3GrBinaryExpression
isInteractionWithCardinalityDownGrExpression
isInteractionPartGrExpression
isInteractionDown#GrBinaryExpression
isMultiplicationGrExpression
isInteractionUpGrBinaryExpression
isRightShift0GrBinaryExpression
isInteractionWithResponseDown&GroovyPsiElement
isInsideSpecificationGrBinaryExpression
isLeftShiftPsiElement
isBefore#PsiFile
computeAppenderDeclarationsPsiClass
isLogbackConfigPsiFile
isLogbackConfigPsiFile
appenderDeclarations+GrImportStatement
createImportFromStatementGrModifierList
hasPackageScope0GrModifierList
hasOwnEmptyPackageScopeAnnotationGrModifierList
isFinal%GrVariableDeclaration
containingClass#GrModifierList
getImplicitVisiblityInt
hasMaskModifierGrModifierList
isStatic"GrVariableDeclaration
isFinalFieldGrMethod
isAbsractMethodGrModifierList
isAbstractGrTypeDefinition
isFinalClass GrTypeDefinition
isAbstractClassPsiParameter
withType(GrReferenceExpression
handleSpecialCases&GrReferenceExpressionImpl
resolveKinds&GrCodeReferenceElement
getDiamondTypes,GrCodeReferenceElement
explicitTypeArgumentsGrVariable
isDeclaredIn.GroovyResolveResult
getTypeArgumentsFromResultGrMethodCall
isImplicitCall*GroovyFileImpl
doCollectScriptDeclarations(GroovyFileImpl
collectScriptDeclarations GrCodeReferenceElement
doGetKind*GrCodeReferenceElement
isInClosureSafeCast/GrCodeReferenceElement
shouldInferTypeArguments&PsiAnnotationMemberValue
getArrayValue%PsiAnnotationMemberValue
booleanValue'PsiAnnotation
findDeclaredDetachedValue$PsiAnnotationMemberValue
stringValueGrModifierList
hasAnnotation(GrFunctionalExpression
processParameters#GrFunctionalExpression
processOwner6GrFunctionalExpression
processDeclarationsWithCallsite&GrFunctionalExpression
processDelegate.GrFunctionalExpression
processOwnerAndDelegate1GrFunctionalExpression
processClosureClassMembers%GrFunctionalExpression
doGetOwnerType)GrFunctionalExpression
processDelegatesTo.GrCodeReferenceElement
mayContainTypeArguments!GrOperatorExpression
multiResolvePsiMethod
isEffectivelyVarArgsPsiParameter
isOptionalGrExpression
isNullLiteralGrExpression
isThisExpressionGrExpression
isSuperExpressionGrExpression
isRValueGrExpression
isLValueGrExpression
getRValuePropertyKind
getAccessorNamePsiMethod
checkKindPsiType
isBooleanOrBoxedString
isPropertyNamePsiElement
treeWalkUpAndGetPsiElement
childrenOfTypePsiElement
skipSameTypeParents"PsiElement
treeWalkUpAndGetElementPsiElement
treeWalkUpPsiElement
contextsPsiElement
backwardSiblingsPsiElement
skipParentsOfTypeGrExpression
isFake-GrTypeDefinition
processBeforeTransformations(GrTypeDefinition
processBeforeConversionGrTypeDefinition
processPhaseGrIndexProperty
multiResolveGrIndexProperty
advancedResolve GrIndexProperty
getArgumentTypes GrExpression
isSingleCharLiteral#GrIndexProperty
getArgumentListTypeGrIndexProperty
isClassLiteral#GrIndexProperty
isSimpleArrayAccess!GrIndexProperty
getArrayClassType(GrIndexProperty
getSimpleArrayAccessType'GrIndexProperty
getArgumentListArgument GrControlFlowOwner
getVarIndexesPsiMethodPattern
withKind&GrReferenceExpression
createDescriptorGrVariable
createDescriptorIterator
firstOrNullPsiType
box'PsiBuilder
definitelyTypeElementParsingPsiBuilder
state!PsiBuilder
isNextTokenCapitalized&PsiBuilder
capitalizedReferenceParsing#PsiBuilder
wasDefinitelyTypeElement PsiBuilder
anyTypeElementParsingPsiBuilder
lookaheadPsiBuilder
anyPsiBuilder
groovyParserPsiBuilder
advanceIfPsiBuilder
clearTypeInfoPsiType
devoidGrCall
getArgumentsList
findApplicableList
correctStaticScope'GrReferenceExpression
resolveIncomplete%GroovyMethodCallReference
resolveImpl&GroovyMethodCallReference
resolveImpl2GrTypeDefinition
makeResultGrTypeDefinition
buildCache(GrTypeDefinition
getInnersHierarchyCache%GrTypeDefinition
getInnersOutersCacheGroovyFileBase
resolveGroovyFile
getFileImports GroovyFile
validImportStatementsGroovyFile
doGetImportsPsiElement
isOwnerPsiElement
getOwnerGroovyFile
processBindingsGroovyFile
getBindingsGroovyFile
getBinding0GrTypeDefinition
processInnersInHierarchyNoCache)GrTypeDefinition
doProcessOwnInnerClassesPsiClass
doProcessInnerClassesPsiClass
doProcessInterfaces4GrTypeDefinition
doProcessInnersInClassAndInterfaces(GrTypeDefinition
processInnerInHierarchy$GrTypeDefinition
collectOuterClasses'GrTypeDefinition
doProcessOwnInterfaces&GrTypeDefinition
processInnersInOuters-GrTypeDefinition
processInnersInOutersNoCachePsiType
processSpreadPsiClass
typePsiClass
rawTypePsiSubstitutor
putAllCollection
collapseAccessors#Collection
collapseReflectedMethodsPsiClassType
processMapTypePsiType
processReceiverTypePsiClassType
processClassTypePsiType
doProcessReceiverType"GrReferenceElement
resolveClassFqn$GrReferenceElement
resolvePackageFqnString
isVanillaClassName%PsiScopeProcessor
shouldProcessFields&PsiScopeProcessor
shouldProcessMembers%PsiScopeProcessor
shouldProcessLocals%PsiScopeProcessor
isAnnotationResolve#GroovyFileBase
processClassesInFile PsiScopeProcessor
annotationHintPsiScopeProcessor
getName"ResolveState
processNonCodeMembers&PsiScopeProcessor
shouldProcessClasses(PsiScopeProcessor
isNonAnnotationResolve)PsiScopeProcessor
shouldProcessPropertiesPsiScopeProcessor
checkName-PsiScopeProcessor
shouldProcessTypeParameters0PsiScopeProcessor
shouldProcessDynamicProperties"GrStatementOwner
processStatements&GroovyFileBase
processClassesInPackage%GroovyResolveResult
asJavaClassResultGrStatementOwner
processLocals,GrCodeReferenceElement
isAnnotationReferencePsiScopeProcessor
shouldProcess&PsiScopeProcessor
shouldProcessMethods0GrCodeReferenceElement
resolveAsPackageReference/GrCodeReferenceElement
resolveAsImportReference,GrReferenceElement
canResolveToTypeParameter'GrCodeReferenceElement
processQualifierPsiElement
getCurrentClass&GrReferenceElement
canResolveToPackage%GrCodeReferenceElement
processClassesPsiFile
skipDummies'PsiElement
processFileLevelDeclarationsPsiElement
processUnqualified&GrCodeReferenceElement
getActualParentPsiElement
processInnerClasses)GrCodeReferenceElement
resolveAsReferencePsiClass
getPackage;GrCodeReferenceElement
canResolveToInnerClassOfCurrentClass)GrCodeReferenceElement
resolveAsPartOfFqn-GrReferenceExpression
doResolvePackageOrClass!PsiElement
resolveUnqualifiedType+GrReferenceExpression
resolvePackageOrClass!PsiElement
resolveToLocalVariablePsiElement
resolveToField%GrReferenceExpression
resolveClassFqn%GrReferenceExpression
doResolveStaticPsiElement
resolveQualifiedType,GrCodeReferenceElement
processTypeParametersPsiElement
isTypeElementChild5GrCodeReferenceElement
findTypeParameterListCandidate)GrCodeReferenceElement
getRootTypeElement/GrCodeReferenceElement
processClassDeclarations1GrCodeReferenceElement
processPackageDeclarationsGrCodeReferenceElement
completeTokenSet
plusTokenSet
minusFunction1
andCondition
toPredicateConsumer
plusAssignConsumer
consumeAllJBConsumer
consumeAll
Array
initUserDataHolder
setUserDataHolder
withKeyUserDataHolder
getUserDataHolder
removeUserDataAnnotation
createDescriptorAnnotation
registerFix1CreateMethodRequest
createPropertyTypeConstraintsJvmClass
toGroovyClassOrNullPsiType
ensureWildcardsIterable
flattenIntersections1GroovyPsiElementFactory
createProperTypeParameterPsiFile
getGroovyFilePsiElement
isThisOrSuperPsiElement
isStringNameElement,GrReferenceElement
isAnonymousClassReference!PsiMethod
isMethodWithLiteralName-GrReferenceElement
isReferenceWithLiteralName(PsiElement
getNewNameFromTransformationsPsiModifierListOwner
isStaticPsiAnnotation
getPropertyNameGrField
getListenerTypeGrField
getIndexedComponentType TransformationContext
plusAssignRepository
fixAndGetStateRepository
upstreamRepository
setUpstreamRepository
computeIndexDiffRepository
resetHardConfig
getRemoteBranchFullNameRepository
disableAutoCrLfRepository
commitRepository
fetchRepository
getAheadCommitsCountRepository
processChildrenRepository
readStringBuilder
addListStringBuilder
appendCompactList#ProgressIndicator
asProgressMonitorRepository
writePathRepository
deleteAllFilesRepository
deletePathRepository
edit!URIish
toStringWithoutCredentialsUpdateResult
isEmptyEditorConfigHeader
matchesEditorConfigHeader
isSubcaseOfEditorConfigPattern
isSubcaseOf!EditorConfigHeader
isEquivalentTo#EditorConfigDescriptor
isLeftInPair$EditorConfigDescriptor
isRightInPair$LookupElementBuilder
withSeparatorInLookupElementBuilder
withSuffixGitRepository
isSubmoduleGitRepository
asSubmodule!GitRepository
getDirectSubmodulesStringBuilder
appendBranchName#IndexDataGetter
selectSourceCommitsIndexDataGetter
matchString
asSliceByteArray
asSliceGenericByteBuffer
containsByte
isDigitDouble
hasCountCharArray
concatToStringString
encodeToByteArrayByteArray
decodeToStringKAnnotatedElement
hasAnnotationTypeUsage
toAttributes+TypeParameterDescriptor
getErasedUpperBoundAny
contains&LazyJavaResolverContext
childForMethod7LazyJavaResolverContext
computeNewDefaultTypeQualifiers8LazyJavaResolverContext
copyWithNewDefaultTypeQualifiers)LazyJavaResolverContext
replaceComponentsLazyJavaResolverContext
child.LazyJavaResolverContext
childForClassOrPackage:LazyJavaResolverContext
extractDefaultNullabilityQualifierAny
ifBlankPropertyDescriptor
isJavaField*LazyJavaResolverContext
resolveAnnotationsKotlinType
lexicalCastFromJavaClass
classId(JavaAnnotationOwner
buildLazyValueForMap<DeserializedMemberDescriptor
getImplClassNameForDeserialized3ValueParameterDescriptor
getParameterNameAnnotation1DeserializedMemberDescriptor
isFromJvmPackagePart6ValueParameterDescriptor
getDefaultValueFromAnnotation-ClassDescriptor
getParentJavaStaticClassScope!List
compositeAnnotationsOrSingleSimpleType
enhanceInflexible%UnwrappedType
enhancePossiblyFlexible!KotlinType
getEnhancedNullabilityAny
enhancedMutabilityAny
enhancedNullability#TypeComponentPosition
shouldEnhanceKotlinType
enhance&ClassifierDescriptor
enhanceMutability!KotlinType
hasEnhancedNullabilityAny
noChange
Set
select@CallableMemberDescriptor
doesOverrideBuiltinWithDifferentJvmName#CallableMemberDescriptor
isFromJava5ClassDescriptor
hasRealKotlinSuperClassWithOverrideOfFqNameUnsafe
childSafe4CallableMemberDescriptor
getOverriddenSpecialBuiltinFqName
childDCallableMemberDescriptor
getOverriddenBuiltinReflectingJvmDescriptor-CallableMemberDescriptor
isFromJavaOrBuiltinsString
methodACallableMemberDescriptor
getOverriddenBuiltinWithDifferentJvmName,ClassDescriptor
isAnnotatedWithTypeQualifier!KotlinClassFinder
findKotlinClassCompanion
loadModuleMapping'FunctionDescriptor
computeJvmDescriptorStringBuilder
appendErasedTypeKotlinType
mapToJvmTypeClassDescriptor
internalNameClassId
internalName&CallableDescriptor
computeJvmSignatureJvmTypeFactory
boxTypeIfNeededFqName
parentOrNullFqName
tailFqName
isSubpackageOfFqName
isChildOfFqName
isOneSegmentFQNCollection
concat"FunctionDescriptor
isValidOperatorTypeConstructor
debugInfoKotlinType
approximateSimpleType
isIntegerLiteralType!SimpleType
isSingleClassifierType2UnwrappedType
hasSupertypeWithGivenTypeConstructorSimpleType
isClassType%UnwrappedType
anySuperTypeConstructorSimpleType
isIntersectionTypeVariance
convertVarianceUnwrappedType
typeDepthInternalSimpleType
typeDepthInternalKotlinType
isNullableAnyKotlinType
unCaptureKotlinType
isNotNullThrowableKotlinType
containsErrorKotlinType
isFloatKotlinType
containsTypeAliasesKotlinType
isArrayOfNothingKotlinType
replaceAnnotationsKotlinType
isAnyOrNullableAnyAbbreviatedType
unCapture'KotlinType
getImmediateSuperclassNotAnyKotlinType
isUnitKotlinType
isSubtypeOfKotlinType
supertypesKotlinType
isInterfaceKotlinType
isIntKotlinType
makeNullableKotlinType
asTypeProjectionKotlinType
isDoubleKotlinType
makeNotNullable KotlinType
isPrimitiveNumberType'KotlinType
isSignedOrUnsignedNumberTypeKotlinType
isLongKotlinType
isTypeParameterKotlinType
isCharKotlinType
isByteKotlinType
isEnum0TypeParameterDescriptor
representativeUpperBoundKotlinType
contains&KotlinType
containsTypeAliasParametersKotlinType
nullability%NewCapturedType
unCaptureTopLevelTypeKotlinType
constituentTypesKotlinType
isShortKotlinType
isUnsignedNumberTypeKotlinType
builtInsList
defaultProjectionsKotlinType
immediateSupertypesSimpleType
replaceArgumentsWithKotlinType
isNullableNothing,KotlinType
expandIntersectionTypeIfNecessary.KotlinType
replaceArgumentsWithStarProjections*KotlinType
isPrimitiveNumberOrNullableTypeCollection
closure&KotlinType
replaceArgumentsWithNothingKotlinType
isNothing%KotlinType
isBooleanOrNullableBooleanKotlinType
replaceArgumentsWithUnwrappedType
unCapture)UnwrappedType
canHaveUndefinedNullabilityKotlinType
isDefaultBound#KotlinTypeChecker
equalTypesOrNullsKotlinType
isBoolean6KotlinType
upperBoundedByPrimitiveNumberOrNullableTypeSimpleType
unCapture%KotlinType
isNothingOrNullableNothingKotlinType
cannotBeReified5KotlinType
containsTypeProjectionsInTopLevelArguments%KotlinType
requiresTypeAliasExpansion)ClassifierDescriptor
isTypeAliasParameterTypeProjection
substituteKotlinType
isErrorKotlinType
isNullableKotlinType
getAbbreviation,UnwrappedType
makeDefinitelyNotNullOrNotNull"KotlinType
isDefinitelyNotNullType9KotlinType
makeIntersectionTypeDefinitelyNotNullOrNotNull3SimpleType
makeSimpleTypeDefinitelyNotNullOrNotNull:IntersectionTypeConstructor
makeDefinitelyNotNullOrNotNullKotlinType
getAbbreviatedTypeSimpleType
withAbbreviationKotlinType
isDynamic KotlinType
isNullabilityFlexibleKotlinType
lowerIfFlexibleKotlinType
isFlexible#Collection
singleBestRepresentativeKotlinType
asFlexibleTypeKotlinType
upperIfFlexible KotlinType
getCustomTypeVariable#KotlinType
getSubtypeRepresentative%KotlinType
getSupertypeRepresentativeKotlinType
isCustomTypeVariableKotlinType
replaceSimpleType
replaceKotlinType
asSimpleType*TypeParameterDescriptor
starProjectionType KotlinType
isFunctionPlaceholderUnwrappedType
wrapEnhancement UnwrappedType
inheritEnhancementKotlinType
getEnhancementKotlinType
unwrapEnhancement/IntersectionTypeConstructor
transformComponentsTypeProjection
toTypeArgumentTypeArgument
toTypeProjectionKotlinType
replaceTypeArgumentsAny
sureMutableMap
getOrPutNullableIterable
keysToMapArrayList
compactMutableCollection
addIfNotNullSequenceScope
yieldIfNotNullIterable
keysToMapExceptNullsIterable
mapToIndexString
lastIndexOfOrNullSequence
firstIsInstanceOrNullArray
ifNotEmptyArray
firstIsInstanceOrNullArray
firstNotNullResultIterable
flatMapToNullableIterable
flattenToIterable
sumByLongIterable
firstIsInstanceString
indexOfOrNullSequence
firstIsInstanceAny
castIterable
lastIsInstanceOrNullArray
firstIsInstanceAny
assertedCast
Any
safeAs	Pair
swapIterable
firstNotNullResultIterable
firstIsInstanceOrNullCollection
ifNotEmpty$Throwable
isProcessCanceledException#String
decapitalizeSmartForCompilerString
isUpperCaseCharAtString
isLowerCaseCharAtString
decapitalizeSmartString
toLowerCaseAsciiOnlyString
decapitalizeAsciiOnlyString
capitalizeAsciiOnlyString
toUpperCaseAsciiOnlyString
capitalizeFirstWord7DeclarationDescriptor
isInlineClassThatRequiresMangling,KotlinType
isInlineClassThatRequiresMangling'KotlinType
requiresFunctionNameMangling<KotlinType
isTypeParameterWithUpperBoundThatRequiresMangling.TypeSubstitution
wrapWithCapturingSubstitution%TypeProjection
createCapturedIfNeededKotlinType
isCapturedMemberScope
computeAllNames"MemberScope
getDescriptorsFiltered'Collection
flatMapClassifierNamesOrNull,SyntheticScopes
collectSyntheticConstructors/SyntheticScopes
collectSyntheticStaticFunctions/SyntheticScopes
collectSyntheticMemberFunctions3SyntheticScopes
collectSyntheticExtensionProperties&ModuleDescriptor
allSignedLiteralTypesKotlinType
maxValueModuleDescriptor
unsignedTypeModuleDescriptor
uIntType(ModuleDescriptor
allUnsignedLiteralTypesModuleDescriptor
uLongTypeKotlinType
minValueModuleDescriptor
uShortTypeModuleDescriptor
uByteTypeByte
fromUByteToLongInt
fromUIntToLongShort
fromUShortToLong:MutableCollection
retainMostSpecificInEachOverridableGroup3CallableDescriptor
findTopMostOverriddenDescriptors;CallableDescriptor
findOriginalTopMostOverriddenDescriptors3Collection
selectMostSpecificInEachOverridableGroup"DeclarationDescriptor
isAncestorOf.ClassifierDescriptorWithTypeParameters
classId%DeclarationDescriptor
parentsWithSelf)DeclarationDescriptor
isExtensionProperty!DeclarationDescriptor
isExtension%ModuleDescriptor
resolveTopLevelClass*CallableDescriptor
varargParameterPosition,ClassDescriptor
getAllSuperclassesWithoutAnyDeclarationDescriptor
builtIns4ClassDescriptor
getAllSuperClassesTypesIncludeItself&FunctionDescriptor
isEnumValueOfMethod"ClassDescriptor
getSuperClassOrAny"AnnotationDescriptor
firstArgumentDeclarationDescriptor
parents%ClassDescriptor
secondaryConstructors#ClassDescriptor
getSuperClassNotAny#Iterable
filterOutSourceAnnotationsAnnotated
nonSourceAnnotations:DeclarationDescriptorWithVisibility
isEffectivelyPublicApi1CallableDescriptor
overriddenTreeUniqueAsSequence-DeclarationDescriptor
getImportableDescriptor DeclarationDescriptor
fqNameSafe-DeclarationDescriptor
isAnnotationConstructor+CallableMemberDescriptor
propertyIfAccessor Annotated
isRepeatableAnnotation$AnnotationDescriptor
annotationClass@CallableDescriptor
getOwnerForEffectiveDispatchReceiverParameter Annotated
isDocumentedAnnotation?ClassifierDescriptorWithTypeParameters
classValueTypeDescriptor=ClassifierDescriptorWithTypeParameters
denotedClassDescriptor"DeclarationDescriptor
fqNameUnsafe,CallableMemberDescriptor
setSingleOverridden7DeclarationDescriptor
isPrimaryConstructorOfInlineClass*DeclarationDescriptor
isInsidePrivateClass$ClassDescriptor
classValueDescriptor7ValueParameterDescriptor
declaresOrInheritsDefaultValue'AnnotationDescriptor
isSourceAnnotation&MemberDescriptor
isEffectivelyExternal'ClassDescriptor
classesFromInnerToOuter9ClassifierDescriptorWithTypeParameters
hasCompanionObject1CallableMemberDescriptor
overriddenTreeAsSequence"ClassDescriptor
getSuperInterfacesDeclarationDescriptor
moduleClassDescriptor
isSubclassOf+ClassifierDescriptor
getAllSuperClassifiers-ClassDescriptor
getClassObjectReferenceTarget'ClassDescriptor
hasClassValueDescriptor+DeclarationDescriptor
isEffectivelyExternal(CallableMemberDescriptor
firstOverriddenClassDescriptor
classValueType$DeclarationDescriptor
isPublishedApi"DeclarationDescriptor
fqNameOrNull;DeclarationDescriptorWithVisibility
isEffectivelyPrivateApi Annotated
getAnnotationRetention'DeclarationDescriptor
isCompanionObjectClassifierDescriptor
classIdKotlinType
isInlineClassType<CallableDescriptor
isGetterOfUnderlyingPropertyOfInlineClass+KotlinType
unsubstitutedUnderlyingParameter4VariableDescriptor
isUnderlyingPropertyOfInlineClass%KotlinType
isRecursiveInlineClassType(ClassDescriptor
underlyingRepresentation$KotlinType
substitutedUnderlyingType*KotlinType
isRecursiveInlineClassTypeInner&KotlinType
unsubstitutedUnderlyingType#KotlinType
isNullableUnderlyingType#DeclarationDescriptor
isInlineClass'MemberDescriptor
getMultiTargetPlatform'ModuleDescriptor
getMultiTargetPlatformKotlinType
hasExactAnnotation%FqName
isInternalAnnotationForResolve+Annotations
hasInternalAnnotationForResolve0CallableDescriptor
hasDynamicExtensionAnnotation,CallableDescriptor
hasHidesMembersAnnotation5CallableDescriptor
hasLowPriorityInOverloadResolution0CallableDescriptor
hasBuilderInferenceAnnotation&AnnotationDescriptor
isExactAnnotationKotlinType
hasNoInferAnnotation3TypeParameterDescriptor
hasOnlyInputTypesAnnotationNullableLazyValue
getValueNotNullLazyValue
getValue1KotlinType
getValueParameterTypesFromFunctionTypeKotlinType
replaceReturnType3KotlinType
isTypeAnnotatedWithExtensionFunctionType+KotlinType
isBuiltinExtensionFunctionalType#FqNameUnsafe
getFunctionalClassKindKotlinType
isFunctionType!KotlinType
isKSuspendFunctionType"KotlinType
isExtensionFunctionTypeKotlinType
isTypeOrSubtypeOf KotlinType
isSuspendFunctionType"KotlinType
isBuiltinFunctionalType+KotlinType
isBuiltinFunctionalTypeOrSubtype)KotlinType
isSuspendFunctionTypeOrSubtype*KotlinType
getReceiverTypeFromFunctionType"KotlinType
isFunctionTypeOrSubtype%KotlinType
isNonExtensionFunctionType7KotlinType
extractParameterNameFromFunctionTypeArgument*KotlinType
isFunctionOrSuspendFunctionType(KotlinType
getReturnTypeFromFunctionType,DeclarationDescriptor
getFunctionalClassKindFqNameUnsafe
renderName
renderFqName
renderName
shouldBeEscaped=ExperimentalContinuationInterceptor
toContinuationInterceptor'ExperimentalContinuation
toContinuation/ExperimentalCoroutineContext
toCoroutineContext1CallableMemberDescriptor
isOverridableOrOverridesClassDescriptor
isFinalClass&CallableMemberDescriptor
isOverridableClassDescriptor
isFinalOrEnum)KotlinBuiltIns
createDeprecatedAnnotation'AnnotationDescriptor
abbreviationFqNameKotlinType
canBeUsedForConstVal0ModuleDescriptor
findContinuationClassDescriptor)DeclarationDescriptor
isTopLevelInPackage+ModuleDescriptor
getContinuationOfTypeOrAny%ModuleDescriptor
resolveClassByFqName6ModuleDescriptor
findContinuationClassDescriptorOrNull6ModuleDescriptor
findNonGenericClassAcrossDependencies2ModuleDescriptor
findClassAcrossModuleDependencies6ModuleDescriptor
findTypeAliasAcrossModuleDependencies7TypeParameterDescriptor
capturedCopyForInnerDeclarationGClassifierDescriptorWithTypeParameters
computeConstructorTypeParameters!KotlinType
buildPossiblyInnerTypeVisibility
forVisibility#ClassDescriptor
effectiveVisibility7DeclarationDescriptorWithVisibility
effectiveVisibilitySet
leastPermissive)ClassifierDescriptor
dependentDescriptorsKotlinType
dependentDescriptors$KotlinType
leastPermissiveDescriptor)VariableDescriptorWithAccessors
accessorsLookupTracker
record!LookupTracker
recordPackageLookupNameResolver
getNameNameResolver
getClassIdAny
ifEmptyAny
errorMessage)KotlinScriptExternalDependencies
asFutureInt
chainCompareScriptDependencies
asSuccess                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   