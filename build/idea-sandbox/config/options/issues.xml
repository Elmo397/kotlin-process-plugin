<application>
  <component name="YouTrack Issues">
    <option name="persistentIssues">
      <map>
        <entry key="hm Elnara.Mamedova@jetbrains.com@https://testcloudv4.myjetbrains.com/youtrack" value="[{&quot;id&quot;:&quot;TP-1&quot;,&quot;entityId&quot;:&quot;2-1&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;TP&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;False alarm \&quot;class, interface, or method should not be extended\&quot;&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;root&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1563796512582&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;What steps will reproduce the issue?&lt;br/&gt;import com.intellij.openapi.roots.libraries.LibraryTable&lt;/p&gt;\n&lt;p&gt;class A : LibraryTable.Listener {&lt;br/&gt;}&lt;br/&gt;What is the expected result?&lt;br/&gt;nothing&lt;br/&gt;What happens instead?&lt;br/&gt;Inspection &amp;quot;class, interface, or method should not be extended&amp;quot; warn : &amp;quot;Interface com.intellij.openapi.roots.libraries.LibraryTable must not be implemented&amp;quot;&lt;/p&gt;\n&lt;/div&gt;&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;root&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;root&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;root&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565081189563&quot;},{&quot;name&quot;:&quot;Priority&quot;,&quot;value&quot;:[&quot;Normal&quot;],&quot;valueId&quot;:[&quot;Normal&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e6f6cf&quot;,&quot;fg&quot;:&quot;#4da400&quot;}},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Task&quot;],&quot;valueId&quot;:[&quot;Task&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Submitted&quot;],&quot;valueId&quot;:[&quot;Submitted&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;root&quot;,&quot;fullName&quot;:&quot;root&quot;}]}],&quot;comment&quot;:[],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;TP-2&quot;,&quot;entityId&quot;:&quot;2-2&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;TP&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;Support internal protected visibility&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;root&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1563796681420&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;2&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Big libraries like &lt;code class=\&quot;inline-code\&quot;&gt;kotlinx.couroutines&lt;/code&gt; would greatly benefit from &lt;code class=\&quot;inline-code\&quot;&gt;internal protected&lt;/code&gt; visibility that restricts access only to inheriting classes in the same module. The reason is that the library might define some auxiliary class like &lt;code class=\&quot;inline-code\&quot;&gt;Base&lt;/code&gt; with a bunch &lt;code class=\&quot;inline-code\&quot;&gt;protected&lt;/code&gt; methods that have &lt;code class=\&quot;inline-code\&quot;&gt;final override&lt;/code&gt; in some user-visible open class &lt;code class=\&quot;inline-code\&quot;&gt;Derived&lt;/code&gt;, which is open by itself. However, we don&amp;#39;t want user-defined classes that override &lt;code class=\&quot;inline-code\&quot;&gt;Derived&lt;/code&gt; to be able to access those protected method.&lt;/p&gt;\n&lt;p&gt;The implementation of &lt;code class=\&quot;inline-code\&quot;&gt;internal protected&lt;/code&gt; could have used the same java-name mangling approach that is used by &lt;code class=\&quot;inline-code\&quot;&gt;internal&lt;/code&gt; to reduce the likelyhood of abuse of those methods from Java code.&lt;/p&gt;\n&lt;/div&gt;&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;root&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;root&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;root&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565081138150&quot;},{&quot;name&quot;:&quot;Priority&quot;,&quot;value&quot;:[&quot;Normal&quot;],&quot;valueId&quot;:[&quot;Normal&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e6f6cf&quot;,&quot;fg&quot;:&quot;#4da400&quot;}},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Task&quot;],&quot;valueId&quot;:[&quot;Task&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Submitted&quot;],&quot;valueId&quot;:[&quot;Submitted&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;root&quot;,&quot;fullName&quot;:&quot;root&quot;}]}],&quot;comment&quot;:[],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;TP-3&quot;,&quot;entityId&quot;:&quot;2-3&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;TP&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;Scratch: end of line is wrongly indented with the end of scratch line output&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;root&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1563796721596&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;3&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Paste the following code into an empty scratch file &lt;code class=\&quot;inline-code\&quot;&gt;var flag = true&lt;/code&gt;.&lt;br/&gt;Run scratch file, so the output for this line is shown.&lt;br /&gt;\nMove cursor to the beginning of the next line. Press left arrow on the keyboard to move the cursor to the previous line.&lt;/p&gt;\n&lt;p&gt;Expected: cursor is moved to the end of &lt;code class=\&quot;inline-code\&quot;&gt;var flag = true&lt;/code&gt;.&lt;br/&gt;Actual: cursor is moved to the end of the output, like this:&lt;/p&gt;\n&lt;p&gt;!Screen Shot 2018-04-04 at 19.02.46.png!&lt;/p&gt;\n&lt;ul class=\&quot;wiki-list0\&quot;&gt;\n&lt;li&gt;IDEA 2018.1.1 EAP (181.4445.4), Kotlin Plugin 1.2.50-dev-330&lt;/li&gt;\n&lt;li&gt;IDEA 2017.3.5 CE (73.4674.33), Kotlin Plugin 1.2.40-eap-46&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;root&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;root&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;root&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565081092020&quot;},{&quot;name&quot;:&quot;Priority&quot;,&quot;value&quot;:[&quot;Normal&quot;],&quot;valueId&quot;:[&quot;Normal&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e6f6cf&quot;,&quot;fg&quot;:&quot;#4da400&quot;}},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Task&quot;],&quot;valueId&quot;:[&quot;Task&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Submitted&quot;],&quot;valueId&quot;:[&quot;Submitted&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;root&quot;,&quot;fullName&quot;:&quot;root&quot;}]}],&quot;comment&quot;:[],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;TP-4&quot;,&quot;entityId&quot;:&quot;2-4&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;TP&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;13s hang on show overrides&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;root&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1563796747985&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;4&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;IntelliJ IDEA (2016.2) IU-146.SNAPSHOT&lt;br/&gt;Build #IU-146.SNAPSHOT, built on 13:12, March 30, 2016&lt;br/&gt;IntelliJ IDEA EAP User&lt;br/&gt;Expiration date: April 29, 2016&lt;br/&gt;JRE: 1.8.0_74-b02 amd64&lt;br/&gt;JVM: Java HotSpot(TM) 64-Bit Server VM by Oracle Corporation&lt;/p&gt;\n&lt;p&gt;kotlin plugin 1.0.1-release-IJ143-40&lt;/p&gt;\n&lt;/div&gt;&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;root&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;root&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;root&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565081035706&quot;},{&quot;name&quot;:&quot;Priority&quot;,&quot;value&quot;:[&quot;Normal&quot;],&quot;valueId&quot;:[&quot;Normal&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e6f6cf&quot;,&quot;fg&quot;:&quot;#4da400&quot;}},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Task&quot;],&quot;valueId&quot;:[&quot;Task&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Submitted&quot;],&quot;valueId&quot;:[&quot;Submitted&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;root&quot;,&quot;fullName&quot;:&quot;root&quot;}]}],&quot;comment&quot;:[],&quot;tag&quot;:[]}]" />
        <entry key="hm Elnara.Mamedova@jetbrains.com@https://youtrack.jetbrains.com" value="[{&quot;id&quot;:&quot;KT-33312&quot;,&quot;entityId&quot;:&quot;25-2463513&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;“Couldn't compute ASM type for expression” after evaluating method which creates object inheriting some interface inside inline function in another file&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Aleksandr Gribovich&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1565710668328&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;33312&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Consider this code:&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;&lt;code&gt;// Main.kt\nfun main() {\n    println(&amp;quot;breakpoint&amp;quot;)\n}\ninline fun sameFileFun() = object : Function&amp;lt;String&amp;gt; {}\n\n//AnotherOne.kt\ninline fun foo() = object : Function&amp;lt;String&amp;gt; {}\n\nfun notInline() = object : Function&amp;lt;String&amp;gt; {}\nval valObj = object : Function&amp;lt;String&amp;gt; {}\ninline fun notAnonObject() = Obj\nobject Obj : Function&amp;lt;String&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Put breakpoint in &lt;code class=\&quot;inline-code\&quot;&gt;main()&lt;/code&gt;, debug the application, stop on the breakpoint and try to evaluate &lt;code class=\&quot;inline-code\&quot;&gt;foo()&lt;/code&gt;. You will get the exception:&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;&lt;code&gt;Cannot evaluate a code fragment of type class org.jetbrains.kotlin.psi.KtExpressionCodeFragment: back-end (JVM) Internal error: Failed to generate expression: KtObjectLiteralExpression\nFile being compiled at position: (1,20) in /Users/jetbrains/IdeaProjects/del/del-gradle-12-03/src/main/kotlin/AnotherOne.kt\nThe root cause org.jetbrains.kotlin.utils.KotlinExceptionWithAttachments was thrown at: org.jetbrains.kotlin.codegen.binding.CodegenBinding.asmTypeForAnonymousClass(CodegenBinding.java:122)\n\norg.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Failed to generate expression: KtObjectLiteralExpression\nFile being compiled at position: (1,20) in /Users/jetbrains/IdeaProjects/del/del-gradle-12-03/src/main/kotlin/AnotherOne.kt\nThe root cause org.jetbrains.kotlin.utils.KotlinExceptionWithAttachments was thrown at: org.jetbrains.kotlin.codegen.binding.CodegenBinding.asmTypeForAnonymousClass(CodegenBinding.java:122)\n\tat org.jetbrains.kotlin.codegen.ExpressionCodegen.genQualified(ExpressionCodegen.java:321)\n\tat org.jetbrains.kotlin.codegen.ExpressionCodegen.genQualified(ExpressionCodegen.java:281)\n\tat org.jetbrains.kotlin.codegen.ExpressionCodegen.gen(ExpressionCodegen.java:353)\n\tat org.jetbrains.kotlin.codegen.ExpressionCodegen.gen(ExpressionCodegen.java:361)\n\tat org.jetbrains.kotlin.codegen.ExpressionCodegen.returnExpression(ExpressionCodegen.java:1701)\n\tat org.jetbrains.kotlin.codegen.FunctionGenerationStrategy$FunctionDefault.doGenerateBody(FunctionGenerationStrategy.java:64)\n\tat org.jetbrains.kotlin.codegen.FunctionGenerationStrategy$CodegenBased.generateBody(FunctionGenerationStrategy.java:84)\n\tat org.jetbrains.kotlin.codegen.FunctionCodegen.generateMethodBody(FunctionCodegen.java:666)\n\tat org.jetbrains.kotlin.codegen.inline.PsiSourceCompilerForInline.generateMethodBody(SourceCompilerForInline.kt:205)\n\tat org.jetbrains.kotlin.codegen.inline.PsiSourceCompilerForInline.doCreateMethodNodeFromSource(SourceCompilerForInline.kt:314)\n\tat org.jetbrains.kotlin.codegen.inline.InlineCodegen$Companion.createInlineMethodNode$backend(InlineCodegen.kt:558)\n\tat org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:160)\n\tat org.jetbrains.kotlin.codegen.inline.PsiInlineCodegen.genCallInner(InlineCodegen.kt:734)\n\tat org.jetbrains.kotlin.codegen.CallGenerator$DefaultImpls.genCall(CallGenerator.kt:115)\n\tat org.jetbrains.kotlin.codegen.inline.PsiInlineCodegen.genCall(InlineCodegen.kt:709)\n\tat org.jetbrains.kotlin.codegen.ExpressionCodegen.invokeMethodWithArguments(ExpressionCodegen.java:2533)\n\tat org.jetbrains.kotlin.codegen.ExpressionCodegen.invokeMethodWithArguments(ExpressionCodegen.java:2476)\n\tat org.jetbrains.kotlin.codegen.Callable$invokeMethodWithArguments$1.invoke(Callable.kt:41)\n\tat org.jetbrains.kotlin.codegen.Callable$invokeMethodWithArguments$1.invoke(Callable.kt:13)\n\tat org.jetbrains.kotlin.codegen.OperationStackValue.putSelector(StackValue.kt:79)\n\tat org.jetbrains.kotlin.codegen.StackValue.put(StackValue.java:122)\n\tat org.jetbrains.kotlin.codegen.StackValue.put(StackValue.java:115)\n\tat org.jetbrains.kotlin.codegen.ExpressionCodegen.putStackValue(ExpressionCodegen.java:381)\n\tat org.jetbrains.kotlin.codegen.ExpressionCodegen.gen(ExpressionCodegen.java:362)\n\tat org.jetbrains.kotlin.codegen.ExpressionCodegen.gen(ExpressionCodegen.java:357)\n\tat org.jetbrains.kotlin.codegen.CodeFragmentCodegen.genMethod(CodeFragmentCodegen.kt:162)\n\tat org.jetbrains.kotlin.codegen.CodeFragmentCodegen.generateBody(CodeFragmentCodegen.kt:78)\n\tat org.jetbrains.kotlin.codegen.MemberCodegen.generate(MemberCodegen.java:129)\n\tat org.jetbrains.kotlin.codegen.PackageCodegenImpl.generateFile(PackageCodegenImpl.java:134)\n\tat org.jetbrains.kotlin.codegen.PackageCodegenImpl.generate(PackageCodegenImpl.java:68)\n\tat org.jetbrains.kotlin.codegen.DefaultCodegenFactory.generatePackage(CodegenFactory.kt:96)\n\tat org.jetbrains.kotlin.codegen.DefaultCodegenFactory.generateModule(CodegenFactory.kt:67)\n\tat org.jetbrains.kotlin.codegen.KotlinCodegenFacade.doGenerateFiles(KotlinCodegenFacade.java:47)\n\tat org.jetbrains.kotlin.codegen.KotlinCodegenFacade.compileCorrectFiles(KotlinCodegenFacade.java:39)\n\tat org.jetbrains.kotlin.idea.debugger.evaluate.compilation.CodeFragmentCompiler.doCompile(CodeFragmentCompiler.kt:93)\n\tat org.jetbrains.kotlin.idea.debugger.evaluate.compilation.CodeFragmentCompiler.access$doCompile(CodeFragmentCompiler.kt:48)\n\tat org.jetbrains.kotlin.idea.debugger.evaluate.compilation.CodeFragmentCompiler$compile$1.invoke(CodeFragmentCompiler.kt:57)\n\tat org.jetbrains.kotlin.idea.debugger.evaluate.compilation.CodeFragmentCompiler$compile$1.invoke(CodeFragmentCompiler.kt:48)\n\tat org.jetbrains.kotlin.idea.util.application.ApplicationUtilsKt$sam$com_intellij_openapi_util_Computable$0.compute(ApplicationUtils.kt)\n\tat com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(ApplicationImpl.java:960)\n\tat org.jetbrains.kotlin.idea.util.application.ApplicationUtilsKt.runReadAction(ApplicationUtils.kt:27)\n\tat org.jetbrains.kotlin.idea.debugger.evaluate.compilation.CodeFragmentCompiler.compile(CodeFragmentCompiler.kt:57)\n\tat org.jetbrains.kotlin.idea.debugger.evaluate.KotlinEvaluator.compileCodeFragment(KotlinEvaluatorBuilder.kt:221)\n\tat org.jetbrains.kotlin.idea.debugger.evaluate.KotlinEvaluator.access$compileCodeFragment(KotlinEvaluatorBuilder.kt:96)\n\tat org.jetbrains.kotlin.idea.debugger.evaluate.KotlinEvaluator$evaluateSafe$1.invoke(KotlinEvaluatorBuilder.kt:174)\n\tat org.jetbrains.kotlin.idea.debugger.evaluate.KotlinEvaluator$evaluateSafe$2.invoke(KotlinEvaluatorBuilder.kt:176)\n\tat org.jetbrains.kotlin.idea.debugger.evaluate.KotlinEvaluator$evaluateSafe$2.invoke(KotlinEvaluatorBuilder.kt:96)\n\tat org.jetbrains.kotlin.idea.debugger.evaluate.KotlinDebuggerCaches$Companion.compileCodeFragmentCacheAware(KotlinDebuggerCaches.kt:125)\n\tat org.jetbrains.kotlin.idea.debugger.evaluate.KotlinEvaluator.evaluateSafe(KotlinEvaluatorBuilder.kt:176)\n\tat org.jetbrains.kotlin.idea.debugger.evaluate.KotlinEvaluator.evaluateWithStatus(KotlinEvaluatorBuilder.kt:148)\n\tat org.jetbrains.kotlin.idea.debugger.evaluate.KotlinEvaluator.evaluate(KotlinEvaluatorBuilder.kt:118)\n\tat com.intellij.debugger.engine.evaluation.expression.ExpressionEvaluatorImpl.evaluate(ExpressionEvaluatorImpl.java:51)\n\tat com.intellij.debugger.ui.impl.watch.EvaluationDescriptor.calcValue(EvaluationDescriptor.java:90)\n\tat com.intellij.debugger.ui.impl.watch.ValueDescriptorImpl.setContext(ValueDescriptorImpl.java:190)\n\tat com.intellij.debugger.engine.JavaDebuggerEvaluator$1.threadAction(JavaDebuggerEvaluator.java:89)\n\tat com.intellij.debugger.engine.events.DebuggerContextCommandImpl.contextAction(DebuggerContextCommandImpl.java:71)\n\tat com.intellij.debugger.engine.events.SuspendContextCommandImpl.action(SuspendContextCommandImpl.java:57)\n\tat com.intellij.debugger.engine.events.DebuggerCommandImpl.run(DebuggerCommandImpl.java:43)\n\tat com.intellij.debugger.engine.DebuggerManagerThreadImpl.processEvent(DebuggerManagerThreadImpl.java:151)\n\tat com.intellij.debugger.engine.DebuggerManagerThreadImpl.processEvent(DebuggerManagerThreadImpl.java:29)\n\tat com.intellij.debugger.impl.InvokeThread.a(InvokeThread.java:138)\n\tat com.intellij.debugger.impl.InvokeThread.access$100(InvokeThread.java:19)\n\tat com.intellij.debugger.impl.InvokeThread$WorkerThreadRequest.a(InvokeThread.java:49)\n\tat com.intellij.util.ConcurrencyUtil.runUnderThreadName(ConcurrencyUtil.java:224)\n\tat com.intellij.debugger.impl.InvokeThread$WorkerThreadRequest.run(InvokeThread.java:48)\n\tat com.intellij.openapi.application.impl.ApplicationImpl$1.run(ApplicationImpl.java:311)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: org.jetbrains.kotlin.utils.KotlinExceptionWithAttachments: Couldn't compute ASM type for expression\n\tat org.jetbrains.kotlin.codegen.binding.CodegenBinding.asmTypeForAnonymousClass(CodegenBinding.java:122)\n\tat org.jetbrains.kotlin.codegen.ExpressionCodegen.generateObjectLiteral(ExpressionCodegen.java:222)\n\tat org.jetbrains.kotlin.codegen.ExpressionCodegen.visitObjectLiteralExpression(ExpressionCodegen.java:1048)\n\tat org.jetbrains.kotlin.codegen.ExpressionCodegen.visitObjectLiteralExpression(ExpressionCodegen.java:111)\n\tat org.jetbrains.kotlin.psi.KtObjectLiteralExpression.accept(KtObjectLiteralExpression.java:30)\n\tat org.jetbrains.kotlin.codegen.ExpressionCodegen.genQualified(ExpressionCodegen.java:299)\n\t... 70 more\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;NB: no such problem for evaluating &lt;code class=\&quot;inline-code\&quot;&gt;sameFileFun()&lt;/code&gt;, &lt;code class=\&quot;inline-code\&quot;&gt;notInline()&lt;/code&gt;, &lt;code class=\&quot;inline-code\&quot;&gt;valObj&lt;/code&gt;, &lt;code class=\&quot;inline-code\&quot;&gt;notAnonObject()&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;IJ 193.2212 + Kotlin 1.3.60-dev-971&lt;br/&gt;IJ 191.8026.42 + Kotlin 1.3.50-eap-82&lt;/p&gt;\n&lt;/div&gt;&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Aleksandr Gribovich&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;Aleksandr.Gribovich&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;Aleksandr.Gribovich&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565710759045&quot;},{&quot;name&quot;:&quot;links&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;KT-17811&quot;,&quot;type&quot;:&quot;Similar&quot;,&quot;role&quot;:&quot;similar to&quot;}]},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Bug&quot;],&quot;valueId&quot;:[&quot;Bug&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e30000&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Submitted&quot;],&quot;valueId&quot;:[&quot;Submitted&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;IDE. Debugger&quot;],&quot;valueId&quot;:[&quot;IDE. Debugger&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;yanex&quot;,&quot;fullName&quot;:&quot;Yan Zhulanow&quot;}]},{&quot;name&quot;:&quot;Tester (Kotlin)&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;Aleksandr.Gribovich&quot;,&quot;fullName&quot;:&quot;Aleksandr Gribovich&quot;}]}],&quot;comment&quot;:[],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-17811&quot;,&quot;entityId&quot;:&quot;25-1534429&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;Couldn't inline method error for inline method with anonymous object initialization and reified type parameter&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Javier Diaz-Cano&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1494366423059&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;17811&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;This error is showing in IntelliJ IDEA but not when doing a ./gradlew build&lt;br/&gt;&lt;br/&gt;&lt;a href=\&quot;https://puu.sh/vKK5y/fa88ba91d8.png\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener noreferrer\&quot;&gt;https://puu.sh/vKK5y/fa88ba91d8.png&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;The code is here: &lt;a href=\&quot;https://github.com/jdiazcano/cfg4k/tree/arrays\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener noreferrer\&quot;&gt;https://github.com/jdiazcano/cfg4k/tree/arrays&lt;/a&gt;&lt;br/&gt;The problem is showing in the class HoconConfigProviderTest:25&lt;br/&gt;&lt;br/&gt;When debugging if you inspect &amp;quot;provider.getProperty&amp;lt;List&amp;lt;String&amp;gt;&amp;gt;(&amp;quot;betterStringList&amp;quot;)&amp;quot; it will show that error, when running normally, it will show &amp;quot;Test framework quit unexpectedly&amp;quot;&lt;/div&gt;\n&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Aleksandr Gribovich&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;Javier.Diaz-Cano&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;8&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;Aleksandr.Gribovich&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565710759031&quot;},{&quot;name&quot;:&quot;resolved&quot;,&quot;value&quot;:&quot;1553909291670&quot;},{&quot;name&quot;:&quot;links&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;KT-24762&quot;,&quot;type&quot;:&quot;Relates&quot;,&quot;role&quot;:&quot;relates to&quot;},{&quot;value&quot;:&quot;KT-24889&quot;,&quot;type&quot;:&quot;Relates&quot;,&quot;role&quot;:&quot;relates to&quot;},{&quot;value&quot;:&quot;KT-29382&quot;,&quot;type&quot;:&quot;Duplicate&quot;,&quot;role&quot;:&quot;is duplicated by&quot;},{&quot;value&quot;:&quot;KT-33312&quot;,&quot;type&quot;:&quot;Similar&quot;,&quot;role&quot;:&quot;similar to&quot;}]},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Bug&quot;],&quot;valueId&quot;:[&quot;Bug&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e30000&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Priority&quot;,&quot;value&quot;:[&quot;Major&quot;],&quot;valueId&quot;:[&quot;Major&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#ffee9c&quot;,&quot;fg&quot;:&quot;#b45f06&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Fixed&quot;],&quot;valueId&quot;:[&quot;Fixed&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#409600&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Affected versions&quot;,&quot;value&quot;:[&quot;1.3.11&quot;],&quot;valueId&quot;:[&quot;1.3.11&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;IDE. Debugger&quot;],&quot;valueId&quot;:[&quot;IDE. Debugger&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Target versions&quot;,&quot;value&quot;:[&quot;1.3.30&quot;],&quot;valueId&quot;:[&quot;1.3.30&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Yes&quot;],&quot;valueId&quot;:[&quot;Yes&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;yanex&quot;,&quot;fullName&quot;:&quot;Yan Zhulanow&quot;}]},{&quot;name&quot;:&quot;attachments&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;image.png&quot;,&quot;id&quot;:&quot;74-410234&quot;,&quot;url&quot;:&quot;https://youtrack.jetbrains.com/_persistent/image.png?file=74-410234&amp;c=true&quot;}]}],&quot;comment&quot;:[{&quot;id&quot;:&quot;27-2194622&quot;,&quot;author&quot;:&quot;goodwinnk&quot;,&quot;authorFullName&quot;:&quot;Nikolay Krasko&quot;,&quot;issueId&quot;:&quot;KT-17811&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;Minimized to:&lt;br/&gt;&lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;interface A&amp;lt;T&amp;gt;&lt;br/&gt;inline fun &amp;lt;reified T&amp;gt; foo() {&lt;br/&gt;    object : A&amp;lt;T&amp;gt; {}&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;fun main(args: Array&amp;lt;String&amp;gt;) {&lt;br/&gt;    println(&amp;quot;hello&amp;quot;) // Evaluate foo&amp;lt;String&amp;gt;()&lt;br/&gt;}&lt;/pre&gt;&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1496085258726,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2316294&quot;,&quot;author&quot;:&quot;Andrey.Breslav&quot;,&quot;authorFullName&quot;:&quot;Andrey Breslav&quot;,&quot;issueId&quot;:&quot;KT-17811&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;Is this an IDE-specific issue?&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1499762874654,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2335556&quot;,&quot;author&quot;:&quot;Javier.Diaz-Cano&quot;,&quot;authorFullName&quot;:&quot;Javier Diaz-Cano&quot;,&quot;issueId&quot;:&quot;KT-17811&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;&lt;b data-user-id=\&quot;11-14623\&quot;&gt;Andrey Breslav&lt;/b&gt; Everything works when using gradle from the console.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1500809819478,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3263249&quot;,&quot;author&quot;:&quot;Alexey.Belkov&quot;,&quot;authorFullName&quot;:&quot;Alexey Belkov&quot;,&quot;issueId&quot;:&quot;KT-17811&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Currently fails with &lt;code class=\&quot;inline-code\&quot;&gt;KotlinNullPointerException&lt;/code&gt; in &lt;code class=\&quot;inline-code\&quot;&gt;AnonymousObjectTransformer.doTransform&lt;/code&gt;:&lt;/p&gt;\n&lt;div class=\&quot;wiki-exception-wrapper\&quot;&gt;&lt;span class=\&quot;wiki-plus wiki-minus\&quot;&gt;&lt;/span&gt;&lt;pre class=\&quot;wiki-exception-title wiki-hidden\&quot;&gt;Couldn't evaluate expression&lt;/pre&gt;&lt;span class=\&quot;wiki-hellip wiki-hidden\&quot;&gt;...&lt;/span&gt;&lt;pre class=\&quot;wiki-exception\&quot;&gt;&lt;p&gt;Couldn't evaluate expression&lt;/p&gt;\n&lt;p&gt;java.lang.IllegalStateException: Backend Internal error: Exception during code generation\nCause: Back-end (JVM) Internal error: Couldn't inline method call 'foo' into\nprivate fun generated_for_debugger_fun(): kotlin.Unit defined in root package in file debugFile.kt\nprivate fun generated_for_debugger_fun() {\nfoo&amp;lt;String&amp;gt;()\n}\nCause: foo ()V:\nL0\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;LDC&lt;/span&gt; 0\nISTORE 0\nL1\nL2\nLINENUMBER 4 L2\nINVOKESTATIC kotlin/jvm/internal/Intrinsics.needClassReification ()V\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;NEW&lt;/span&gt; MainKt$foo$1\nDUP\nINVOKESPECIAL MainKt$foo$1.&amp;lt;init&amp;gt; ()V\nPOP\nL3\nLINENUMBER 5 L3\nRETURN\nL4\nLOCALVARIABLE $i$f$foo I L1 L4 0\nMAXSTACK = 2\nMAXLOCALS = 1&lt;/p&gt;\n&lt;p&gt;Cause: kotlin.KotlinNullPointerException\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;File&lt;/span&gt; being compiled at position: (9,5) in /debugFile.kt\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;The&lt;/span&gt; root cause was thrown at: AnonymousObjectTransformer.kt:129\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;File&lt;/span&gt; being compiled at position: mock:///debugFile.kt\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;The&lt;/span&gt; root cause was thrown at: InlineCodegen.kt:128\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.CompilationErrorHandler.lambda$static$0(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/CompilationErrorHandler.java\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/CompilationErrorHandler.java\&quot; lne=\&quot;24\&quot; data-line-number=\&quot;24\&quot;&gt;CompilationErrorHandler.java:24&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.PackageCodegenImpl.generate(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/PackageCodegenImpl.java\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/PackageCodegenImpl.java\&quot; lne=\&quot;74\&quot; data-line-number=\&quot;74\&quot;&gt;PackageCodegenImpl.java:74&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.DefaultCodegenFactory.generatePackage(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/DefaultCodegenFactory.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/DefaultCodegenFactory.kt\&quot; lne=\&quot;97\&quot; data-line-number=\&quot;97\&quot;&gt;CodegenFactory.kt:97&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.DefaultCodegenFactory.generateModule(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/DefaultCodegenFactory.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/DefaultCodegenFactory.kt\&quot; lne=\&quot;68\&quot; data-line-number=\&quot;68\&quot;&gt;CodegenFactory.kt:68&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.KotlinCodegenFacade.doGenerateFiles(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/KotlinCodegenFacade.java\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/KotlinCodegenFacade.java\&quot; lne=\&quot;47\&quot; data-line-number=\&quot;47\&quot;&gt;KotlinCodegenFacade.java:47&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.KotlinCodegenFacade.compileCorrectFiles(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/KotlinCodegenFacade.java\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/KotlinCodegenFacade.java\&quot; lne=\&quot;39\&quot; data-line-number=\&quot;39\&quot;&gt;KotlinCodegenFacade.java:39&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.idea.debugger.evaluate.KotlinEvaluator$Companion$createClassFileFactory$1.invoke(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/idea/debugger/evaluate/KotlinEvaluator$Companion$createClassFileFactory$1.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/idea/debugger/evaluate/KotlinEvaluator$Companion$createClassFileFactory$1.kt\&quot; lne=\&quot;575\&quot; data-line-number=\&quot;575\&quot;&gt;KotlinEvaluationBuilder.kt:575&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.idea.debugger.evaluate.KotlinEvaluator$Companion$createClassFileFactory$1.invoke(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/idea/debugger/evaluate/KotlinEvaluator$Companion$createClassFileFactory$1.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/idea/debugger/evaluate/KotlinEvaluator$Companion$createClassFileFactory$1.kt\&quot; lne=\&quot;224\&quot; data-line-number=\&quot;224\&quot;&gt;KotlinEvaluationBuilder.kt:224&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; org.jetbrains.kotlin.idea.util.application.ApplicationUtilsKt$sam$com_intellij_openapi_util_Computable$0.compute(ApplicationUtils.kt)\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;com/intellij/openapi/application/impl/ApplicationImpl.java\&quot; data-file-path=\&quot;com/intellij/openapi/application/impl/ApplicationImpl.java\&quot; lne=\&quot;963\&quot; data-line-number=\&quot;963\&quot;&gt;ApplicationImpl.java:963&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.idea.util.application.ApplicationUtilsKt.runReadAction(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/idea/util/application/ApplicationUtilsKt.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/idea/util/application/ApplicationUtilsKt.kt\&quot; lne=\&quot;27\&quot; data-line-number=\&quot;27\&quot;&gt;ApplicationUtils.kt:27&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.idea.debugger.evaluate.KotlinEvaluator$Companion.createClassFileFactory(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/idea/debugger/evaluate/KotlinEvaluator$Companion.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/idea/debugger/evaluate/KotlinEvaluator$Companion.kt\&quot; lne=\&quot;528\&quot; data-line-number=\&quot;528\&quot;&gt;KotlinEvaluationBuilder.kt:528&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.idea.debugger.evaluate.KotlinEvaluator$Companion.extractAndCompile(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/idea/debugger/evaluate/KotlinEvaluator$Companion.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/idea/debugger/evaluate/KotlinEvaluator$Companion.kt\&quot; lne=\&quot;245\&quot; data-line-number=\&quot;245\&quot;&gt;KotlinEvaluationBuilder.kt:245&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.idea.debugger.evaluate.KotlinEvaluator$Companion.access$extractAndCompile(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/idea/debugger/evaluate/KotlinEvaluator$Companion.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/idea/debugger/evaluate/KotlinEvaluator$Companion.kt\&quot; lne=\&quot;224\&quot; data-line-number=\&quot;224\&quot;&gt;KotlinEvaluationBuilder.kt:224&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.idea.debugger.evaluate.KotlinEvaluator$evaluate$compiledData$1.invoke(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/idea/debugger/evaluate/KotlinEvaluator$evaluate$compiledData$1.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/idea/debugger/evaluate/KotlinEvaluator$evaluate$compiledData$1.kt\&quot; lne=\&quot;152\&quot; data-line-number=\&quot;152\&quot;&gt;KotlinEvaluationBuilder.kt:152&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.idea.debugger.evaluate.KotlinEvaluator$evaluate$compiledData$1.invoke(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/idea/debugger/evaluate/KotlinEvaluator$evaluate$compiledData$1.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/idea/debugger/evaluate/KotlinEvaluator$evaluate$compiledData$1.kt\&quot; lne=\&quot;137\&quot; data-line-number=\&quot;137\&quot;&gt;KotlinEvaluationBuilder.kt:137&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.idea.debugger.evaluate.KotlinDebuggerCaches$Companion.getOrCreateCompiledData(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/idea/debugger/evaluate/KotlinDebuggerCaches$Companion.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/idea/debugger/evaluate/KotlinDebuggerCaches$Companion.kt\&quot; lne=\&quot;115\&quot; data-line-number=\&quot;115\&quot;&gt;KotlinDebuggerCaches.kt:115&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.idea.debugger.evaluate.KotlinEvaluator.evaluate(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/idea/debugger/evaluate/KotlinEvaluator.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/idea/debugger/evaluate/KotlinEvaluator.kt\&quot; lne=\&quot;149\&quot; data-line-number=\&quot;149\&quot;&gt;KotlinEvaluationBuilder.kt:149&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;com.intellij.debugger.engine.evaluation.expression.ExpressionEvaluatorImpl.evaluate(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;com/intellij/debugger/engine/evaluation/expression/ExpressionEvaluatorImpl.java\&quot; data-file-path=\&quot;com/intellij/debugger/engine/evaluation/expression/ExpressionEvaluatorImpl.java\&quot; lne=\&quot;51\&quot; data-line-number=\&quot;51\&quot;&gt;ExpressionEvaluatorImpl.java:51&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;com.intellij.debugger.ui.impl.watch.EvaluationDescriptor.calcValue(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;com/intellij/debugger/ui/impl/watch/EvaluationDescriptor.java\&quot; data-file-path=\&quot;com/intellij/debugger/ui/impl/watch/EvaluationDescriptor.java\&quot; lne=\&quot;90\&quot; data-line-number=\&quot;90\&quot;&gt;EvaluationDescriptor.java:90&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;com.intellij.debugger.ui.impl.watch.ValueDescriptorImpl.setContext(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;com/intellij/debugger/ui/impl/watch/ValueDescriptorImpl.java\&quot; data-file-path=\&quot;com/intellij/debugger/ui/impl/watch/ValueDescriptorImpl.java\&quot; lne=\&quot;190\&quot; data-line-number=\&quot;190\&quot;&gt;ValueDescriptorImpl.java:190&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;com.intellij.debugger.engine.JavaDebuggerEvaluator$1.threadAction(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;com/intellij/debugger/engine/JavaDebuggerEvaluator$1.java\&quot; data-file-path=\&quot;com/intellij/debugger/engine/JavaDebuggerEvaluator$1.java\&quot; lne=\&quot;88\&quot; data-line-number=\&quot;88\&quot;&gt;JavaDebuggerEvaluator.java:88&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;com.intellij.debugger.engine.events.DebuggerContextCommandImpl.contextAction(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;com/intellij/debugger/engine/events/DebuggerContextCommandImpl.java\&quot; data-file-path=\&quot;com/intellij/debugger/engine/events/DebuggerContextCommandImpl.java\&quot; lne=\&quot;71\&quot; data-line-number=\&quot;71\&quot;&gt;DebuggerContextCommandImpl.java:71&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;com.intellij.debugger.engine.events.SuspendContextCommandImpl.action(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;com/intellij/debugger/engine/events/SuspendContextCommandImpl.java\&quot; data-file-path=\&quot;com/intellij/debugger/engine/events/SuspendContextCommandImpl.java\&quot; lne=\&quot;57\&quot; data-line-number=\&quot;57\&quot;&gt;SuspendContextCommandImpl.java:57&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;com.intellij.debugger.engine.events.DebuggerCommandImpl.run(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;com/intellij/debugger/engine/events/DebuggerCommandImpl.java\&quot; data-file-path=\&quot;com/intellij/debugger/engine/events/DebuggerCommandImpl.java\&quot; lne=\&quot;43\&quot; data-line-number=\&quot;43\&quot;&gt;DebuggerCommandImpl.java:43&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;com.intellij.debugger.engine.DebuggerManagerThreadImpl.processEvent(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;com/intellij/debugger/engine/DebuggerManagerThreadImpl.java\&quot; data-file-path=\&quot;com/intellij/debugger/engine/DebuggerManagerThreadImpl.java\&quot; lne=\&quot;151\&quot; data-line-number=\&quot;151\&quot;&gt;DebuggerManagerThreadImpl.java:151&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;com.intellij.debugger.engine.DebuggerManagerThreadImpl.processEvent(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;com/intellij/debugger/engine/DebuggerManagerThreadImpl.java\&quot; data-file-path=\&quot;com/intellij/debugger/engine/DebuggerManagerThreadImpl.java\&quot; lne=\&quot;29\&quot; data-line-number=\&quot;29\&quot;&gt;DebuggerManagerThreadImpl.java:29&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;com.intellij.debugger.impl.InvokeThread.run(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;com/intellij/debugger/impl/InvokeThread.java\&quot; data-file-path=\&quot;com/intellij/debugger/impl/InvokeThread.java\&quot; lne=\&quot;138\&quot; data-line-number=\&quot;138\&quot;&gt;InvokeThread.java:138&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;com.intellij.debugger.impl.InvokeThread.access$100(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;com/intellij/debugger/impl/InvokeThread.java\&quot; data-file-path=\&quot;com/intellij/debugger/impl/InvokeThread.java\&quot; lne=\&quot;19\&quot; data-line-number=\&quot;19\&quot;&gt;InvokeThread.java:19&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;com.intellij.debugger.impl.InvokeThread$WorkerThreadRequest.lambda$run$0(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;com/intellij/debugger/impl/InvokeThread$WorkerThreadRequest.java\&quot; data-file-path=\&quot;com/intellij/debugger/impl/InvokeThread$WorkerThreadRequest.java\&quot; lne=\&quot;49\&quot; data-line-number=\&quot;49\&quot;&gt;InvokeThread.java:49&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;com.intellij.util.ConcurrencyUtil.runUnderThreadName(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;com/intellij/util/ConcurrencyUtil.java\&quot; data-file-path=\&quot;com/intellij/util/ConcurrencyUtil.java\&quot; lne=\&quot;229\&quot; data-line-number=\&quot;229\&quot;&gt;ConcurrencyUtil.java:229&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;com.intellij.debugger.impl.InvokeThread$WorkerThreadRequest.run(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;com/intellij/debugger/impl/InvokeThread$WorkerThreadRequest.java\&quot; data-file-path=\&quot;com/intellij/debugger/impl/InvokeThread$WorkerThreadRequest.java\&quot; lne=\&quot;48\&quot; data-line-number=\&quot;48\&quot;&gt;InvokeThread.java:48&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;com.intellij.openapi.application.impl.ApplicationImpl$1.run(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;com/intellij/openapi/application/impl/ApplicationImpl$1.java\&quot; data-file-path=\&quot;com/intellij/openapi/application/impl/ApplicationImpl$1.java\&quot; lne=\&quot;314\&quot; data-line-number=\&quot;314\&quot;&gt;ApplicationImpl.java:314&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;java.util.concurrent.Executors$RunnableAdapter.call(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;java/util/concurrent/Executors$RunnableAdapter.java\&quot; data-file-path=\&quot;java/util/concurrent/Executors$RunnableAdapter.java\&quot; lne=\&quot;511\&quot; data-line-number=\&quot;511\&quot;&gt;Executors.java:511&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;java.util.concurrent.FutureTask.run(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;java/util/concurrent/FutureTask.java\&quot; data-file-path=\&quot;java/util/concurrent/FutureTask.java\&quot; lne=\&quot;266\&quot; data-line-number=\&quot;266\&quot;&gt;FutureTask.java:266&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;java.util.concurrent.ThreadPoolExecutor.runWorker(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;java/util/concurrent/ThreadPoolExecutor.java\&quot; data-file-path=\&quot;java/util/concurrent/ThreadPoolExecutor.java\&quot; lne=\&quot;1142\&quot; data-line-number=\&quot;1142\&quot;&gt;ThreadPoolExecutor.java:1142&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;java.util.concurrent.ThreadPoolExecutor$Worker.run(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;java/util/concurrent/ThreadPoolExecutor$Worker.java\&quot; data-file-path=\&quot;java/util/concurrent/ThreadPoolExecutor$Worker.java\&quot; lne=\&quot;617\&quot; data-line-number=\&quot;617\&quot;&gt;ThreadPoolExecutor.java:617&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;java.lang.Thread.run(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;java/lang/Thread.java\&quot; data-file-path=\&quot;java/lang/Thread.java\&quot; lne=\&quot;745\&quot; data-line-number=\&quot;745\&quot;&gt;Thread.java:745&lt;/a&gt;)&lt;/span&gt;\nCaused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call 'foo' into\nprivate fun generated_for_debugger_fun(): kotlin.Unit defined in root package in file debugFile.kt\nprivate fun generated_for_debugger_fun() {\nfoo&amp;lt;String&amp;gt;()\n}\nCause: foo ()V:\nL0\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;LDC&lt;/span&gt; 0\nISTORE 0\nL1\nL2\nLINENUMBER 4 L2\nINVOKESTATIC kotlin/jvm/internal/Intrinsics.needClassReification ()V\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;NEW&lt;/span&gt; MainKt$foo$1\nDUP\nINVOKESPECIAL MainKt$foo$1.&amp;lt;init&amp;gt; ()V\nPOP\nL3\nLINENUMBER 5 L3\nRETURN\nL4\nLOCALVARIABLE $i$f$foo I L1 L4 0\nMAXSTACK = 2\nMAXLOCALS = 1&lt;/p&gt;\n&lt;p&gt;Cause: kotlin.KotlinNullPointerException\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;File&lt;/span&gt; being compiled at position: (9,5) in /debugFile.kt\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;The&lt;/span&gt; root cause was thrown at: AnonymousObjectTransformer.kt:129\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.inline.InlineCodegen.throwCompilationException(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/inline/InlineCodegen.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/inline/InlineCodegen.kt\&quot; lne=\&quot;128\&quot; data-line-number=\&quot;128\&quot;&gt;InlineCodegen.kt:128&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/inline/InlineCodegen.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/inline/InlineCodegen.kt\&quot; lne=\&quot;168\&quot; data-line-number=\&quot;168\&quot;&gt;InlineCodegen.kt:168&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.inline.PsiInlineCodegen.genCallInner(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/inline/PsiInlineCodegen.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/inline/PsiInlineCodegen.kt\&quot; lne=\&quot;691\&quot; data-line-number=\&quot;691\&quot;&gt;InlineCodegen.kt:691&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.CallGenerator$DefaultImpls.genCall(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/CallGenerator$DefaultImpls.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/CallGenerator$DefaultImpls.kt\&quot; lne=\&quot;113\&quot; data-line-number=\&quot;113\&quot;&gt;CallGenerator.kt:113&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.inline.PsiInlineCodegen.genCall(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/inline/PsiInlineCodegen.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/inline/PsiInlineCodegen.kt\&quot; lne=\&quot;672\&quot; data-line-number=\&quot;672\&quot;&gt;InlineCodegen.kt:672&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.ExpressionCodegen.invokeMethodWithArguments(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/ExpressionCodegen.java\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/ExpressionCodegen.java\&quot; lne=\&quot;2489\&quot; data-line-number=\&quot;2489\&quot;&gt;ExpressionCodegen.java:2489&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.ExpressionCodegen.invokeMethodWithArguments(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/ExpressionCodegen.java\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/ExpressionCodegen.java\&quot; lne=\&quot;2432\&quot; data-line-number=\&quot;2432\&quot;&gt;ExpressionCodegen.java:2432&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.Callable$invokeMethodWithArguments$1.invoke(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/Callable$invokeMethodWithArguments$1.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/Callable$invokeMethodWithArguments$1.kt\&quot; lne=\&quot;41\&quot; data-line-number=\&quot;41\&quot;&gt;Callable.kt:41&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.Callable$invokeMethodWithArguments$1.invoke(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/Callable$invokeMethodWithArguments$1.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/Callable$invokeMethodWithArguments$1.kt\&quot; lne=\&quot;13\&quot; data-line-number=\&quot;13\&quot;&gt;Callable.kt:13&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.OperationStackValue.putSelector(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/OperationStackValue.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/OperationStackValue.kt\&quot; lne=\&quot;79\&quot; data-line-number=\&quot;79\&quot;&gt;StackValue.kt:79&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.StackValueWithLeaveTask.putSelector(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/StackValueWithLeaveTask.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/StackValueWithLeaveTask.kt\&quot; lne=\&quot;67\&quot; data-line-number=\&quot;67\&quot;&gt;StackValue.kt:67&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.StackValue.put(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/StackValue.java\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/StackValue.java\&quot; lne=\&quot;118\&quot; data-line-number=\&quot;118\&quot;&gt;StackValue.java:118&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.StackValue.put(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/StackValue.java\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/StackValue.java\&quot; lne=\&quot;107\&quot; data-line-number=\&quot;107\&quot;&gt;StackValue.java:107&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.ExpressionCodegen.putStackValue(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/ExpressionCodegen.java\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/ExpressionCodegen.java\&quot; lne=\&quot;375\&quot; data-line-number=\&quot;375\&quot;&gt;ExpressionCodegen.java:375&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.ExpressionCodegen.gen(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/ExpressionCodegen.java\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/ExpressionCodegen.java\&quot; lne=\&quot;360\&quot; data-line-number=\&quot;360\&quot;&gt;ExpressionCodegen.java:360&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.ExpressionCodegen.returnExpression(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/ExpressionCodegen.java\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/ExpressionCodegen.java\&quot; lne=\&quot;1675\&quot; data-line-number=\&quot;1675\&quot;&gt;ExpressionCodegen.java:1675&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.FunctionGenerationStrategy$FunctionDefault.doGenerateBody(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/FunctionGenerationStrategy$FunctionDefault.java\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/FunctionGenerationStrategy$FunctionDefault.java\&quot; lne=\&quot;64\&quot; data-line-number=\&quot;64\&quot;&gt;FunctionGenerationStrategy.java:64&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.FunctionGenerationStrategy$CodegenBased.generateBody(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/FunctionGenerationStrategy$CodegenBased.java\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/FunctionGenerationStrategy$CodegenBased.java\&quot; lne=\&quot;84\&quot; data-line-number=\&quot;84\&quot;&gt;FunctionGenerationStrategy.java:84&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.FunctionCodegen.generateMethodBody(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/FunctionCodegen.java\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/FunctionCodegen.java\&quot; lne=\&quot;666\&quot; data-line-number=\&quot;666\&quot;&gt;FunctionCodegen.java:666&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.FunctionCodegen.generateMethodBody(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/FunctionCodegen.java\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/FunctionCodegen.java\&quot; lne=\&quot;471\&quot; data-line-number=\&quot;471\&quot;&gt;FunctionCodegen.java:471&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.FunctionCodegen.generateMethod(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/FunctionCodegen.java\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/FunctionCodegen.java\&quot; lne=\&quot;257\&quot; data-line-number=\&quot;257\&quot;&gt;FunctionCodegen.java:257&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.FunctionCodegen.generateMethod(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/FunctionCodegen.java\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/FunctionCodegen.java\&quot; lne=\&quot;173\&quot; data-line-number=\&quot;173\&quot;&gt;FunctionCodegen.java:173&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.FunctionCodegen.gen(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/FunctionCodegen.java\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/FunctionCodegen.java\&quot; lne=\&quot;144\&quot; data-line-number=\&quot;144\&quot;&gt;FunctionCodegen.java:144&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.MemberCodegen.genSimpleMember(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/MemberCodegen.java\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/MemberCodegen.java\&quot; lne=\&quot;197\&quot; data-line-number=\&quot;197\&quot;&gt;MemberCodegen.java:197&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.PackagePartCodegen.generateBody(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/PackagePartCodegen.java\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/PackagePartCodegen.java\&quot; lne=\&quot;95\&quot; data-line-number=\&quot;95\&quot;&gt;PackagePartCodegen.java:95&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.MemberCodegen.generate(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/MemberCodegen.java\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/MemberCodegen.java\&quot; lne=\&quot;129\&quot; data-line-number=\&quot;129\&quot;&gt;MemberCodegen.java:129&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.PackageCodegenImpl.generateFile(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/PackageCodegenImpl.java\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/PackageCodegenImpl.java\&quot; lne=\&quot;127\&quot; data-line-number=\&quot;127\&quot;&gt;PackageCodegenImpl.java:127&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.PackageCodegenImpl.generate(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/PackageCodegenImpl.java\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/PackageCodegenImpl.java\&quot; lne=\&quot;66\&quot; data-line-number=\&quot;66\&quot;&gt;PackageCodegenImpl.java:66&lt;/a&gt;)&lt;/span&gt;\n... 36 more\nCaused by: kotlin.KotlinNullPointerException\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.inline.AnonymousObjectTransformer.doTransform(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/inline/AnonymousObjectTransformer.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/inline/AnonymousObjectTransformer.kt\&quot; lne=\&quot;129\&quot; data-line-number=\&quot;129\&quot;&gt;AnonymousObjectTransformer.kt:129&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.inline.MethodInliner$doInline$lambdaInliner$1.handleAnonymousObjectRegeneration(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/inline/MethodInliner$doInline$lambdaInliner$1.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/inline/MethodInliner$doInline$lambdaInliner$1.kt\&quot; lne=\&quot;188\&quot; data-line-number=\&quot;188\&quot;&gt;MethodInliner.kt:188&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.inline.MethodInliner$doInline$lambdaInliner$1.anew(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/inline/MethodInliner$doInline$lambdaInliner$1.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/inline/MethodInliner$doInline$lambdaInliner$1.kt\&quot; lne=\&quot;212\&quot; data-line-number=\&quot;212\&quot;&gt;MethodInliner.kt:212&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.org.objectweb.asm.commons.InstructionAdapter.visitTypeInsn(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/org/objectweb/asm/commons/InstructionAdapter.java\&quot; data-file-path=\&quot;org/jetbrains/org/objectweb/asm/commons/InstructionAdapter.java\&quot; lne=\&quot;472\&quot; data-line-number=\&quot;472\&quot;&gt;InstructionAdapter.java:472&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.org.objectweb.asm.tree.TypeInsnNode.accept(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/org/objectweb/asm/tree/TypeInsnNode.java\&quot; data-file-path=\&quot;org/jetbrains/org/objectweb/asm/tree/TypeInsnNode.java\&quot; lne=\&quot;77\&quot; data-line-number=\&quot;77\&quot;&gt;TypeInsnNode.java:77&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.org.objectweb.asm.tree.InsnList.accept(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/org/objectweb/asm/tree/InsnList.java\&quot; data-file-path=\&quot;org/jetbrains/org/objectweb/asm/tree/InsnList.java\&quot; lne=\&quot;144\&quot; data-line-number=\&quot;144\&quot;&gt;InsnList.java:144&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.org.objectweb.asm.tree.MethodNode.accept(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/org/objectweb/asm/tree/MethodNode.java\&quot; data-file-path=\&quot;org/jetbrains/org/objectweb/asm/tree/MethodNode.java\&quot; lne=\&quot;792\&quot; data-line-number=\&quot;792\&quot;&gt;MethodNode.java:792&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.inline.MethodInliner.doInline(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/inline/MethodInliner.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/inline/MethodInliner.kt\&quot; lne=\&quot;390\&quot; data-line-number=\&quot;390\&quot;&gt;MethodInliner.kt:390&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.inline.MethodInliner.doInline(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/inline/MethodInliner.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/inline/MethodInliner.kt\&quot; lne=\&quot;102\&quot; data-line-number=\&quot;102\&quot;&gt;MethodInliner.kt:102&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.inline.MethodInliner.doInline(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/inline/MethodInliner.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/inline/MethodInliner.kt\&quot; lne=\&quot;75\&quot; data-line-number=\&quot;75\&quot;&gt;MethodInliner.kt:75&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.inline.InlineCodegen.inlineCall(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/inline/InlineCodegen.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/inline/InlineCodegen.kt\&quot; lne=\&quot;281\&quot; data-line-number=\&quot;281\&quot;&gt;InlineCodegen.kt:281&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/codegen/inline/InlineCodegen.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/codegen/inline/InlineCodegen.kt\&quot; lne=\&quot;162\&quot; data-line-number=\&quot;162\&quot;&gt;InlineCodegen.kt:162&lt;/a&gt;)&lt;/span&gt;\n... 62 more&lt;/p&gt;\n&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1548151042023,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3264259&quot;,&quot;author&quot;:&quot;Russell.Davis&quot;,&quot;authorFullName&quot;:&quot;Russell Davis&quot;,&quot;issueId&quot;:&quot;KT-17811&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;It&amp;#39;s been 18 months since this was reported. Will this ever be addressed?&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1548188826365,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3371811&quot;,&quot;author&quot;:&quot;yanex&quot;,&quot;authorFullName&quot;:&quot;Yan Zhulanow&quot;,&quot;issueId&quot;:&quot;KT-17811&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;The example from Nikolay works in the 1.3.30 RC:&lt;br/&gt;&lt;a href=\&quot;https://discuss.kotlinlang.org/t/kotlin-1-3-30-early-access-preview/11780/7\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener noreferrer\&quot;&gt;https://discuss.kotlinlang.org/t/kotlin-1-3-30-early-access-preview/11780/7&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;b data-user-id=\&quot;11-16163\&quot; title=\&quot;Russell Davis\&quot;&gt;@Russell Davis&lt;/b&gt; Please try if the new evaluator solves the problem for you.&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1553888201554,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3372066&quot;,&quot;author&quot;:&quot;Russell.Davis&quot;,&quot;authorFullName&quot;:&quot;Russell Davis&quot;,&quot;issueId&quot;:&quot;KT-17811&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;&lt;b data-user-id=\&quot;11-141111\&quot; title=\&quot;Yan Zhulanow\&quot;&gt;@Yan Zhulanow&lt;/b&gt; the 1.3.30 RC fixes it for me. Thank you!&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1553904444515,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3372084&quot;,&quot;author&quot;:&quot;yanex&quot;,&quot;authorFullName&quot;:&quot;Yan Zhulanow&quot;,&quot;issueId&quot;:&quot;KT-17811&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;&lt;b data-user-id=\&quot;11-16163\&quot; title=\&quot;Russell Davis\&quot;&gt;@Russell Davis&lt;/b&gt; Great. Thanks for checking!&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1553909285986,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]}],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-32990&quot;,&quot;entityId&quot;:&quot;25-2440620&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;Kotlin build hangs&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Alejandro Gomez&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1564181327795&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;32990&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Before running a test on a project idea compiles the project and it seems to hang, I see high CPU usage during a couple of minutes. Sometimes it ends, but others it shows an OOM error.&lt;br/&gt;The same happens using incremental compiler or not.&lt;br/&gt;Thread dump attached&lt;br/&gt;Intellij idea version 2019.2&lt;br/&gt;Kotlin plugin version 1.40-eap5 (happens also with latest stable)&lt;/p&gt;\n&lt;/div&gt;&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Alexander Chernikov&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;alegomez&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;4&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;sashache&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565710217123&quot;},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Performance Problem&quot;],&quot;valueId&quot;:[&quot;Performance Problem&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#ffc8ea&quot;,&quot;fg&quot;:&quot;#444&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Submitted&quot;],&quot;valueId&quot;:[&quot;Submitted&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;IDE&quot;],&quot;valueId&quot;:[&quot;IDE&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Yes&quot;],&quot;valueId&quot;:[&quot;Yes&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;v.dolzhenko&quot;,&quot;fullName&quot;:&quot;Vladimir Dolzhenko&quot;}]},{&quot;name&quot;:&quot;attachments&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;threadDump1.txt&quot;,&quot;id&quot;:&quot;74-696978&quot;,&quot;url&quot;:&quot;https://youtrack.jetbrains.com/_persistent/threadDump1.txt?file=74-696978&amp;c=true&quot;},{&quot;value&quot;:&quot;Screenshot from 2019-07-26 19-58-04.png&quot;,&quot;id&quot;:&quot;74-696979&quot;,&quot;url&quot;:&quot;https://youtrack.jetbrains.com/_persistent/Screenshot%20from%202019-07-26%2019-58-04.png?file=74-696979&amp;c=true&quot;},{&quot;value&quot;:&quot;sample-build-error.txt&quot;,&quot;id&quot;:&quot;74-697108&quot;,&quot;url&quot;:&quot;https://youtrack.jetbrains.com/_persistent/sample-build-error.txt?file=74-697108&amp;c=true&quot;},{&quot;value&quot;:&quot;another-sample-build-error.txt&quot;,&quot;id&quot;:&quot;74-697109&quot;,&quot;url&quot;:&quot;https://youtrack.jetbrains.com/_persistent/another-sample-build-error.txt?file=74-697109&amp;c=true&quot;}]}],&quot;comment&quot;:[{&quot;id&quot;:&quot;27-3621411&quot;,&quot;author&quot;:&quot;sashache&quot;,&quot;authorFullName&quot;:&quot;Alexander Chernikov&quot;,&quot;issueId&quot;:&quot;KT-32990&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;Thank you for reporting.&lt;br/&gt;If possible, please make also the memory snapshot. See: &lt;a href=\&quot;https://intellij-support.jetbrains.com/hc/en-us/articles/207241235\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener noreferrer\&quot;&gt;https://intellij-support.jetbrains.com/hc/en-us/articles/207241235&lt;/a&gt;&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1564501469622,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3622397&quot;,&quot;author&quot;:&quot;alegomez&quot;,&quot;authorFullName&quot;:&quot;Alejandro Gomez&quot;,&quot;issueId&quot;:&quot;KT-32990&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;uploaded 2 files:&lt;br/&gt;IU-192.5728.98_memory_unsterblich_30.07.2019_17.29.59.zip&lt;br/&gt;IU-192.5728.98_memory_unsterblich_30.07.2019_17.45.53.zip&lt;br/&gt;the first one a couple of minutes after starting a project rebuild, the second one almost 15 minutes later, just before getting OOMError:&lt;/p&gt;\n&lt;p&gt;&lt;code class=\&quot;inline-code\&quot;&gt;Error:Kotlin: [Internal Error] java.lang.OutOfMemoryError: Java heap space at org.jetbrains.kotlin.descriptors.impl.AbstractClassDescriptor.getMemberScope(AbstractClassDescriptor.java:104) at org.jetbrains.kotlin.types.KotlinTypeFactory.computeMemberScope(KotlinTypeFactory.kt:36) at org.jetbrains.kotlin.types.KotlinTypeFactory.simpleType(KotlinTypeFactory.kt:59) at org.jetbrains.kotlin.types.KotlinTypeFactory.simpleNotNullType(KotlinTypeFactory.kt:84) at org.jetbrains.kotlin.builtins.FunctionTypesKt.createFunctionType(functionTypes.kt:209) at org.jetbrains.kotlin.codegen.JvmRuntimeTypes.getSupertypesForFunctionReference(JvmRuntimeTypes.kt:143) at org.jetbrains.kotlin.codegen.binding.CodegenAnnotatingVisitor.visitCallableReferenceExpression(CodegenAnnotatingVisitor.java:380) at org.jetbrains.kotlin.psi.KtVisitorVoid.visitCallableReferenceExpression(KtVisitorVoid.java:821) at org.jetbrains.kotlin.psi.KtVisitorVoid.visitCallableReferenceExpression(KtVisitorVoid.java:21) at org.jetbrains.kotlin.psi.KtCallableReferenceExpression.accept(KtCallableReferenceExpression.java:43) at org.jetbrains.kotlin.psi.KtElementImpl.accept(KtElementImpl.java:51) at com.intellij.psi.impl.PsiElementBase.acceptChildren(PsiElementBase.java:69) at org.jetbrains.kotlin.codegen.binding.CodegenAnnotatingVisitor.visitKtElement(CodegenAnnotatingVisitor.java:204) at org.jetbrains.kotlin.psi.KtVisitorVoid.visitKtElement(KtVisitorVoid.java:447) at org.jetbrains.kotlin.psi.KtVisitorVoid.visitKtElement(KtVisitorVoid.java:21) at org.jetbrains.kotlin.psi.KtVisitor.visitArgument(KtVisitor.java:178) at org.jetbrains.kotlin.psi.KtVisitorVoid.visitArgument(KtVisitorVoid.java:165) at org.jetbrains.kotlin.psi.KtVisitorVoid.visitArgument(KtVisitorVoid.java:653) at org.jetbrains.kotlin.psi.KtVisitorVoid.visitArgument(KtVisitorVoid.java:21) at org.jetbrains.kotlin.psi.KtValueArgument.accept(KtValueArgument.java:46) at org.jetbrains.kotlin.psi.KtElementImplStub.accept(KtElementImplStub.java:59) at com.intellij.psi.impl.PsiElementBase.acceptChildren(PsiElementBase.java:69) at org.jetbrains.kotlin.codegen.binding.CodegenAnnotatingVisitor.visitKtElement(CodegenAnnotatingVisitor.java:204) at org.jetbrains.kotlin.psi.KtVisitorVoid.visitKtElement(KtVisitorVoid.java:447) at org.jetbrains.kotlin.psi.KtVisitorVoid.visitKtElement(KtVisitorVoid.java:21) at org.jetbrains.kotlin.psi.KtVisitor.visitValueArgumentList(KtVisitor.java:174) at org.jetbrains.kotlin.psi.KtVisitorVoid.visitValueArgumentList(KtVisitorVoid.java:161) at org.jetbrains.kotlin.psi.KtVisitorVoid.visitValueArgumentList(KtVisitorVoid.java:647) at org.jetbrains.kotlin.psi.KtVisitorVoid.visitValueArgumentList(KtVisitorVoid.java:21) at org.jetbrains.kotlin.psi.KtValueArgumentList.accept(KtValueArgumentList.java:40) at org.jetbrains.kotlin.psi.KtElementImplStub.accept(KtElementImplStub.java:59) at com.intellij.psi.impl.PsiElementBase.acceptChildren(PsiElementBase.java:69)&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1564522387426,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3638415&quot;,&quot;author&quot;:&quot;alegomez&quot;,&quot;authorFullName&quot;:&quot;Alejandro Gomez&quot;,&quot;issueId&quot;:&quot;KT-32990&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;&lt;b data-user-id=\&quot;11-248\&quot; title=\&quot;Alexander Chernikov\&quot;&gt;@Alexander Chernikov&lt;/b&gt; any update on this? idea takes more than 10 minutes to rebuild the project and many times fails after that time with OOM and other types of error&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565104102339,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3649588&quot;,&quot;author&quot;:&quot;alegomez&quot;,&quot;authorFullName&quot;:&quot;Alejandro Gomez&quot;,&quot;issueId&quot;:&quot;KT-32990&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;&lt;b data-user-id=\&quot;11-248\&quot; title=\&quot;Alexander Chernikov\&quot;&gt;@Alexander Chernikov&lt;/b&gt;  apparently it is related to values in idea64.vmoptions. In idea 2019.1 I had some customizations in this file and when installing idea 2019.2 i choose to import settings from previous version. This file was copied as is and some new configurations were not added, ie:&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;&lt;code&gt;-XX:CICompilerCount=2\n-Dsun.io.useCanonPrefixCache=false\n-Djdk.http.auth.tunneling.disabledSchemes=&amp;quot;&amp;quot;\n-Djdk.attach.allowAttachSelf\n-Dkotlinx.coroutines.debug=off\n-Dsun.tools.attach.tmp.only=true\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Adding these values manually seems to solved the issue&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565615447726,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]}],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-33288&quot;,&quot;entityId&quot;:&quot;25-2462014&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;JS: Incorrect bundle with webpack output.library and source maps&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Ilya Goncharov&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1565624920071&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;33288&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Now if source maps are enabled, webpack entry for Kotlin/JS is array, that contains browser-source-map-support.&lt;br/&gt;But if we use webpack.library (or libraryExport, libraryTarget) via additional scripts in webpack.config.d, only the last item of entry array is exported (last line of &lt;a href=\&quot;https://webpack.js.org/configuration/entry-context/\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener noreferrer\&quot;&gt;https://webpack.js.org/configuration/entry-context/&lt;/a&gt;)&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;When combining with the &lt;code class=\&quot;inline-code\&quot;&gt;output.library&lt;/code&gt; option: If an array is passed only the last item is exported.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;So only browser-source-map-support is exported, not actual library.&lt;/p&gt;\n&lt;/div&gt;&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Ilya Goncharov&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;ilgonmic&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;ilgonmic&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;3&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565708469937&quot;},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Problem&quot;],&quot;valueId&quot;:[&quot;Problem&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#fce5f1&quot;,&quot;fg&quot;:&quot;#dc5766&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Submitted&quot;],&quot;valueId&quot;:[&quot;Submitted&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Affected versions&quot;,&quot;value&quot;:[&quot;1.3.50&quot;],&quot;valueId&quot;:[&quot;1.3.50&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;JS. Tools&quot;],&quot;valueId&quot;:[&quot;JS. Tools&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Yes&quot;],&quot;valueId&quot;:[&quot;Yes&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;Sergey.Rostov&quot;,&quot;fullName&quot;:&quot;Sergey Rostov&quot;}]}],&quot;comment&quot;:[],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-33294&quot;,&quot;entityId&quot;:&quot;25-2462437&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;blocker: wrong JS generated when name clash and JsName used&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Robert Stoll&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1565682646373&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;33294&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Consider the following&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;&lt;code&gt;fun &amp;lt;T: Any&amp;gt; foo(t: T): List&amp;lt;T&amp;gt; = TODO()\n@JsName(&amp;quot;bar&amp;quot;)\nfun &amp;lt;T: Any&amp;gt; foo(t: T?): List&amp;lt;T?&amp;gt; = TODO()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;get&amp;#39;s generated as follows:&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;&lt;code&gt;function foo(t) {\n    throw new NotImplementedError_init();\n}\nfunction foo(t) {\n    throw new NotImplementedError_init();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;which means the second fun hides the first. It comes more obvious when we add an inline modifier:&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;&lt;code&gt;fun &amp;lt;T: Any&amp;gt; foo(t: T): List&amp;lt;T&amp;gt; = TODO()\n@JsName(&amp;quot;bar&amp;quot;)\ninline fun &amp;lt;T: Any&amp;gt; foo(t: T?): List&amp;lt;T?&amp;gt; = TODO()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;the resulting JS code&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;&lt;code&gt;function foo(t) {\n    throw new NotImplementedError_init();\n}\nvar foo = defineInlineFunction('atrium-api-fluent-en_GB-js.ch.tutteli.atrium.api.fluent.en_GB.bar', wrapFunction(function () {\n    var NotImplementedError_init = Kotlin.kotlin.NotImplementedError;\n    return function (t) {\n      throw new NotImplementedError_init();\n    };\n}));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This is a blocker for my library and means I cannot release a new version :(&lt;br/&gt;Please let me know if there is a known workaround and I hope this gets fixes soon.&lt;/p&gt;\n&lt;/div&gt;&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Alexander Chernikov&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;Robert_Stoll&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;4&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;sashache&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565707942299&quot;},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Bug&quot;],&quot;valueId&quot;:[&quot;Bug&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e30000&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Submitted&quot;],&quot;valueId&quot;:[&quot;Submitted&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Affected versions&quot;,&quot;value&quot;:[&quot;1.3.41&quot;],&quot;valueId&quot;:[&quot;1.3.41&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;Backend. JS&quot;],&quot;valueId&quot;:[&quot;Backend. JS&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Yes&quot;],&quot;valueId&quot;:[&quot;Yes&quot;],&quot;color&quot;:null}],&quot;comment&quot;:[{&quot;id&quot;:&quot;27-3650804&quot;,&quot;author&quot;:&quot;Robert_Stoll&quot;,&quot;authorFullName&quot;:&quot;Robert Stoll&quot;,&quot;issueId&quot;:&quot;KT-33294&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Notice, this most likely relates to &lt;a href=\&quot;https://youtrack.jetbrains.com/issue/KT-32451\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener noreferrer\&quot;&gt;https://youtrack.jetbrains.com/issue/KT-32451&lt;/a&gt; as it works for functions which do not have such a name clash&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565683171700,&quot;updated&quot;:1565683182070,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3651766&quot;,&quot;author&quot;:&quot;Anton.Bannykh&quot;,&quot;authorFullName&quot;:&quot;Anton Bannykh&quot;,&quot;issueId&quot;:&quot;KT-33294&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Seems like the name clash checker overlooks this case. Probably should  be a compiler error, same as in &lt;a href=\&quot;https://youtrack.jetbrains.com/issue/KT-32451\&quot; title=\&quot;JavaScript name generated for this declaration clashes with another declaration\&quot; data-issue-id=\&quot;25-2411761\&quot;&gt;KT-32451&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565704239216,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3651777&quot;,&quot;author&quot;:&quot;Anton.Bannykh&quot;,&quot;authorFullName&quot;:&quot;Anton Bannykh&quot;,&quot;issueId&quot;:&quot;KT-33294&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;On the second thought maybe not. Adding the &lt;code class=\&quot;inline-code\&quot;&gt;@JsName&lt;/code&gt; annotation does fix similar issues in /JVM backend and in case these functions are inside a class. So reporting errors in this case might seem strange&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565704657581,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3651878&quot;,&quot;author&quot;:&quot;Anton.Bannykh&quot;,&quot;authorFullName&quot;:&quot;Anton Bannykh&quot;,&quot;issueId&quot;:&quot;KT-33294&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Ugly workaround:&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;&lt;code&gt;fun &amp;lt;T: Any&amp;gt; foo(t: T, dummy: Int = 0): List&amp;lt;T&amp;gt; = TODO()\nfun &amp;lt;T: Any&amp;gt; foo(t: T?): List&amp;lt;T?&amp;gt; = TODO()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This should make those functions look different to the compiler internals.&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565707037546,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]}],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-7770&quot;,&quot;entityId&quot;:&quot;25-937305&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;SAM for Kotlin classes&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Sergei Lebedev&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1431964551160&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;7770&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;It seems that SAM conversion only works for Java interfaces. According to &lt;a href=\&quot;https://devnet.jetbrains.com/thread/461516\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener noreferrer\&quot;&gt;the forum discussion&lt;/a&gt; this is by design: Kotlin has functional types and everyone should just use them. While the argument is perfectly reasonable the restriction does feel a bit inconsistent.&lt;br/&gt;&lt;br/&gt;As an example consider a specialized version of the &lt;code class=\&quot;inline-code\&quot;&gt;java.util.function.Predicate&lt;/code&gt; which should be used from both Java and Kotlin code. Here&amp;#39;s the trait:&lt;br/&gt;&lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;FunctionalInterface&lt;br/&gt;trait CustomPredicate : Predicate&amp;lt;DoubleArray&amp;gt; {&lt;br/&gt;    // more methods go here&lt;br/&gt;}&lt;/pre&gt;&lt;br/&gt;And here&amp;#39;s the usage example:&lt;br/&gt;&lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;val p: Predicate&amp;lt;DoubleArray&amp;gt; = Predicate { true }&lt;br/&gt;&lt;br/&gt;val cp: CustomPredicate = CustomPredicate { true }  // ERROR!&lt;/pre&gt;&lt;br/&gt;The only way to get it working is to use an object expression, which is much more verbose compared to lambda:&lt;br/&gt;&lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;val cp: CustomPredicate = object : CustomPredicate {&lt;br/&gt;    override fun test(value: DoubleArray): Boolean = true&lt;br/&gt;}&lt;/pre&gt;&lt;br/&gt;So I was wondering if there&amp;#39;s a possibility to reconsider this design choice? because currently keeping SAM classes in Java looks more attractive than switching from lambdas to object expressions.&lt;/div&gt;\n&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Denis Zharkov&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;Sergei.Lebedev&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;44&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;denis.zharkov&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;172&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565707838601&quot;},{&quot;name&quot;:&quot;links&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;KT-11129&quot;,&quot;type&quot;:&quot;Relates&quot;,&quot;role&quot;:&quot;relates to&quot;},{&quot;value&quot;:&quot;KT-11431&quot;,&quot;type&quot;:&quot;Relates&quot;,&quot;role&quot;:&quot;relates to&quot;},{&quot;value&quot;:&quot;KT-11616&quot;,&quot;type&quot;:&quot;Relates&quot;,&quot;role&quot;:&quot;relates to&quot;},{&quot;value&quot;:&quot;KT-17687&quot;,&quot;type&quot;:&quot;Relates&quot;,&quot;role&quot;:&quot;relates to&quot;},{&quot;value&quot;:&quot;KT-22581&quot;,&quot;type&quot;:&quot;Relates&quot;,&quot;role&quot;:&quot;relates to&quot;},{&quot;value&quot;:&quot;KT-8719&quot;,&quot;type&quot;:&quot;Depend&quot;,&quot;role&quot;:&quot;is required for&quot;},{&quot;value&quot;:&quot;KT-12940&quot;,&quot;type&quot;:&quot;Duplicate&quot;,&quot;role&quot;:&quot;is duplicated by&quot;},{&quot;value&quot;:&quot;KT-13504&quot;,&quot;type&quot;:&quot;Duplicate&quot;,&quot;role&quot;:&quot;is duplicated by&quot;},{&quot;value&quot;:&quot;KT-16349&quot;,&quot;type&quot;:&quot;Duplicate&quot;,&quot;role&quot;:&quot;is duplicated by&quot;},{&quot;value&quot;:&quot;KT-23717&quot;,&quot;type&quot;:&quot;Duplicate&quot;,&quot;role&quot;:&quot;is duplicated by&quot;},{&quot;value&quot;:&quot;KT-14151&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-4066&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;subtask of&quot;}]},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Feature&quot;],&quot;valueId&quot;:[&quot;Feature&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#7dbd36&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;To be discussed&quot;],&quot;valueId&quot;:[&quot;To be discussed&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#0070e4&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Affected versions&quot;,&quot;value&quot;:[&quot;M11&quot;],&quot;valueId&quot;:[&quot;M11&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;Language design&quot;],&quot;valueId&quot;:[&quot;Language design&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Yes&quot;],&quot;valueId&quot;:[&quot;Yes&quot;],&quot;color&quot;:null}],&quot;comment&quot;:[{&quot;id&quot;:&quot;27-997598&quot;,&quot;author&quot;:&quot;pTalanov&quot;,&quot;authorFullName&quot;:&quot;Pavel Talanov&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;Are such hieararchies a common case? &lt;br/&gt;&lt;br/&gt;My understanding of SAM conversions, constructors and adapters:&lt;br/&gt;&lt;br/&gt;SAM are mainly a convenient automatic wrapper for the code that you cannot change. If you&amp;#39;re designing an API in Kotlin you can (and should) make a choice: Is this entity just a function or a separate class that can evolve into something more complex. If you want or for some reason stuck with both, you can mimic SAM constructor behaviour with a few lines of code:&lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;fun CustomPredicate(private val f: (DoubleArray) -&amp;gt; Boolean) = object : CustomPredicate {&lt;br/&gt;    override fun test(value: DoubleArray): Boolean = f(value)&lt;br/&gt;}&lt;/pre&gt;&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1431965410261,&quot;updated&quot;:1431965425533,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-997753&quot;,&quot;author&quot;:&quot;Sergei.Lebedev&quot;,&quot;authorFullName&quot;:&quot;Sergei Lebedev&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;&lt;div class=\&quot;wiki quote\&quot;&gt; Are such hieararchies a common case? &lt;/div&gt;&lt;br/&gt;&lt;br/&gt;No idea, but they do occur, that&amp;#39;s a fact :)&lt;br/&gt;&lt;br/&gt;As for the workaround: it does the job, but the fact that I&amp;#39;m forced to copy-paste this simply to please the compiler is a bit annoying. Sometimes practicality beats purity. &lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1431978053819,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-997838&quot;,&quot;author&quot;:&quot;Andrey.Breslav&quot;,&quot;authorFullName&quot;:&quot;Andrey Breslav&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;This is a rather exotic case with a pretty straightforward workaround. Introducing SAM conversions for Kotlin interfaces would complicate the language quite a bit, so we&amp;#39;ll refrain from doing it for now&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1432008343330,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-1071520&quot;,&quot;author&quot;:&quot;Bjorn_Tipling&quot;,&quot;authorFullName&quot;:&quot;Bjorn Tipling&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;This is pretty unfortunate. Using functional types would make it much more burdensome when having to change function signatures later if you&amp;#39;re storing those functions as variables or passing references around a lot. If you supported SAMs, only in the place where the function was being used would you have to make modifications when the function&amp;#39;s signature is changed. Whereas in the case of using function types you&amp;#39;d have to change the signature manually everywhere that function was passed in as an argument or stored as a variable.&lt;br/&gt;&lt;br/&gt;The uses for passing function types around are not exotic at all. Consider the observer pattern: if I&amp;#39;d want to store listener functions for events in my application that fire when interesting things happen I&amp;#39;d have to write that function signature all over the place including in the place that is storing a list of those listeners (i.e. val myListeners: ArrayList&amp;lt;FunctionType&amp;gt;), as well as any addListener function, any remove listener functions, and maybe I&amp;#39;d want to remove listeners multiple ways, maybe by id or maybe by some tag. Every single instance I do anything with that function it&amp;#39;s going to be a pain to deal with anytime I want to make changes, whereas with a SAM it would just be a type and I wouldn&amp;#39;t have much to change.&lt;br/&gt;&lt;br/&gt;Another use case could be node like callbacks passed through to tasks in Executors. I could probably think of more use cases.&lt;br/&gt;&lt;br/&gt;It seems to me the Kotlin way of doing this is more burdensome for developers than it would be in Java 8.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1438571898973,&quot;updated&quot;:1438571991520,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-1071523&quot;,&quot;author&quot;:&quot;cedricbeust&quot;,&quot;authorFullName&quot;:&quot;Cedric Beust&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;Just to add a +1 to &lt;b data-user-id=\&quot;11-68789\&quot;&gt;Bjorn Tipling&lt;/b&gt;&amp;#39;s point.&lt;br/&gt;&lt;br/&gt;I think Kotlin should never be more verbose than Java, period.&lt;br/&gt;&lt;br/&gt;Having said that, I respect &lt;b data-user-id=\&quot;11-14623\&quot;&gt;Andrey Breslav&lt;/b&gt;&amp;#39;s observation that this would complicate the language a lot, so probably not worth adding for 1.0 but please keep this in mind as the language moves forward. If a Kotlin interface is a SAM, I should be able to invoke it with the most minimalistic syntax (e.g. I shouldn&amp;#39;t have to write anything with an &amp;quot;override&amp;quot; keyword anywhere).&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1438573716897,&quot;updated&quot;:1438573786024,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-1122463&quot;,&quot;author&quot;:&quot;jayson.minard&quot;,&quot;authorFullName&quot;:&quot;Jayson Minard&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;Since &lt;b data-user-id=\&quot;11-68789\&quot;&gt;Bjorn Tipling&lt;/b&gt; wrote the comment, he learned about &lt;code class=\&quot;inline-code\&quot;&gt;invoke()&lt;/code&gt; in this thread: &lt;a href=\&quot;https://devnet.jetbrains.com/message/5550222#5550222\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener noreferrer\&quot;&gt;https://devnet.jetbrains.com/message/5550222#5550222&lt;/a&gt; which covers part of the issue (passing function types around) ... but not the &amp;quot;if I have a SAM regardless if writing in Java or Kotlin it should work the same&amp;quot;&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1443291277535,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-1210104&quot;,&quot;author&quot;:&quot;ilya.gorbunov&quot;,&quot;authorFullName&quot;:&quot;Ilya Gorbunov&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;Lack of SAM convention for Kotlin classes/functions makes them second-class citizen in certain situations.&lt;br/&gt;For example when Java method accepts &lt;code class=\&quot;inline-code\&quot;&gt;Comparator&lt;/code&gt; I can call it with SAM convention:&lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;Arrays.sort(arrayOf(1, 2, 3)) { a, b -&amp;gt; a - b }&lt;/pre&gt;&lt;br/&gt;But for Kotlin function with the same effective signature I can&amp;#39;t:&lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;arrayOf(1, 2, 3).sortWith { a, b -&amp;gt; a - b } // required Comparator, found (???, ???) -&amp;gt; [ERROR:]&lt;/pre&gt;&lt;br/&gt;Another reason to have SAM for Kotlin classes is the JS runtime, where &lt;code class=\&quot;inline-code\&quot;&gt;Comparator&lt;/code&gt; is a Kotlin interface and I can&amp;#39;t use SAM-constructor to instantiate it.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1447517077037,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-1274993&quot;,&quot;author&quot;:&quot;pniederw&quot;,&quot;authorFullName&quot;:&quot;Peter Niederwieser&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;This limitation is quite inconvenient, and very hard to understand at first. (&amp;quot;Why does this syntax work here, but not there?&amp;quot; IntelliJ gives no clue.) I considered porting SAM interfaces from Kotlin to Java to work around this, but then I&amp;#39;d lose non-nullable types.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1452815917526,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-1276487&quot;,&quot;author&quot;:&quot;Andrey.Breslav&quot;,&quot;authorFullName&quot;:&quot;Andrey Breslav&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;&lt;b data-user-id=\&quot;11-625\&quot;&gt;Peter Niederwieser&lt;/b&gt; If you find it convenient, you can use &lt;code class=\&quot;inline-code\&quot;&gt;@Nullable/@NotNull&lt;/code&gt; annotations for your Java interfaces&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1453110163650,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-1560316&quot;,&quot;author&quot;:&quot;Andrey.Breslav&quot;,&quot;authorFullName&quot;:&quot;Andrey Breslav&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;Another use case for SAM conversions: &lt;a href=\&quot;https://github.com/Kotlin/KEEP/issues/4#issuecomment-230365494\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener noreferrer\&quot;&gt;https://github.com/Kotlin/KEEP/issues/4#issuecomment-230365494&lt;/a&gt;&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1470734897144,&quot;updated&quot;:1453110163589,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-1567801&quot;,&quot;author&quot;:&quot;Jan.Kanis&quot;,&quot;authorFullName&quot;:&quot;Jan Kanis&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;&lt;div class=\&quot;wiki quote\&quot;&gt;Introducing SAM conversions for Kotlin interfaces would complicate the language quite a bit, so we&amp;#39;ll refrain from doing it for now&lt;/div&gt;&lt;br/&gt;&lt;br/&gt;It would complicate the &lt;em&gt;implementation&lt;/em&gt; of the language, but it would in fact simplify the language&amp;#39;s design (as understood by users). Kotlin is advertised as doing SAM conversion, but in fact it only does SAM conversion for Java interfaces. That&amp;#39;s an extra exception programmers don&amp;#39;t expect beforehand and they then need to keep in their heads. It is also a (very small) decrease in the compatibility with Java.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1470993675585,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-1569396&quot;,&quot;author&quot;:&quot;SupaHam&quot;,&quot;authorFullName&quot;:&quot;Ali Moghnieh&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;I&amp;#39;m so very confused. So I&amp;#39;m able to write &lt;code class=\&quot;inline-code\&quot;&gt;val runnable = Runnable { foo() }&lt;/code&gt; But I can&amp;#39;t create my own interface which is pretty much a copy of Runnable and repeat the same thing? I see a mention of this complicating the language, but in what way does it complicate the language. In fact, coming from java, I&amp;#39;d say this is even more complicated for me. Could we get an example on how things could get complicated?&lt;br/&gt;&lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;val field = Runnable { println(&amp;quot;hi&amp;quot;) }&lt;br/&gt;&lt;br/&gt;val field2 = Test { println(&amp;quot;hi&amp;quot;) } // Error&lt;br/&gt;&lt;br/&gt;@FunctionalInterface interface Test {&lt;br/&gt;    fun foo()&lt;br/&gt;}&lt;/pre&gt;&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1471097896537,&quot;updated&quot;:1471098100366,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-1570497&quot;,&quot;author&quot;:&quot;Andrey.Breslav&quot;,&quot;authorFullName&quot;:&quot;Andrey Breslav&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;&lt;div class=\&quot;wiki quote\&quot;&gt;&lt;div class=\&quot;wiki quote\&quot;&gt; Introducing SAM conversions for Kotlin interfaces would complicate the language quite a bit, so we&amp;#39;ll refrain from doing it for now&lt;/div&gt;&lt;/div&gt;&lt;br/&gt;&lt;br/&gt;&lt;div class=\&quot;wiki quote\&quot;&gt; It would complicate the implementation of the language, but it would in fact simplify the language&amp;#39;s design (as understood by users). &lt;/div&gt;&lt;br/&gt;&lt;br/&gt;&lt;b data-user-id=\&quot;11-11954\&quot;&gt;Jan Aukema&lt;/b&gt;.code@jankanis.nl The implementation of this feature isn&amp;#39;t all that hard. The language-level definition might be, though. Currently, SAM-conversions are not part of the language at all, they are completely concealed by the interop layer. To have them for Kotlin interfaces, we&amp;#39;ll need to add true language support, which complicates the language. &lt;br/&gt;&lt;br/&gt;The language design &amp;quot;as understood by [most of] the users&amp;quot; will likely be affected too, but not very much. But we have to care about the actual design too, not only the impressions people get.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1471255177423,&quot;updated&quot;:1471255196216,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-1572676&quot;,&quot;author&quot;:&quot;Jan.Kanis&quot;,&quot;authorFullName&quot;:&quot;Jan Kanis&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;&lt;b data-user-id=\&quot;11-14623\&quot;&gt;Andrey Breslav&lt;/b&gt; AFAIU the interop layer generates conversion functions for Java interfaces, so for an interface&lt;br/&gt;&lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;public interface IFoo {&lt;br/&gt;    Result method(Something arg)&lt;br/&gt;}&lt;/pre&gt;&lt;br/&gt;it will generate a function like&lt;br/&gt;&lt;br/&gt;&lt;pre class=\&quot;wikicode lang-kt prettyprint\&quot;&gt;@kotlin.internal.InlineOnly&lt;br/&gt;inline fun IFoo(crossinline block: (Something) -&amp;gt; Result): IFoo =&lt;br/&gt;    object : IFoo {&lt;br/&gt;        override fun method(arg: Something): Result = block(arg)&lt;br/&gt;    }&lt;/pre&gt;&lt;br/&gt;So wouldn&amp;#39;t it be possible to do the same for Kotlin interfaces? Or would that become too much of a hack?&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1471340200085,&quot;updated&quot;:1470993675526,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-1572700&quot;,&quot;author&quot;:&quot;kirill.rakhman&quot;,&quot;authorFullName&quot;:&quot;Kirill Rakhman&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;There are also synthetic overloads for functions taking SAM interfaces that accept lambdas instead.&lt;br/&gt;&lt;br/&gt;However, I think it would be an okay compromise to offer synthetic factory functions for Kotlin SAM interfaces while omitting the overloads taking lambdas.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1471340958246,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-1883770&quot;,&quot;author&quot;:&quot;ddimitrov&quot;,&quot;authorFullName&quot;:&quot;Dimitar Dimitrov&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;Another use case is when one needs to use Kotlin to create an API that can be consumed by both Kotlin and Java.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1485925472684,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-1989449&quot;,&quot;author&quot;:&quot;Dmitry.Petrov.1&quot;,&quot;authorFullName&quot;:&quot;Dmitry Petrov&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;Yet another example of how SAM adapters for Kotlin SAM interfaces would be useful.&lt;br/&gt;&lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;public interface JFoo {&lt;br/&gt;    void foo(int x, int y);&lt;br/&gt;}&lt;/pre&gt;&lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;interface KFoo {&lt;br/&gt;    fun foo(x: Int, y: Int)&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;fun useJFoo(jFoo: JFoo) = jFoo.foo(0, 0)            // non-boxed&lt;br/&gt;&lt;br/&gt;fun useKFoo(kFoo: KFoo) = kFoo.foo(0, 0)            // non-boxed&lt;br/&gt;&lt;br/&gt;fun useKFun(kFun: (Int, Int) -&amp;gt; Unit) = kFun(0, 0)  // boxed unless &amp;#39;inline&amp;#39;&lt;br/&gt;&lt;br/&gt;fun main(args: Array&amp;lt;String&amp;gt;) {&lt;br/&gt;    useJFoo(JFoo { x, y -&amp;gt; println(&amp;quot;x=$x, y=$y&amp;quot;) })&lt;br/&gt;&lt;br/&gt;    // useKFoo(KFoo { x, y -&amp;gt; println(&amp;quot;x=$x, y=$y&amp;quot;) }) // Error: Interface KFoo does not have constructors&lt;br/&gt;&lt;br/&gt;    // Quite boilerplate-ish, isn&amp;#39;t it?&lt;br/&gt;    useKFoo(object : KFoo {&lt;br/&gt;        override fun foo(x: Int, y: Int) {&lt;br/&gt;            println(&amp;quot;x=$x, y=$y&amp;quot;)&lt;br/&gt;        }&lt;br/&gt;    })&lt;br/&gt;&lt;br/&gt;    useKFun { x, y -&amp;gt; println(&amp;quot;x=$x, y=$y&amp;quot;) }&lt;br/&gt;}&lt;/pre&gt;&lt;br/&gt;Here Kotlin interfaces becomes second-class citizens in their own language :(&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1489128557636,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2069954&quot;,&quot;author&quot;:&quot;eugene.petrenko&quot;,&quot;authorFullName&quot;:&quot;Eugene Petrenko&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;My 2c. When converting a Java class with a functional interface into Kotlin. I have to fix all Kotlin usages of the class to replace SAM with explicit object creation. I expect to have the possibility to avoid updating other usages when converting a java class to Kotlin.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1490948204897,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2207078&quot;,&quot;author&quot;:&quot;xyhuangjinfu&quot;,&quot;authorFullName&quot;:&quot;huangjinfu&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;&lt;b data-user-id=\&quot;11-190094\&quot;&gt;Cedric Beust&lt;/b&gt; &lt;b data-user-id=\&quot;11-68789\&quot;&gt;Bjorn Tipling&lt;/b&gt; How about typealias?&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1496452379084,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2214272&quot;,&quot;author&quot;:&quot;justxdeath&quot;,&quot;authorFullName&quot;:&quot;Michał Wybierała&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;In my opinion, language should give you flexibility to choose when to use lambdas and when to use functional interfaces ( to mantain compatibility with java while keeping your project all in Kotlin ) &lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1496783771984,&quot;updated&quot;:1496831396021,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2214344&quot;,&quot;author&quot;:&quot;joserobjr&quot;,&quot;authorFullName&quot;:&quot;joserobjr&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;I had to create java interfaces in my kotlin project just because the lack of this feature.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1496791612087,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2243190&quot;,&quot;author&quot;:&quot;Tapac&quot;,&quot;authorFullName&quot;:&quot;Andrey Tarashevskiy&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;One more case. We use Kodein to bind SAM function interfaces to implementations.&lt;br/&gt;Compare java vs kotlin SAM usage, &amp;quot;override fun ...&amp;quot; boilerplate is annoying :&lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;interface FooIntToBool : Function1&amp;lt;Int, Boolean&amp;gt; // kotlin interface&lt;br/&gt;interface FooIntToBoolJava extends Function1&amp;lt;Integer, Boolean&amp;gt; // java analogue&lt;br/&gt;&lt;br/&gt;object Main {&lt;br/&gt;    val localKodein: Kodein = Kodein {&lt;br/&gt;        bind&amp;lt;FooIntToBool&amp;gt;() with singleton {&lt;br/&gt;            object : FooIntToBool {&lt;br/&gt;                override fun invoke(p1: Int) = p1 &amp;gt; 0&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        bind&amp;lt;FooIntToBoolJava&amp;gt;() with singleton {&lt;br/&gt;            FooIntToBoolJava { p1 -&amp;gt;  p1 &amp;gt; 0 }&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;/pre&gt;&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1497627460239,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2408367&quot;,&quot;author&quot;:&quot;spungin&quot;,&quot;authorFullName&quot;:&quot;Steven Spungin&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;It is almost unbelievable that migrating a SAM interface to from Java to Kotlin would require such verbose syntax when called from Kotlin.  Not only is this counter-intuitive and less maintainable, but also not really in the spirit of Kotlin.  &lt;br/&gt;&lt;br/&gt;Have you reconsidered implementing this?  It is making our migration from Java very difficult, and pretty much the main obstacle we have encountered.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1504917181194,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2576376&quot;,&quot;author&quot;:&quot;spungin&quot;,&quot;authorFullName&quot;:&quot;Steven Spungin&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;Another quite annoying issue we are facing:&lt;br/&gt;&lt;br/&gt;Our IEventHandler (defined in Kotlin) implementations must prefix the lambda with the interface name, and that requires it to be in the argument list, so we cannot take advantage of the &amp;#39;lambda is the last parameter&amp;#39; syntax.  It might seem trivial, but the final &amp;#39;)&amp;#39; can get really messy at times.&lt;br/&gt;&lt;br/&gt;So instead of:&lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;subscriptionManager.subscribe(Topic.ACTION) IEventHandler { }&lt;/pre&gt; &lt;br/&gt;&lt;br/&gt;We must write:&lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;subscriptionManager.subscribe(Topic.ACTION, IEventHandler { } )&lt;/pre&gt;&lt;br/&gt;&lt;br/&gt;Anyway, if SAM for Kotlin classes gets implemented, we would simply write the following and make this issue irrelevant:&lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;subscriptionManager.subscribe(Topic.ACTION, { } )&lt;/pre&gt;&lt;br/&gt;or even better:&lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;subscriptionManager.subscribe(Topic.ACTION) { }&lt;/pre&gt;&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1512308766286,&quot;updated&quot;:1512486498543,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2829628&quot;,&quot;author&quot;:&quot;spungin&quot;,&quot;authorFullName&quot;:&quot;Steven Spungin&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;Hello JetBrains.  Can someone please reply at this point if this is a technical or philosophical issue, and if there is even a remote possibility it will be implemented?  The issue state is &amp;#39;to be discussed&amp;#39; but the discussion seems to have ended.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1524087728608,&quot;updated&quot;:1512308766259,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2853487&quot;,&quot;author&quot;:&quot;georgi&quot;,&quot;authorFullName&quot;:&quot;Gesh Markov (Georgi)&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;This is no way to treat your 3rd most-voted-for issue.&lt;/p&gt;\n&lt;p&gt;I also find the original argument rather weak. When designing new APIs we should choose the most idiomatic way to use them - functions or interfaces. And if we choose functions, then happy days.&lt;/p&gt;\n&lt;p&gt;But if the most idiomatic thing to do is an interface - then what? Tough luck? We should just write the boilerplate?&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1525427811182,&quot;updated&quot;:1525433062621,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2853654&quot;,&quot;author&quot;:&quot;kirill.rakhman&quot;,&quot;authorFullName&quot;:&quot;Kirill Rakhman&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;&lt;b data-user-id=\&quot;11-359698\&quot;&gt;Gesh Markov (Georgi)&lt;/b&gt; According to &lt;a href=\&quot;https://youtrack.jetbrains.com/issue/KT-11129\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener noreferrer\&quot;&gt;https://youtrack.jetbrains.com/issue/KT-11129&lt;/a&gt;, the issue is in progress and will be introduced in 1.3.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1525431889511,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2853683&quot;,&quot;author&quot;:&quot;georgi&quot;,&quot;authorFullName&quot;:&quot;Gesh Markov (Georgi)&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;&lt;b data-user-id=\&quot;11-171144\&quot; title=\&quot;Kirill Rakhman\&quot;&gt;@Kirill Rakhman&lt;/b&gt; I&amp;#39;m not convinced &lt;a href=\&quot;https://youtrack.jetbrains.com/issue/KT-11129\&quot; title=\&quot;SAM conversion for kotlin function\&quot; data-issue-id=\&quot;25-1127247\&quot;&gt;KT-11129&lt;/a&gt; will solve the issue here. The example is of a Kotlin function with a &lt;strong&gt;Java&lt;/strong&gt; interface parameter and SAM conversion of Kotlin functions to the &lt;strong&gt;Java&lt;/strong&gt; interface.&lt;/p&gt;\n&lt;p&gt;It is similar to this one because if &lt;code class=\&quot;inline-code\&quot;&gt;foo()&lt;/code&gt; in their example were declared in a Java class the rest of the example will work. Once we convert it to Kotlin the rest breaks.&lt;/p&gt;\n&lt;p&gt;This issue here is when we convert the parameter interface (i.e. &lt;code class=\&quot;inline-code\&quot;&gt;Runnable&lt;/code&gt;) to Kotlin the rest breaks again, for a different reason.&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1525432817068,&quot;updated&quot;:1525432944982,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2889740&quot;,&quot;author&quot;:&quot;JLLeitschuh&quot;,&quot;authorFullName&quot;:&quot;Jonathan Leitschuh&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;The current way the compiler works, converting a Java functional interface to a Kotlin interface can be an API breaking change. That doesn&amp;#39;t really make much sense to me.&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1527438166236,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2917841&quot;,&quot;author&quot;:&quot;llaith&quot;,&quot;authorFullName&quot;:&quot;Nos Doughty&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;No disrespect intended, but the way this issue has been handled has resulted in me dropping Kotlin. The fact of the matter is, it&amp;#39;s a huge &lt;em&gt;practical&lt;/em&gt; issue to code clarity... and for a language that is based on being as much of an improvement to Java as it can be, without turning into another Scala, for a language that prided itself on following practicalities over purity (like when tuples were dropped for data classes), and that has made seamless interopt with Java it&amp;#39;s primary concern (even to the point of allowing Java and Kotlin classes mixed together in the same dir structure), this one major flaw, in practice, completely derails all of that. If you don&amp;#39;t believe me, just convert some standard Java project across to Kotlin and see how it looks. I understand it messes up your language design, but guys, you are going to have to suck it up and make the changes! Frankly, that&amp;#39;s why it&amp;#39;s so hard to make a successor to Java, the JVM was never really built to support multiple languages, it&amp;#39;s evolving that way in fits and starts.&lt;/p&gt;\n&lt;p&gt;However, sad to say, while I still hope you are successful with Kotlin, I won&amp;#39;t be there to see it. The way this issue has been left to rot just is not reflective of the kind of support and community engagement we have always received from Jetbrains in the past, and it leads me to think that the Kotlin team must be an isolated &amp;#39;startup&amp;#39; style team inside of Jetbrains.&lt;/p&gt;\n&lt;p&gt;As I don&amp;#39;t do much Android development (where I am sure Kotlin shines and it&amp;#39;s lack of interopt with standard Java libraries isn&amp;#39;t much of an issue), and I was just hoping for a slightly nicer Java and also something I could use for native development also, I&amp;#39;ve decided to abandon Kotlin. I have found that Rust is just as nice as Kotlin would have been for native development (and a huge thanks to whoever in Jetbrains is building that plugin for IntelliJ), and I can live with Java&amp;#39;s other failings as long as I can mix it with other libraries that build on it&amp;#39;s stream API such as vavr, and Quasar.&lt;/p&gt;\n&lt;p&gt;So really, this is just a post to let you know how I, and probably many others, are feeling about this issue, and hopefully that someone in Jetbrains takes note and course corrects before too much more damage to the community is done, hopefully someone can re-orientate the project so that it can go on in the future and be a success. I&amp;#39;d like to think that I can come back to have a look at Kotlin in a few years, and fall in love with it again.&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1529409600304,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2917916&quot;,&quot;author&quot;:&quot;spungin&quot;,&quot;authorFullName&quot;:&quot;Steven Spungin&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;&lt;b data-user-id=\&quot;11-7462\&quot;&gt;Nos Doughty&lt;/b&gt; As much as this issue is a complete PITA, and that it&amp;#39;s a bit insulting that this particular discussion is pretty much ignored, IJ has been VERY responsive to almost every other issue I have had. Kotlin&amp;#39;s benefits outweigh any problems by a landslide.&lt;br/&gt;&lt;br/&gt;IMO abandoning this technology for only this issue is silly considering Kotlin is the BEST Java-related language.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1529411604174,&quot;updated&quot;:1524087728584,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2918384&quot;,&quot;author&quot;:&quot;llaith&quot;,&quot;authorFullName&quot;:&quot;Nos Doughty&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;&lt;b data-user-id=\&quot;11-211391\&quot; title=\&quot;Steven Spungin\&quot;&gt;@Steven Spungin&lt;/b&gt;&lt;/p&gt;\n&lt;p&gt;It&amp;#39;s indicative of a pattern. I also voted for this:&lt;/p&gt;\n&lt;p&gt;&lt;a href=\&quot;https://youtrack.jetbrains.com/issue/KT-9220\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener noreferrer\&quot;&gt;https://youtrack.jetbrains.com/issue/KT-9220&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Again, complete dismissal, as are all requests that don&amp;#39;t match the Kotlin teams personal preferences. This isn&amp;#39;t normal Jetbrains behaviour. I hope they get back on track.&lt;/p&gt;\n&lt;p&gt;I agree Kotlin is today, one of the best languages on the JVM, which is a shame considering some of the contenders. I have to say that many people I work with and respect also like and use Scala and/or Clojure, so while I lean more towards agreeing with you on Kotlin myself, it&amp;#39;s possibly a bit strong a statement that it&amp;#39;s the absolute best on the platform.&lt;/p&gt;\n&lt;p&gt;But let&amp;#39;s not kid ourselves, using Kotlin comes with costs, from the resistance by management and other team members, to the warts of Kotlin itself. Unfortunately the arrival of Kotlin comes at a very interesting time in the software industry, one that means that Kotlin has to try much harder than Scala did to get it&amp;#39;s user-base.&lt;/p&gt;\n&lt;p&gt;On the one hand, we have Oracle seemingly re-vitalised and re-committing themselves to more frequent releases and far more innovation in the JVM, such as the huge and currently &lt;em&gt;in-progress&lt;/em&gt; support for true lightweight threads (like goroutines) in the core of the JVM itself. Awesome.&lt;/p&gt;\n&lt;p&gt;On the other hand, we have the impact of Docker and microservice based approaches to architecting applications which smooth over differences in languages. Our team is now building our solutions using Java, but also Python, Erlang/Elixir, Rust, Go, Nodejs, etc, each language doing only what it is best at, in it&amp;#39;s core domain, and each once a relatively low-risk option because of the limited scope of the provided services and the fact that those languages are pushed to success by their own open-source communities meaning there is a very high chance they will all be around in 10+ years when we look at re-writing the enterprise software we are writing today... once can not be as confident at the place of Kotlin, at least outside of Android (where let&amp;#39;s face it, Kotlin is the no-brainer option).&lt;/p&gt;\n&lt;p&gt;If the Kotlin team wants to earn a permanent place in the enterprise, they need to be a lot more receptive to the community, work on building trust... engage with the community, not dismiss it&amp;#39;s concerns out of hand.&lt;/p&gt;\n&lt;p&gt;Anyway, that&amp;#39;s the last I&amp;#39;m going to say, I don&amp;#39;t think this is the forum for a protracted dicsussion about this, but I think it needed to be brought up because I know I speak for many many other loyal Jetbrains fans who are disappointed.&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1529424406240,&quot;updated&quot;:1529409600130,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2918456&quot;,&quot;author&quot;:&quot;SupaHam&quot;,&quot;authorFullName&quot;:&quot;Ali Moghnieh&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;I still get emails about this issue 2 years later. I would have at least hoped this would be added and closed by now. It was said that the addition of the SAM conversion in Kotlin would complicate the language. I still fail to see how this complicates the language. I believe the common Kotlin user couldn&amp;#39;t care less about how complicated the implementation is. It doesn&amp;#39;t concern their feature consumption. The uneducated part of me on this solution thinks that the implementation mustn&amp;#39;t be that bad for such a straight forward feature.&lt;br/&gt;&lt;br/&gt;This issue helps the trail of not meeting your users needs, which I thought is what JetBrains excelled at.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1529426945165,&quot;updated&quot;:1471097896484,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2919336&quot;,&quot;author&quot;:&quot;denis.zharkov&quot;,&quot;authorFullName&quot;:&quot;Denis Zharkov&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Sorry for the lack of updates but the issue is far from being abandoned.&lt;br/&gt;We&amp;#39;ve been trying to fix the issue since 1.0 (e.g., it was one of the major reasons for type aliases introduction)&lt;/p&gt;\n&lt;p&gt;For now, it looks like implementation is not very complicated, indeed, but it&amp;#39;s still a rather big change in type checking/call resolution and depends on a big refactoring of our current implementation.&lt;/p&gt;\n&lt;p&gt;Moreover, we&amp;#39;re already trying to support SAMs for Kotlin functions in 1.3 (&lt;a href=\&quot;https://youtrack.jetbrains.com/issue/KT-11129\&quot; title=\&quot;SAM conversion for kotlin function\&quot; data-issue-id=\&quot;25-1127247\&quot;&gt;KT-11129&lt;/a&gt;).&lt;br/&gt;As regards SAM for Kotlin classes, it is a bit more complicated. For example, treating all the applicable interfaces as SAM might be too unexpected/implicit: one having a SAM-applicable interface may not assume&lt;br/&gt;that it will be used for SAM-conversions. Thus, adding another method to the interface becomes more painful since it might require changing syntax on the call sites (e.g. transforming callable reference to object literal).&lt;/p&gt;\n&lt;p&gt;Because of it, current vision is adding some kind of modifier for interfaces that when being applied:&lt;/p&gt;\n&lt;ol class=\&quot;wiki-list0\&quot;&gt;\n&lt;li&gt;Adds a check that the interface is a valid SAM&lt;/li&gt;\n&lt;li&gt;Allows SAM-conversions on call sites for it&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;Something like this:&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;&lt;code&gt;fun interface MyRunnable {\n  fun run()\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;But, unfortunately, we still don&amp;#39;t have any estimations of dates when the feature gets released.&lt;br/&gt;At the same time, we see that community wants it and will try hard to make it ASAP.&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1529497687196,&quot;updated&quot;:1529504869266,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2919696&quot;,&quot;author&quot;:&quot;ddsimoes&quot;,&quot;authorFullName&quot;:&quot;Daniel Duarte Simoes&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;blockquote&gt;\n&lt;p&gt;As regards SAM for Kotlin classes, it is a bit more complicated. For example, treating all the applicable interfaces as SAM might be too unexpected/implicit: one having a SAM-applicable interface may not assume&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;What if we use some annotation, like &lt;code class=\&quot;inline-code\&quot;&gt;@FunctionalInterface&lt;/code&gt;?&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1529505311053,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2919774&quot;,&quot;author&quot;:&quot;denis.zharkov&quot;,&quot;authorFullName&quot;:&quot;Denis Zharkov&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;It could be some annotation, of course, but using modifier seems to be more consistent with other platform-independent language&amp;#39;s features&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1529506834369,&quot;updated&quot;:1529497687058,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2919783&quot;,&quot;author&quot;:&quot;kirill.rakhman&quot;,&quot;authorFullName&quot;:&quot;Kirill Rakhman&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;&lt;div class=\&quot;wiki quote\&quot;&gt; As regards SAM for Kotlin classes, it is a bit more complicated. For example, treating all the applicable interfaces as SAM might be too unexpected/implicit: one having a SAM-applicable interface may not assume that it will be used for SAM-conversions. Thus, adding another method to the interface becomes more painful since it might require changing syntax on the call sites (e.g. transforming callable reference to object literal).&lt;/div&gt;&lt;br/&gt;&lt;br/&gt;Java should have the same problem, yet the language designers decided to explicitly allow all SAM-applicable interface for use with lambdas.&lt;br/&gt;&lt;br/&gt;I think requiring a special keyword or annotation for SAM interfaces will complicate the language but won&amp;#39;t bring any real benefits. Adding a method to an interface will always be a breaking change, no matter if it&amp;#39;s implemented by a lambda or a class.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1529507078570,&quot;updated&quot;:1525431889482,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2919821&quot;,&quot;author&quot;:&quot;mkwidzinski&quot;,&quot;authorFullName&quot;:&quot;Maciej Kwidziński&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Why would we need a marker for SAM? Even Java&amp;#39;s &lt;code class=\&quot;inline-code\&quot;&gt;@FunctionalInterface&lt;/code&gt; is purely informational and &lt;a href=\&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/FunctionalInterface.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener noreferrer\&quot;&gt;has no effect on the compiler&lt;/a&gt; whatsoever:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;However, the compiler will treat any interface meeting the definition of a functional interface as a functional interface regardless of whether or not a &lt;code class=\&quot;inline-code\&quot;&gt;FunctionalInterface&lt;/code&gt; annotation is present on the interface declaration.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;I agree with &lt;b data-user-id=\&quot;11-171144\&quot; title=\&quot;Kirill Rakhman\&quot;&gt;@Kirill Rakhman&lt;/b&gt;, introducing new abstract methods to interfaces breaks SAM criteria anyway.&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1529508767982,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2919833&quot;,&quot;author&quot;:&quot;elizarov&quot;,&quot;authorFullName&quot;:&quot;Roman Elizarov&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;Java&amp;#39;s designers had been operating in a very different design space when designing lambdas for Java. For one, Java did not have (and it still does not have) functional types. Java has only interfaces. Kotlin&amp;#39;s design space is vastly different and I don&amp;#39;t see any reason as to why Kotlin&amp;#39;s design decision about SAM conversion should end up being anyhow similar to Java&amp;#39;s decision. Having said that, it is still a very open issue and no design decision had been made yet.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1529509122851,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2920008&quot;,&quot;author&quot;:&quot;llaith&quot;,&quot;authorFullName&quot;:&quot;Nos Doughty&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Please consider the following:&lt;/p&gt;\n&lt;p&gt;On the one hand, it seems like there &lt;em&gt;has&lt;/em&gt; been some thinking put in to this issue going on behind the scenes. That is certainly gratifying to read. It&amp;#39;s a shame that none of us know about it.&lt;/p&gt;\n&lt;p&gt;On the other hand, I&amp;#39;d like to point out that there are some truly excellent comments, examples, and suggestions from your users on this issue, all the way back to the start, over 3 years ago. This is &lt;em&gt;your&lt;/em&gt; community... engaged, technically proficient and loyal! I would think any company would be thrilled to have such a user-base.&lt;/p&gt;\n&lt;p&gt;Can I suggest that you find a way to leverage that in future? If not via these forums, perhaps via other means, perhaps by setting up some kotlin-dev mailing lists in the spirit of the openjdk ones?&lt;/p&gt;\n&lt;p&gt;Eg, &lt;a href=\&quot;http://mail.openjdk.java.net/mailman/listinfo\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener noreferrer\&quot;&gt;http://mail.openjdk.java.net/mailman/listinfo&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1529517492684,&quot;updated&quot;:1529424406101,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2920016&quot;,&quot;author&quot;:&quot;TWiStErRob&quot;,&quot;authorFullName&quot;:&quot;Róbert Papp&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;&lt;b data-user-id=\&quot;11-240683\&quot; title=\&quot;Roman Elizarov\&quot;&gt;@Roman Elizarov&lt;/b&gt; careful, I think &lt;b data-user-id=\&quot;11-171144\&quot; title=\&quot;Kirill Rakhman\&quot;&gt;@Kirill Rakhman&lt;/b&gt; in &lt;a href=\&quot;https://youtrack.jetbrains.com/issue/KT-7770#comment=27-2919783\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener noreferrer\&quot;&gt;https://youtrack.jetbrains.com/issue/KT-7770#comment=27-2919783&lt;/a&gt; meant&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Java [interfaces used from Kotlin] should have the same problem, yet the [Kotlin] language designers decided to explicitly allow all SAM-applicable [Java] interface[s] for use with lambdas.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;em&gt;legend&lt;/em&gt;: [my interpretation based on context]&lt;/p&gt;\n&lt;p&gt;I also agree that adding a method to an interface is breaking, and if users need to change syntax (SAM lambda to object literal), that&amp;#39;s not a big deal because before that method was added they could write idiomatic code. Benefits seem to outweigh drawbacks with this argument.&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1529518169268,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2920063&quot;,&quot;author&quot;:&quot;elizarov&quot;,&quot;authorFullName&quot;:&quot;Roman Elizarov&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;&lt;b data-user-id=\&quot;11-7462\&quot;&gt;Nos Doughty&lt;/b&gt; We keep all the issues open in this issue tracker exactly for the reason of involving our great community. We review all the accumulated comments and suggestions when it comes to actual design. Personally, I think it is a more structured and more open approach than a mailing list. However, note that issues in this YouTrack are just issues. They are here to collect use-cases and problems. When we or somebody from community have some kind of actual design to address those issues, then a KEEP document is created where this particular proposed design can be reviewed by community.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1529522669862,&quot;updated&quot;:1529522709387,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3152816&quot;,&quot;author&quot;:&quot;yanis.biziuk&quot;,&quot;authorFullName&quot;:&quot;Yanis Biziuk&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;ugly, but working solution&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;&lt;code&gt;interface ViewStateMerger&amp;lt;VS : BaseFragmentViewState&amp;gt; {\n    fun merge(vs: VS): VS\n\n    companion object {\n        fun &amp;lt;VS : BaseFragmentViewState&amp;gt; sam(callback: (vs: VS) -&amp;gt; VS): ViewStateMerger&amp;lt;VS&amp;gt; {\n            return object : ViewStateMerger&amp;lt;VS&amp;gt; {\n                override fun merge(vs: VS): VS {\n                    return callback(vs)\n                }\n            }\n        }\n    }\n}\n\n...\n\nxxx.map&amp;lt;ViewStateMerger&amp;lt;VS&amp;gt;&amp;gt; {\n    ViewStateMerger.sam { vs: VS -&amp;gt;\n        vs\n     }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1542104671563,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3290802&quot;,&quot;author&quot;:&quot;bennyl&quot;,&quot;authorFullName&quot;:&quot;benny lutati&quot;,&quot;issueId&quot;:&quot;KT-7770&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;&lt;b data-user-id=\&quot;11-335488\&quot; title=\&quot;Yanis Biziuk\&quot;&gt;@Yanis Biziuk&lt;/b&gt;, you can use inline functions in order to remove intermediate objects and improve the memory and performance of your solution, in addition, you can take advantage of operator overloading to remove the redundant sam method name:&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;kotlin&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint linenums\&quot;&gt;&lt;code class=\&quot;language-kotlin\&quot;&gt;interface SomeFunctionalInterface {\n    fun someMethod(arg1: Int, arg2: String)\n\n    companion object {\n        inline operator fun invoke(crossinline op: (arg1: Int, arg2: String) -&amp;gt; Unit) =\n            object : SomeFunctionalInterface {\n                override fun someMethod(arg1: Int, arg2: String) = op(arg1, arg2)\n            }\n    }\n}\n\nfun foo(goo: SomeFunctionalInterface) {\n    //...\n}\n\nfun main() {\n    foo(SomeFunctionalInterface { arg1, arg2 -&amp;gt;\n        //...\n    })\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In a different context,&lt;br/&gt;I would like to add an argument in favor of adding SAM to kotlin interfaces:&lt;br/&gt;I believe that the main reason that  SAM is required in kotlin interfaces is to reduce boxing of primitive types.&lt;br/&gt;Sadly, standard lambdas in kotlin are implemented as generic instances - this force classes that want to expose a function that accepts lambda with a primitive argument (i.e., Int, or Float) very inefficient.&lt;/p&gt;\n&lt;p&gt;In order to overcome this limitation, you can either use functional interface which requires SAM for convinient usage or make your function  inline which force you to sacrifice encapsulation ( as inline functions can only see the public members of the class)&lt;/p&gt;\n&lt;p&gt;Of course, reimplementing kotlin lambdas using invoke dynamic while taking advantage of polymorphic signatures may render this argument null.&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1550085186826,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]}],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-33291&quot;,&quot;entityId&quot;:&quot;25-2462203&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;JS: No build result with gradle parallel build in multiproject build&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Ilya Goncharov&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1565639814971&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;33291&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;If parallel gradle build is used for multiproject kotlin/js, there is no build result after build success (no build folder for subprojects and no js files in root build folder).&lt;br/&gt;It can be gradle specific problem (&lt;a href=\&quot;https://github.com/gradle/gradle/issues/2488\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener noreferrer\&quot;&gt;https://github.com/gradle/gradle/issues/2488&lt;/a&gt;), but in 1.3.41 there is no such problem.&lt;/p&gt;\n&lt;p&gt;Sample:&lt;br/&gt;&lt;a href=\&quot;https://github.com/ilgonmic/kotlinjs-multi-module/tree/1.3.50-eap-54\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener noreferrer\&quot;&gt;https://github.com/ilgonmic/kotlinjs-multi-module/tree/1.3.50-eap-54&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Alexander Chernikov&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;ilgonmic&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;sashache&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565707820406&quot;},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Task&quot;],&quot;valueId&quot;:[&quot;Task&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Wait for Reply&quot;],&quot;valueId&quot;:[&quot;Wait for Reply&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#0050a1&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Affected versions&quot;,&quot;value&quot;:[&quot;1.3.50&quot;],&quot;valueId&quot;:[&quot;1.3.50&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;JS. Tools&quot;],&quot;valueId&quot;:[&quot;JS. Tools&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;Sergey.Rostov&quot;,&quot;fullName&quot;:&quot;Sergey Rostov&quot;}]}],&quot;comment&quot;:[{&quot;id&quot;:&quot;27-3651907&quot;,&quot;author&quot;:&quot;sashache&quot;,&quot;authorFullName&quot;:&quot;Alexander Chernikov&quot;,&quot;issueId&quot;:&quot;KT-33291&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;Sorry, can&amp;#39;t reproduce. Opened the referred project, switched to referred branch.&lt;br/&gt;Added &lt;code class=\&quot;inline-code\&quot;&gt;org.gradle.parallel=true&lt;/code&gt; into &lt;code class=\&quot;inline-code\&quot;&gt;gradle.properties&lt;/code&gt;.&lt;br/&gt;Done Gradle &lt;code class=\&quot;inline-code\&quot;&gt;clean&lt;/code&gt;.&lt;br/&gt;Killed all Gradle daemons.&lt;br/&gt;Done Gradle &lt;code class=\&quot;inline-code\&quot;&gt;build&lt;/code&gt;, got all (or seems that all) output directories and files.&lt;br/&gt;&lt;br/&gt;How do you reproduce the issue?&lt;br/&gt;Thank you.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565707802154,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]}],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-32451&quot;,&quot;entityId&quot;:&quot;25-2411761&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;JavaScript name generated for this declaration clashes with another declaration&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Robert Stoll&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1562432776486&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;32451&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;Consider the following:&lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;class A&amp;lt;T&amp;gt;{}&lt;br/&gt;fun &amp;lt;T: Any&amp;gt; A&amp;lt;T&amp;gt;.foo(expected: T) : A&amp;lt;T&amp;gt; = TODO()&lt;br/&gt;inline fun &amp;lt;reified T : Any&amp;gt; A&amp;lt;T?&amp;gt;.foo(expected: T?) : A&amp;lt;T?&amp;gt; = TODO()&lt;/pre&gt;Results in &lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;JavaScript name (foo_74vpl6$) generated for this declaration clashes with another declaration: inline fun &amp;lt;reified T : Any&amp;gt; A&amp;lt;T?&amp;gt;.foo(expected: T?): A&amp;lt;T?&amp;gt;&lt;br/&gt;JavaScript name (foo_74vpl6$) generated for this declaration clashes with another declaration: fun &amp;lt;T : Any&amp;gt; A&amp;lt;T&amp;gt;.foo(expected: T): A&amp;lt;T&amp;gt;&lt;/pre&gt;&lt;/div&gt;\n&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Anton Bannykh&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;Robert_Stoll&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;2&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;Anton.Bannykh&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565707350054&quot;},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Bug&quot;],&quot;valueId&quot;:[&quot;Bug&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e30000&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Submitted&quot;],&quot;valueId&quot;:[&quot;Submitted&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Affected versions&quot;,&quot;value&quot;:[&quot;1.3.31&quot;,&quot;1.3.41&quot;],&quot;valueId&quot;:[&quot;1.3.31&quot;,&quot;1.3.41&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;Backend. JS&quot;],&quot;valueId&quot;:[&quot;Backend. JS&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Reproduced&quot;],&quot;valueId&quot;:[&quot;Reproduced&quot;],&quot;color&quot;:null}],&quot;comment&quot;:[{&quot;id&quot;:&quot;27-3598467&quot;,&quot;author&quot;:&quot;Robert_Stoll&quot;,&quot;authorFullName&quot;:&quot;Robert Stoll&quot;,&quot;issueId&quot;:&quot;KT-32451&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;Another use case: &lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;class WorstCase {&lt;br/&gt;    val propAndFun: Int = 1&lt;br/&gt;    fun propAndFun(): Int = 1&lt;br/&gt;}&lt;/pre&gt;&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1563814140059,&quot;updated&quot;:1563814147239,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3651889&quot;,&quot;author&quot;:&quot;Anton.Bannykh&quot;,&quot;authorFullName&quot;:&quot;Anton Bannykh&quot;,&quot;issueId&quot;:&quot;KT-32451&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;In case of &lt;code class=\&quot;inline-code\&quot;&gt;fun&lt;/code&gt; vs &lt;code class=\&quot;inline-code\&quot;&gt;val&lt;/code&gt; the &lt;code class=\&quot;inline-code\&quot;&gt;@JsName&lt;/code&gt; annotation should help, e.g.&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;&lt;code&gt;class WorstCase {\n   @JsName(&amp;quot;prop&amp;quot;)\n    val propAndFun: Int = 1\n    fun propAndFun(): Int = 1\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If there is no annotation, those declarations will clash at run time, so the compiler error is actually expected.&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565707350069,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]}],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-12787&quot;,&quot;entityId&quot;:&quot;25-1232782&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;Debugger: Generate line number at end of function (to set a breakpoint on the last line of the block)&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Ulf Hesselbarth&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1466428074067&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;12787&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;Sometimes it&amp;#39;s handy to break at the end of a function. Currently the kotlin compiler does not seem to generate a linenumber there as opposed to the java compiler.&lt;br/&gt;&lt;br/&gt;&lt;div class=\&quot;java code title\&quot;&gt;Kotlin&lt;/div&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;class Foo {&lt;br/&gt;    @JvmField val bar: String&lt;br/&gt;    init {&lt;br/&gt;        bar = &amp;quot;bar&amp;quot;&lt;br/&gt;    } // you cannot break here&lt;br/&gt;}&lt;/pre&gt;&lt;br/&gt;&lt;div class=\&quot;java code title\&quot;&gt;Java&lt;/div&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;public class FooJava {&lt;br/&gt;    private String bar;&lt;br/&gt;    {&lt;br/&gt;        bar = &amp;quot;bar&amp;quot;;&lt;br/&gt;    } // you can break here&lt;br/&gt;}&lt;/pre&gt;&lt;/div&gt;\n&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Aleksandr Gribovich&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;ulfhesselbarth&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;Aleksandr.Gribovich&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;3&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565706680961&quot;},{&quot;name&quot;:&quot;resolved&quot;,&quot;value&quot;:&quot;1559198834217&quot;},{&quot;name&quot;:&quot;links&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;KT-12789&quot;,&quot;type&quot;:&quot;Duplicate&quot;,&quot;role&quot;:&quot;is duplicated by&quot;}]},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Feature&quot;],&quot;valueId&quot;:[&quot;Feature&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#7dbd36&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Priority&quot;,&quot;value&quot;:[&quot;Normal&quot;],&quot;valueId&quot;:[&quot;Normal&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e6f6cf&quot;,&quot;fg&quot;:&quot;#4da400&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Fixed&quot;],&quot;valueId&quot;:[&quot;Fixed&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#409600&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;Backend. JVM&quot;,&quot;IDE. Debugger&quot;],&quot;valueId&quot;:[&quot;Backend. JVM&quot;,&quot;IDE. Debugger&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Target versions&quot;,&quot;value&quot;:[&quot;1.3.50&quot;],&quot;valueId&quot;:[&quot;1.3.50&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;Yes&quot;],&quot;valueId&quot;:[&quot;Yes&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Fix in builds&quot;,&quot;value&quot;:[&quot;1.3.50-dev-684&quot;],&quot;valueId&quot;:[&quot;1.3.50-dev-684&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Yes&quot;],&quot;valueId&quot;:[&quot;Yes&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;yanex&quot;,&quot;fullName&quot;:&quot;Yan Zhulanow&quot;}]},{&quot;name&quot;:&quot;Tester (Kotlin)&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;Aleksandr.Gribovich&quot;,&quot;fullName&quot;:&quot;Aleksandr Gribovich&quot;}]}],&quot;comment&quot;:[{&quot;id&quot;:&quot;27-3651862&quot;,&quot;author&quot;:&quot;Aleksandr.Gribovich&quot;,&quot;authorFullName&quot;:&quot;Aleksandr Gribovich&quot;,&quot;issueId&quot;:&quot;KT-12787&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Fix confirmed in:&lt;/p&gt;\n&lt;ul class=\&quot;wiki-list0\&quot;&gt;\n&lt;li&gt;IJ 193.2212 + Kotlin 1.3.60-dev-971&lt;/li&gt;\n&lt;li&gt;IJ 191.8026.42 + Kotlin 1.3.50-eap-82&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565706674516,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]}],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-33310&quot;,&quot;entityId&quot;:&quot;25-2463366&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;TYPE_MISMATCH for `this` in arguments of local declaration constructor of class with companion object&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Alexander Chernikov&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1565706576347&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;33310&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;Compile or open in IDE the Kotlin dummy:&lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;interface TypeFace&lt;br/&gt;&lt;br/&gt;open class ConstructedNoComp(filler: Any?, face: TypeFace)&lt;br/&gt;&lt;br/&gt;open class ConstructedComp(filler: Any?, face: TypeFace) {&lt;br/&gt;    companion object&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;class ContextClass : TypeFace {&lt;br/&gt;    fun context() {&lt;br/&gt;        object : ConstructedNoComp(&amp;quot;&amp;quot;, this) {} // green&lt;br/&gt;        object : ConstructedComp(&amp;quot;&amp;quot;, this) {} // TYPE_MISMATCH&lt;br/&gt;        object : ConstructedComp(&amp;quot;&amp;quot;, this@ContextClass) {} // green&lt;br/&gt;&lt;br/&gt;        class LocalNoComp : ConstructedNoComp(&amp;quot;&amp;quot;, this) // green&lt;br/&gt;        class LocalComp : ConstructedComp(&amp;quot;&amp;quot;, this) // TYPE_MISMATCH&lt;br/&gt;&lt;br/&gt;        ConstructedNoComp(&amp;quot;&amp;quot;, this) // green&lt;br/&gt;        ConstructedComp(&amp;quot;&amp;quot;, this) // green&lt;br/&gt;    }&lt;br/&gt;}&lt;/pre&gt;TYPE_MISMATCH is reported for constructors of &lt;code class=\&quot;inline-code\&quot;&gt;ConstructedComp&lt;/code&gt; called in declaration of child class/object.&lt;br/&gt;&lt;br/&gt;The weird thing is that when class has no companion object, &lt;code class=\&quot;inline-code\&quot;&gt;this&lt;/code&gt; is resolved to containing &lt;code class=\&quot;inline-code\&quot;&gt;ContextClass&lt;/code&gt;.&lt;br/&gt;But when it has the &lt;code class=\&quot;inline-code\&quot;&gt;this&lt;/code&gt; is resolved to the companion - located inside completely different class.&lt;br/&gt;Looks like too fluid &lt;code class=\&quot;inline-code\&quot;&gt;this&lt;/code&gt; semantics.&lt;br/&gt;&lt;br/&gt;Occurs with new and old inference.&lt;br/&gt;&lt;br/&gt;Observed with 1.3.50-eap-54.&lt;/div&gt;\n&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Alexander Chernikov&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;sashache&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;sashache&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565706576347&quot;},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Bug&quot;],&quot;valueId&quot;:[&quot;Bug&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e30000&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Submitted&quot;],&quot;valueId&quot;:[&quot;Submitted&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;Frontend. Resolution and Inference&quot;],&quot;valueId&quot;:[&quot;Frontend. Resolution and Inference&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Reproduced&quot;],&quot;valueId&quot;:[&quot;Reproduced&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Tester (Kotlin)&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;sashache&quot;,&quot;fullName&quot;:&quot;Alexander Chernikov&quot;}]}],&quot;comment&quot;:[],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-28434&quot;,&quot;entityId&quot;:&quot;25-2181957&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;IR: generate proper JVM names for accessors in KotlinTypeMapper&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Georgy Bronnikov&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1543233943190&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;28434&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Currently by the time JVM code is generated, the fact that a certain function is a property accessor may be lost. (At least, with wrapped descriptors, we no longer have &lt;code class=\&quot;inline-code\&quot;&gt;PropertyAccessorDescriptor&lt;/code&gt;.)&lt;br/&gt;It should be possible nevertheless to produce a JVM name properly.&lt;/p&gt;\n&lt;/div&gt;&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Alexander Udalov&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;Georgy.Bronnikov&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;udalov&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565706167318&quot;},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Bug&quot;],&quot;valueId&quot;:[&quot;Bug&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e30000&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Priority&quot;,&quot;value&quot;:[&quot;Normal&quot;],&quot;valueId&quot;:[&quot;Normal&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e6f6cf&quot;,&quot;fg&quot;:&quot;#4da400&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;In Progress&quot;],&quot;valueId&quot;:[&quot;In Progress&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#ff7123&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;Backend. IR&quot;],&quot;valueId&quot;:[&quot;Backend. IR&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Yes&quot;],&quot;valueId&quot;:[&quot;Yes&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;udalov&quot;,&quot;fullName&quot;:&quot;Alexander Udalov&quot;}]}],&quot;comment&quot;:[{&quot;id&quot;:&quot;27-3651840&quot;,&quot;author&quot;:&quot;udalov&quot;,&quot;authorFullName&quot;:&quot;Alexander Udalov&quot;,&quot;issueId&quot;:&quot;KT-28434&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Basically the underlying problem has been fixed in &lt;a href=\&quot;https://github.com/JetBrains/kotlin/commit/28e2fd63ca096a23240b4f3b7fa5d36573990085\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener noreferrer\&quot;&gt;https://github.com/JetBrains/kotlin/commit/28e2fd63ca096a23240b4f3b7fa5d36573990085&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;However, the victim code in &lt;code class=\&quot;inline-code\&quot;&gt;InterfaceDelegationLowering&lt;/code&gt; still needs refactoring, let me look into it.&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565706167319,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]}],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-33264&quot;,&quot;entityId&quot;:&quot;25-2461080&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;IDEA 2019.2 - High CPU usage&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;shiveen pandita&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1565569195619&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;33264&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;IDE gets stuck on high cpu usage while working with files with &amp;gt;~ 1000 lines of Kotlin code&lt;/p&gt;\n&lt;/div&gt;&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Nicolay Mitropolsky&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;shiveenpandita.1&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;10&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;Nicolay.Mitropolsky&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565705139458&quot;},{&quot;name&quot;:&quot;links&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;KT-29856&quot;,&quot;type&quot;:&quot;Relates&quot;,&quot;role&quot;:&quot;relates to&quot;}]},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Performance Problem&quot;],&quot;valueId&quot;:[&quot;Performance Problem&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#ffc8ea&quot;,&quot;fg&quot;:&quot;#444&quot;}},{&quot;name&quot;:&quot;Priority&quot;,&quot;value&quot;:[&quot;Normal&quot;],&quot;valueId&quot;:[&quot;Normal&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e6f6cf&quot;,&quot;fg&quot;:&quot;#4da400&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Open&quot;],&quot;valueId&quot;:[&quot;Open&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#7dbd36&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;IDE. UAST&quot;],&quot;valueId&quot;:[&quot;IDE. UAST&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Yes&quot;],&quot;valueId&quot;:[&quot;Yes&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;Nicolay.Mitropolsky&quot;,&quot;fullName&quot;:&quot;Nicolay Mitropolsky&quot;}]}],&quot;comment&quot;:[{&quot;id&quot;:&quot;27-3648633&quot;,&quot;author&quot;:&quot;shiveenpandita.1&quot;,&quot;authorFullName&quot;:&quot;shiveen pandita&quot;,&quot;issueId&quot;:&quot;KT-33264&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Ever since moving to 2019.2 INTELIIJ gets randomly stuck in high cpu usage when working on files with more than 100 lines of code and a couple of annotation (spring mvc). I&amp;#39;ve uploaded the snapshot under the name: &lt;strong&gt;IU-192.5728.98_shavz_12.08.2019_10.15.37.zip&lt;/strong&gt;&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565569338077,&quot;updated&quot;:1565569355534,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3648644&quot;,&quot;author&quot;:&quot;serge&quot;,&quot;authorFullName&quot;:&quot;Serge Baranov&quot;,&quot;issueId&quot;:&quot;KT-33264&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Please reset the .vmoptions to the default, change only -Xmx.&lt;/p&gt;\n&lt;p&gt;There should be also &lt;code class=\&quot;inline-code\&quot;&gt;-XX:CICompilerCount=2&lt;/code&gt; option by default.&lt;/p&gt;\n&lt;p&gt;What is displayed in Help | Activity Monitor?&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565570699660,&quot;updated&quot;:1565570736588,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3648648&quot;,&quot;author&quot;:&quot;shiveenpandita.1&quot;,&quot;authorFullName&quot;:&quot;shiveen pandita&quot;,&quot;issueId&quot;:&quot;KT-33264&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Activity Monitor:&lt;/p&gt;\n&lt;p&gt;%CPU  Subsystem&lt;/p&gt;\n&lt;p&gt;145.1  &amp;lt;unidentified: JobScheduler FJ pool&amp;gt;&lt;br/&gt;53.4  &amp;lt;JIT compiler&amp;gt;&lt;br/&gt;42.0  progress (in com.intellij.openapi)&lt;br/&gt;18.6  Plugin Kotlin: uast.kotlin (in org.jetbrains)&lt;br/&gt;16.9  jdk.internal.misc&lt;br/&gt;15.0  psi.impl.source (in com.intellij)&lt;br/&gt;14.1  psi (in com.intellij.extapi)&lt;br/&gt;13.7  &amp;lt;unidentified: UI thread&amp;gt;&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565571204636,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3648649&quot;,&quot;author&quot;:&quot;shiveenpandita.1&quot;,&quot;authorFullName&quot;:&quot;shiveen pandita&quot;,&quot;issueId&quot;:&quot;KT-33264&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;how do I reset my vm options to default?&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565571335819,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3648654&quot;,&quot;author&quot;:&quot;shiveenpandita.1&quot;,&quot;authorFullName&quot;:&quot;shiveen pandita&quot;,&quot;issueId&quot;:&quot;KT-33264&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Also, apologies for reporting issue twice, I wasn&amp;#39;t sure which was the right place.&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565573200611,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3648656&quot;,&quot;author&quot;:&quot;shiveenpandita.1&quot;,&quot;authorFullName&quot;:&quot;shiveen pandita&quot;,&quot;issueId&quot;:&quot;KT-33264&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Okay, I&amp;#39;ve just downgraded to 2019.1.4 using toolbox and this is my default config now:&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;&lt;code&gt;-Xms2g\n-Xmx4g\n-XX:ReservedCodeCacheSize=240m\n-XX:+UseCompressedOops\n-Dfile.encoding=UTF-8\n-XX:+UseConcMarkSweepGC\n-XX:SoftRefLRUPolicyMSPerMB=50\n-ea\n-XX:CICompilerCount=2\n-Dsun.io.useCanonCaches=false\n-Djava.net.preferIPv4Stack=true\n-Djdk.http.auth.tunneling.disabledSchemes=&amp;quot;&amp;quot;\n-XX:+HeapDumpOnOutOfMemoryError\n-XX:-OmitStackTraceInFastThrow\n-Xverify:none\n\n-XX:ErrorFile=$USER_HOME/java_error_in_idea_%p.log\n-XX:HeapDumpPath=$USER_HOME/java_error_in_idea.hprof\n-Dide.no.platform.update=true\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565573413578,&quot;updated&quot;:1565573445455,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3648657&quot;,&quot;author&quot;:&quot;shiveenpandita.1&quot;,&quot;authorFullName&quot;:&quot;shiveen pandita&quot;,&quot;issueId&quot;:&quot;KT-33264&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;I&amp;#39;ll monitor to see if the issue happens again&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565573442576,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3648806&quot;,&quot;author&quot;:&quot;shiveenpandita.1&quot;,&quot;authorFullName&quot;:&quot;shiveen pandita&quot;,&quot;issueId&quot;:&quot;KT-33264&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;No change and still seeing high cpu usage&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;&lt;code&gt; %CPU  Subsystem\n\n102.7  &amp;lt;JIT compiler&amp;gt;\n145.0  &amp;lt;unidentified: JobScheduler FJ pool&amp;gt;\n 25.4  Plugin Kotlin: kotlin.psi (in org.jetbrains)\n 21.6  Plugin Kotlin: uast.kotlin (in org.jetbrains)\n 21.5  progress (in com.intellij.openapi)\n 15.8  psi (in com.intellij.extapi)\n 14.1  reference (in com.intellij)\n 12.5  progress.impl (in com.intellij.openapi)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565595686775,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3650313&quot;,&quot;author&quot;:&quot;Nicolay.Mitropolsky&quot;,&quot;authorFullName&quot;:&quot;Nicolay Mitropolsky&quot;,&quot;issueId&quot;:&quot;KT-33264&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;blockquote&gt;\n&lt;p&gt;No change and still seeing high cpu usage&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;b data-user-id=\&quot;11-546755\&quot; title=\&quot;shiveen pandita\&quot;&gt;@shiveen pandita&lt;/b&gt; is it in downgraded version or in idea 2019.2 ?&lt;/p&gt;\n&lt;p&gt;Does it happen when Kotlin files are open or in other cases too?&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565635469810,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3650543&quot;,&quot;author&quot;:&quot;shiveenpandita.1&quot;,&quot;authorFullName&quot;:&quot;shiveen pandita&quot;,&quot;issueId&quot;:&quot;KT-33264&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Hi Nicolay,&lt;/p&gt;\n&lt;p&gt;In 2019.2 - I downgraded but that didn&amp;#39;t help and then upgraded back with the default settings and it was still not working.&lt;/p&gt;\n&lt;p&gt;It usually happens when a large kotlin file (&amp;gt;1000 loc) is open and I have empirically noticed it happens when I&amp;#39;m editing and adding new changes to the file.&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565652957512,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]}],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-191&quot;,&quot;entityId&quot;:&quot;25-335933&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;Implement unsigned integers&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Andrey Breslav&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1311135963963&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;191&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;The proposal for unsigned integer types: &lt;a href=\&quot;https://github.com/Kotlin/KEEP/issues/135\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener noreferrer\&quot;&gt;KEEP-135&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;People want them for bit manipulation when reading files, and for some &amp;quot;signal processing stuff&amp;quot;.&lt;br/&gt;The VM would optimize most of the checks away&lt;/p&gt;\n&lt;/div&gt;&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Andrey Breslav&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;Andrey.Breslav&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;2&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;Andrey.Breslav&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;5&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565704794452&quot;},{&quot;name&quot;:&quot;links&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;KT-10477&quot;,&quot;type&quot;:&quot;Relates&quot;,&quot;role&quot;:&quot;relates to&quot;},{&quot;value&quot;:&quot;KT-13541&quot;,&quot;type&quot;:&quot;Relates&quot;,&quot;role&quot;:&quot;relates to&quot;},{&quot;value&quot;:&quot;KT-25355&quot;,&quot;type&quot;:&quot;Relates&quot;,&quot;role&quot;:&quot;relates to&quot;},{&quot;value&quot;:&quot;KT-26606&quot;,&quot;type&quot;:&quot;Relates&quot;,&quot;role&quot;:&quot;relates to&quot;},{&quot;value&quot;:&quot;KT-25961&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-25971&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-25974&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-25979&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-30402&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-26161&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;subtask of&quot;}]},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Feature&quot;],&quot;valueId&quot;:[&quot;Feature&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#7dbd36&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Priority&quot;,&quot;value&quot;:[&quot;Normal&quot;],&quot;valueId&quot;:[&quot;Normal&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e6f6cf&quot;,&quot;fg&quot;:&quot;#4da400&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Open&quot;],&quot;valueId&quot;:[&quot;Open&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#7dbd36&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;Language design&quot;],&quot;valueId&quot;:[&quot;Language design&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Yes&quot;],&quot;valueId&quot;:[&quot;Yes&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;zarechenskiy&quot;,&quot;fullName&quot;:&quot;Mikhail Zarechenskiy&quot;}]}],&quot;comment&quot;:[{&quot;id&quot;:&quot;27-718828&quot;,&quot;author&quot;:&quot;amal&quot;,&quot;authorFullName&quot;:&quot;Amal Samally&quot;,&quot;issueId&quot;:&quot;KT-191&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;Even Java is developing in this direction:&lt;br/&gt;&lt;a href=\&quot;https://blogs.oracle.com/darcy/entry/unsigned_api\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener noreferrer\&quot;&gt;https://blogs.oracle.com/darcy/entry/unsigned_api&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;So, I think, it&amp;#39;s really demanded.&lt;br/&gt;&lt;br/&gt;It could be really great if realized as virtual type, without wrapper (at bytecode level), like (Immutable)Set. So only operations would be mapped to helper methods.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1397428396520,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2120968&quot;,&quot;author&quot;:&quot;arcnor&quot;,&quot;authorFullName&quot;:&quot;Edu Garcia&quot;,&quot;issueId&quot;:&quot;KT-191&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;I see this issue has been closed. However, I cannot find a similar one in this tracker. &lt;b data-user-id=\&quot;11-14623\&quot;&gt;Andrey Breslav&lt;/b&gt; is there any other ticket (or RFC) that I can watch to know the status of this feature request?&lt;br/&gt;&lt;br/&gt;Thanks in advance!&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1492994125522,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]}],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-29856&quot;,&quot;entityId&quot;:&quot;25-2247943&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;Uast: `KotlinUFunctionCallExpression.methodName` forces the full resolve making the call unexpectedly expensive&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Nicolay Mitropolsky&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1549979778321&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;29856&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;maybe we could somehow use a more cheap resolve to get the method name.&lt;br/&gt;&lt;img src=\&quot;https://youtrack.jetbrains.com/_persistent/image.png?file=74-620198&amp;amp;c=false&amp;amp;updated=1549979726778\&quot; alt=\&quot;\&quot; /&gt;&lt;br/&gt;The snapshot got from running the &amp;quot;Unregistered named Color&amp;quot; inspection on the whole IDEA sources&lt;/p&gt;\n&lt;/div&gt;&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Nicolay Mitropolsky&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;Nicolay.Mitropolsky&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;Nicolay.Mitropolsky&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565704077337&quot;},{&quot;name&quot;:&quot;resolved&quot;,&quot;value&quot;:&quot;1563434652800&quot;},{&quot;name&quot;:&quot;links&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;KT-33264&quot;,&quot;type&quot;:&quot;Relates&quot;,&quot;role&quot;:&quot;relates to&quot;}]},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Performance Problem&quot;],&quot;valueId&quot;:[&quot;Performance Problem&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#ffc8ea&quot;,&quot;fg&quot;:&quot;#444&quot;}},{&quot;name&quot;:&quot;Priority&quot;,&quot;value&quot;:[&quot;Normal&quot;],&quot;valueId&quot;:[&quot;Normal&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e6f6cf&quot;,&quot;fg&quot;:&quot;#4da400&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Shelved&quot;],&quot;valueId&quot;:[&quot;Shelved&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#7dbd36&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;IDE. UAST&quot;],&quot;valueId&quot;:[&quot;IDE. UAST&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Yes&quot;],&quot;valueId&quot;:[&quot;Yes&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;Nicolay.Mitropolsky&quot;,&quot;fullName&quot;:&quot;Nicolay Mitropolsky&quot;}]},{&quot;name&quot;:&quot;attachments&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;image.png&quot;,&quot;id&quot;:&quot;74-620198&quot;,&quot;url&quot;:&quot;https://youtrack.jetbrains.com/_persistent/image.png?file=74-620198&amp;c=true&quot;}]}],&quot;comment&quot;:[],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-33306&quot;,&quot;entityId&quot;:&quot;25-2463025&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;Native compiler with kotlinx.serialization plugin enabled produces IR validation warnings&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Leonid Startsev&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1565700517001&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;33306&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;While compiling a project with &lt;code class=\&quot;inline-code\&quot;&gt;@Serializable&lt;/code&gt; classes, compiler prints [IR VALIDATION] warnings. They are harmless, the compilation is successful and code runs normally, but they bloat output. This happens due to kotlinx.serialization plugin transformations. The plugin should be improved to generate IR code that bypasses validation without warnings.&lt;/div&gt;\n&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Alexander Chernikov&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;Leonid.Startsev&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;sashache&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565703994246&quot;},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Problem&quot;],&quot;valueId&quot;:[&quot;Problem&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#fce5f1&quot;,&quot;fg&quot;:&quot;#dc5766&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Investigating&quot;],&quot;valueId&quot;:[&quot;Investigating&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#900052&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Affected versions&quot;,&quot;value&quot;:[&quot;1.3.50&quot;],&quot;valueId&quot;:[&quot;1.3.50&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;Native&quot;,&quot;Tools. Compiler Plugins&quot;],&quot;valueId&quot;:[&quot;Native&quot;,&quot;Tools. Compiler Plugins&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Target versions&quot;,&quot;value&quot;:[&quot;1.3.60&quot;],&quot;valueId&quot;:[&quot;1.3.60&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Yes&quot;],&quot;valueId&quot;:[&quot;Yes&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;Leonid.Startsev&quot;,&quot;fullName&quot;:&quot;Leonid Startsev&quot;}]}],&quot;comment&quot;:[],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-33308&quot;,&quot;entityId&quot;:&quot;25-2463201&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;Imported script are not supported for scripts outside of a source root&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Ilya Chernikov&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1565702758066&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;33308&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;E.g. when using a script definition with dependencies resolving, like kotlin-main-kts, and script is outside of the source roots, attempt to use &lt;code class=\&quot;inline-code\&quot;&gt;@file:Import&lt;/code&gt; functionality to import other scripts leads to the exception &lt;code class=\&quot;inline-code\&quot;&gt;org.jetbrains.kotlin.resolve.lazy.NoDescriptorForDeclarationException: Descriptor wasn&amp;#39;t found for declaration SCRIPT&lt;/code&gt;, probably because the imported script is not properly included into current script&amp;#39;s module info.&lt;/div&gt;\n&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Alexander Chernikov&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;ilya.chernikov&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;sashache&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565703911553&quot;},{&quot;name&quot;:&quot;links&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;KT-33307&quot;,&quot;type&quot;:&quot;Relates&quot;,&quot;role&quot;:&quot;relates to&quot;}]},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Bug&quot;],&quot;valueId&quot;:[&quot;Bug&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e30000&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Submitted&quot;],&quot;valueId&quot;:[&quot;Submitted&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Affected versions&quot;,&quot;value&quot;:[&quot;1.3.50&quot;],&quot;valueId&quot;:[&quot;1.3.50&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;IDE. Script&quot;],&quot;valueId&quot;:[&quot;IDE. Script&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Yes&quot;],&quot;valueId&quot;:[&quot;Yes&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;nastelaz&quot;,&quot;fullName&quot;:&quot;Natalia Selezneva&quot;}]}],&quot;comment&quot;:[],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-33309&quot;,&quot;entityId&quot;:&quot;25-2463247&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;Not nullable type argument from nullable&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Day V&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1565703491036&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;33309&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;I propose to make it possible to make nullable types of arguments not nullable when using or inheriting. For example, so that in the example below, Baz2 always inherits Foo, even if the argument S is nullable:&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;&lt;code&gt;interface Foo&amp;lt;S: Any&amp;gt;\ninterface Bar&amp;lt;S: Any?&amp;gt;\n\ninterface Baz1&amp;lt;S: Any&amp;gt;: \n        Foo&amp;lt;S&amp;gt;, // ok, but that’s not what I need, because it's has interface Bar&amp;lt;S?&amp;gt; with always nullable\n        Bar&amp;lt;S?&amp;gt; \n\ninterface Baz2&amp;lt;S: Any?&amp;gt;:\n        Foo&amp;lt;S&amp;gt;, // Type argument is not within its bounds: should be subtype of A. There is no any syntax like Foo&amp;lt;S!&amp;gt;.\n        Bar&amp;lt;S&amp;gt; \n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Day V&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;Day.V&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;Day.V&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565703503601&quot;},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Feature&quot;],&quot;valueId&quot;:[&quot;Feature&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#7dbd36&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Submitted&quot;],&quot;valueId&quot;:[&quot;Submitted&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null}],&quot;comment&quot;:[],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-33229&quot;,&quot;entityId&quot;:&quot;25-2459464&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;Accessing `isTrue` as property throws `Cannot infer type parameter SELF in val &lt;SELF : AbstractBooleanAssert&lt;SELF!&gt;!&gt; AbstractBooleanAssert&lt;SELF&gt;.isTrue: SELF!`&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Sergio Pro&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1565327214897&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;33229&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;&lt;strong&gt;What steps will reproduce the issue?&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;This piece of code works fine:&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;&lt;code&gt;val longs = List(100) { random.nextLong(6868L) }\nassertThat(longs.all { it &amp;lt; 6869L }).isTrue()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;However when accessing &lt;code class=\&quot;inline-code\&quot;&gt;isTrue&lt;/code&gt; as property:&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;&lt;code&gt;val longs = List(100) { random.nextLong(6868L) }\nassertThat(longs.all { it &amp;lt; 6869L }).isTrue\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;An exception is thrown at runtime: &lt;code class=\&quot;inline-code\&quot;&gt;Cannot infer type parameter SELF in val &amp;lt;SELF : AbstractBooleanAssert&amp;lt;SELF!&amp;gt;!&amp;gt; AbstractBooleanAssert&amp;lt;SELF&amp;gt;.isTrue: SELF!&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;&lt;code class=\&quot;inline-code\&quot;&gt;isTrue&lt;/code&gt; is part of an &lt;code class=\&quot;inline-code\&quot;&gt;assertJ&lt;/code&gt; library, so I&amp;#39;m not quite sure if this is an issue with the assertion library or kotlin, however it seems to me that this is kotlin issue as bytecode for both looks identical&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;What is the expected result?&lt;/strong&gt;&lt;br/&gt;Should execute without exceptions&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;What happens instead?&lt;/strong&gt;&lt;br/&gt;An exception is thrown at runtime: &lt;code class=\&quot;inline-code\&quot;&gt;Cannot infer type parameter SELF in val &amp;lt;SELF : AbstractBooleanAssert&amp;lt;SELF!&amp;gt;!&amp;gt; AbstractBooleanAssert&amp;lt;SELF&amp;gt;.isTrue: SELF!&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Sergei Dubrov&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;sergio_igwt&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;2&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;Sergei.Dubrov&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565703293516&quot;},{&quot;name&quot;:&quot;resolved&quot;,&quot;value&quot;:&quot;1565640114145&quot;},{&quot;name&quot;:&quot;links&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;KT-32101&quot;,&quot;type&quot;:&quot;Duplicate&quot;,&quot;role&quot;:&quot;duplicates&quot;}]},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Bug&quot;],&quot;valueId&quot;:[&quot;Bug&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e30000&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Duplicate&quot;],&quot;valueId&quot;:[&quot;Duplicate&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Affected versions&quot;,&quot;value&quot;:[&quot;1.3.41&quot;],&quot;valueId&quot;:[&quot;1.3.41&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;Frontend. Resolution and Inference&quot;],&quot;valueId&quot;:[&quot;Frontend. Resolution and Inference&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Reproduced&quot;],&quot;valueId&quot;:[&quot;Reproduced&quot;],&quot;color&quot;:null}],&quot;comment&quot;:[{&quot;id&quot;:&quot;27-3650229&quot;,&quot;author&quot;:&quot;vanyochek&quot;,&quot;authorFullName&quot;:&quot;Vanyochek&quot;,&quot;issueId&quot;:&quot;KT-33229&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;&lt;b data-user-id=\&quot;11-468945\&quot; title=\&quot;Sergio Pro\&quot;&gt;@Sergio Pro&lt;/b&gt; I think your report duplicates this report — &lt;a href=\&quot;https://youtrack.jetbrains.com/issue/KT-33012\&quot; title=\&quot;New inference allows property access syntax disallowed by old inference\&quot; data-issue-id=\&quot;25-2441730\&quot;&gt;KT-33012&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565630959659,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3650412&quot;,&quot;author&quot;:&quot;Sergei.Dubrov&quot;,&quot;authorFullName&quot;:&quot;Sergei Dubrov&quot;,&quot;issueId&quot;:&quot;KT-33229&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;The issue is duplicate of &lt;a href=\&quot;https://youtrack.jetbrains.com/issue/KT-32101\&quot; title=\&quot;NI: Cannot infer type parameter with property access to boolean function in test scope\&quot; data-issue-id=\&quot;25-2394311\&quot;&gt;KT-32101&lt;/a&gt;. Thank you for reporting. It helped to understand the difference between &lt;a href=\&quot;https://youtrack.jetbrains.com/issue/KT-32101\&quot; title=\&quot;NI: Cannot infer type parameter with property access to boolean function in test scope\&quot; data-issue-id=\&quot;25-2394311\&quot;&gt;KT-32101&lt;/a&gt; and &lt;a href=\&quot;https://youtrack.jetbrains.com/issue/KT-32093\&quot; title=\&quot;NI: IDE suggests to use property access syntax instead of getter method\&quot; data-issue-id=\&quot;25-2394040\&quot;&gt;KT-32093&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565640114158,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]}],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-33307&quot;,&quot;entityId&quot;:&quot;25-2463171&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;Script module info do not include dependencies if the script is in a source root&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Ilya Chernikov&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1565702087346&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;33307&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;E.g. when using a script definition with dependencies resolving, like &lt;code class=\&quot;inline-code\&quot;&gt;kotlin-main-kts&lt;/code&gt;, and script is in the source root of a module that references the definition, the symbols from dependencies are not resolved (see attachment). &lt;br/&gt;If the script is placed outside of the source root, the dependencies are resolved and displayed properly.&lt;/div&gt;\n&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Ilya Chernikov&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;ilya.chernikov&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;ilya.chernikov&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565702759854&quot;},{&quot;name&quot;:&quot;links&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;KT-33308&quot;,&quot;type&quot;:&quot;Relates&quot;,&quot;role&quot;:&quot;relates to&quot;}]},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Bug&quot;],&quot;valueId&quot;:[&quot;Bug&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e30000&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Submitted&quot;],&quot;valueId&quot;:[&quot;Submitted&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Affected versions&quot;,&quot;value&quot;:[&quot;1.3.50&quot;],&quot;valueId&quot;:[&quot;1.3.50&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;IDE. Script&quot;],&quot;valueId&quot;:[&quot;IDE. Script&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Yes&quot;],&quot;valueId&quot;:[&quot;Yes&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;nastelaz&quot;,&quot;fullName&quot;:&quot;Natalia Selezneva&quot;}]},{&quot;name&quot;:&quot;attachments&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;Image.png&quot;,&quot;id&quot;:&quot;74-706015&quot;,&quot;url&quot;:&quot;https://youtrack.jetbrains.com/_persistent/Image.png?file=74-706015&amp;c=true&quot;}]}],&quot;comment&quot;:[{&quot;id&quot;:&quot;27-3651686&quot;,&quot;author&quot;:&quot;ilya.chernikov&quot;,&quot;authorFullName&quot;:&quot;Ilya Chernikov&quot;,&quot;issueId&quot;:&quot;KT-33307&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;The reason is that when treated as a part of the module, the script receives the module info from this module, that doesn&amp;#39;t contain new dependencies.&lt;br/&gt;While when outside of the module, it receives a dedicated module info that knows about dependencies.&lt;br/&gt;Fixing it may also obsolete the necessity to add the script runtime to the modules with scripts.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565702429729,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]}],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-33270&quot;,&quot;entityId&quot;:&quot;25-2461269&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;Inspection for Android when using Dispatchers.Main without kotlinx-coroutines-android dependency&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Srijith Narayanan&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1565598619339&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;33270&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;An editor inspection for android when coroutine &lt;code class=\&quot;inline-code\&quot;&gt;Dispatchers.Main&lt;/code&gt; are used without &lt;code class=\&quot;inline-code\&quot;&gt;kotlinx-coroutines-android&lt;/code&gt; dependency.&lt;/p&gt;\n&lt;p&gt;I am using Coroutines in Android repo. Used &lt;code class=\&quot;inline-code\&quot;&gt;MainScope&lt;/code&gt; as the coroutine scope:&lt;/p&gt;\n&lt;p&gt;&lt;code class=\&quot;inline-code\&quot;&gt;private val scope = MainScope()&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;But app was crashing without displaying any logs. Had to use a coroutine exception handler to understand the crash.&lt;/p&gt;\n&lt;p&gt;&lt;code class=\&quot;inline-code\&quot;&gt;Uncaught java.lang.IllegalStateException: Module with the Main dispatcher is missing. Add dependency providing the Main dispatcher, e.g. 'kotlinx-coroutines-android'&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;Environment:&lt;br/&gt;Android Studio 3.4&lt;br/&gt;Gradle build tools version: 3.4.1&lt;br/&gt;Kotlin gradle plugin version: 1.3.41&lt;br/&gt;Kotlin coroutines version: 1.2.1&lt;/p&gt;\n&lt;/div&gt;&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Alexander Chernikov&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;srijith14m&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;sashache&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565702499414&quot;},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Feature&quot;],&quot;valueId&quot;:[&quot;Feature&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#7dbd36&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Submitted&quot;],&quot;valueId&quot;:[&quot;Submitted&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;IDE. Inspections and Intentions&quot;],&quot;valueId&quot;:[&quot;IDE. Inspections and Intentions&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Yes&quot;],&quot;valueId&quot;:[&quot;Yes&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;Dmitry.Gridin&quot;,&quot;fullName&quot;:&quot;Dmitry Gridin&quot;}]}],&quot;comment&quot;:[],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-33259&quot;,&quot;entityId&quot;:&quot;25-2460805&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;Placing label before listOf function causes crash on Kotlin website&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Francois Green&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1565470984817&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;33259&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;span class=\&quot;markdown-language-tag\&quot;&gt;kotlin&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint linenums\&quot;&gt;&lt;code class=\&quot;language-kotlin\&quot;&gt;fun foo() {\n    lit@ listOf(1, 2, 3, 4, 5).forEach {\n        if (it == 3) return@lit // local return to the caller of the lambda, i.e. the forEach loop\n        print(it)\n    }\n    print(&amp;quot; done with explicit label&amp;quot;)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;&lt;code&gt;Message:\nBack-end (JVM) Internal error: Parameter specified as non-null is null: method org.jetbrains.kotlin.codegen.state.KotlinTypeMapper.mapReturnType, parameter descriptor\nCause: Parameter specified as non-null is null: method org.jetbrains.kotlin.codegen.state.KotlinTypeMapper.mapReturnType, parameter descriptor\nFile being compiled at position: (3,9) in /File.kt\nThe root cause was thrown at: KotlinTypeMapper.kt:-1\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Alexander Chernikov&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;fwgreen&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;3&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;sashache&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565702316100&quot;},{&quot;name&quot;:&quot;resolved&quot;,&quot;value&quot;:&quot;1565702316100&quot;},{&quot;name&quot;:&quot;links&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;KT-22274&quot;,&quot;type&quot;:&quot;Duplicate&quot;,&quot;role&quot;:&quot;duplicates&quot;}]},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Bug&quot;],&quot;valueId&quot;:[&quot;Bug&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e30000&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Duplicate&quot;],&quot;valueId&quot;:[&quot;Duplicate&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;Frontend. Resolution and Inference&quot;],&quot;valueId&quot;:[&quot;Frontend. Resolution and Inference&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Yes&quot;],&quot;valueId&quot;:[&quot;Yes&quot;],&quot;color&quot;:null}],&quot;comment&quot;:[{&quot;id&quot;:&quot;27-3648398&quot;,&quot;author&quot;:&quot;vanyochek&quot;,&quot;authorFullName&quot;:&quot;Vanyochek&quot;,&quot;issueId&quot;:&quot;KT-33259&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;&lt;b data-user-id=\&quot;11-546554\&quot; title=\&quot;Francois Green\&quot;&gt;@Francois Green&lt;/b&gt; There is the answer to why this exception occurred — &lt;a href=\&quot;https://youtrack.jetbrains.com/issue/KT-29181#focus=streamItem-27-3250405.0-0\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener noreferrer\&quot;&gt;https://youtrack.jetbrains.com/issue/KT-29181#focus=streamItem-27-3250405.0-0&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565503529267,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3648598&quot;,&quot;author&quot;:&quot;fwgreen&quot;,&quot;authorFullName&quot;:&quot;Francois Green&quot;,&quot;issueId&quot;:&quot;KT-33259&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;&lt;b data-user-id=\&quot;11-526428\&quot; title=\&quot;Vanyochek\&quot;&gt;@Vanyochek&lt;/b&gt; This makes perfect sense!  I only reported the issue because the opening lines of the error message told me to:&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;&lt;code&gt;Hey! It seems you just found a bug! \nPlease click here to submit it to the issue tracker and one day we fix it, hopefully \n✅ Don't forget to attach code to the issue \n...\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565557840847,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3651673&quot;,&quot;author&quot;:&quot;sashache&quot;,&quot;authorFullName&quot;:&quot;Alexander Chernikov&quot;,&quot;issueId&quot;:&quot;KT-33259&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;This is covered with &lt;a href=\&quot;https://youtrack.jetbrains.com/issue/KT-22274\&quot; class=\&quot;issue-resolved\&quot; target=\&quot;_self\&quot; data-issue-id=\&quot;25-1838983\&quot; title=\&quot;Restrict statement labels applicability\&quot;&gt;KT-22274&lt;/a&gt; (see there). In 1.3 compiler shows the warning for suggested code, and in 1.4 it will be error, so the control flow will not reach the back end error.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565702287746,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]}],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-22274&quot;,&quot;entityId&quot;:&quot;25-1838983&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;Restrict statement labels applicability&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Dmitry Petrov&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1516003638098&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;22274&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;h1&gt;Synopsis&lt;/h1&gt;\n&lt;p&gt;Type of change:&lt;/p&gt;\n&lt;ul class=\&quot;wiki-list0\&quot;&gt;\n&lt;li&gt;New diagnostics: errors&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Motivation&lt;/p&gt;\n&lt;ul class=\&quot;wiki-list0\&quot;&gt;\n&lt;li&gt;Problematic/meaningless usage patterns need to be discouraged/blocked (e.g. counterintuitive behaviors)&lt;/li&gt;\n&lt;li&gt;Compiler/Tooling fails with exception(s)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Impact:&lt;/p&gt;\n&lt;ul class=\&quot;wiki-list0\&quot;&gt;\n&lt;li&gt;Some code that used to compile won’t compile any more&lt;/li&gt;\n&lt;li&gt;Such code never behaved the way the user might intend it to&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Migration:&lt;/p&gt;\n&lt;ul class=\&quot;wiki-list0\&quot;&gt;\n&lt;li&gt;All code locations affected by this change can be accurately detected statically&lt;/li&gt;\n&lt;li&gt;Migration can be automated&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h1&gt;Description&lt;/h1&gt;\n&lt;p&gt;Since Kotlin 1.0, one can mark any statement with a label:&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;kotlin&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint linenums\&quot;&gt;&lt;code class=\&quot;language-kotlin\&quot;&gt;fun foo() {\n  L1@ val x = L2@bar()\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;However, these labels can be referenced only in a limited number of ways:&lt;/p&gt;\n&lt;ul class=\&quot;wiki-list0\&quot;&gt;\n&lt;li&gt;break / continue from a loop;&lt;/li&gt;\n&lt;li&gt;non-local return from an inline lambda or inline anonymous function.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Using statement labels incorrectly leads to confusion and/or various kinds of internal errors in the compiler.&lt;br/&gt;This proposal would clarify the statement label semantics and restrict statement labels to meaningful cases only.&lt;/p&gt;\n&lt;h1&gt;Incorrect Behavior&lt;/h1&gt;\n&lt;p&gt;See the following issues:&lt;/p&gt;\n&lt;ul class=\&quot;wiki-list0\&quot;&gt;\n&lt;li&gt;&lt;a href=\&quot;https://youtrack.jetbrains.com/issue/KT-22197\&quot; title=\&quot;Error for qualified return from anonymous function\&quot; data-issue-id=\&quot;25-1834973\&quot;&gt;KT-22197&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\&quot;https://youtrack.jetbrains.com/issue/KT-22254\&quot; title=\&quot;Two errors for non-local qualified return for inline lambdas. \&quot; data-issue-id=\&quot;25-1837804\&quot;&gt;KT-22254&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\&quot;https://youtrack.jetbrains.com/issue/KT-22270\&quot; title=\&quot;CompilationException: Back-end (JVM) Internal error: &amp;quot;Couldn't inline method call&amp;quot; at InlineCodegen.performInline() for labeled function call\&quot; data-issue-id=\&quot;25-1838666\&quot;&gt;KT-22270&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\&quot;https://youtrack.jetbrains.com/issue/KT-22338\&quot; title=\&quot;Return from 'if' by label actually returns from the method\&quot; data-issue-id=\&quot;25-1841650\&quot;&gt;KT-22338&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Another example:&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;kotlin&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint linenums\&quot;&gt;&lt;code class=\&quot;language-kotlin\&quot;&gt;class C {\n    fun foo() { println(&amp;quot;C.foo&amp;quot;) }\n    \n    inner class D {\n        fun foo() { println(&amp;quot;D.foo&amp;quot;) }\n        \n        fun bar() { C@this.foo() }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Here in &lt;code class=\&quot;inline-code\&quot;&gt;D.bar&lt;/code&gt; we have a labeled expression &lt;code class=\&quot;inline-code\&quot;&gt;C@this&lt;/code&gt;, which is equivalent to just &lt;code class=\&quot;inline-code\&quot;&gt;this&lt;/code&gt;, and, as a result, &lt;code class=\&quot;inline-code\&quot;&gt;D.this&lt;/code&gt; would be printed.&lt;br/&gt;What the user probably had in mind is &lt;code class=\&quot;inline-code\&quot;&gt;this@C&lt;/code&gt;.&lt;/p&gt;\n&lt;h1&gt;Proposed Changes&lt;/h1&gt;\n&lt;p&gt;Labels are allowed only on loop statements (&amp;#39;for&amp;#39;, &amp;#39;while&amp;#39;, &amp;#39;do-while&amp;#39;), inline lambdas, and inline anonymous functions.&lt;br/&gt;Any other labeled statement is an error.&lt;/p&gt;\n&lt;h1&gt;Impact&lt;/h1&gt;\n&lt;p&gt;Labelled statements are used quite rarely (mostly for break/continue from nested loops and preemptive return from lambdas passed to high-order functions). There&amp;#39;s no other way to reference a statement label in code except for in &amp;#39;break&amp;#39;/&amp;#39;continue&amp;#39; or &amp;#39;return&amp;#39; statement.&lt;/p&gt;\n&lt;h1&gt;Deprecation Policy&lt;/h1&gt;\n&lt;p&gt;This falls under &amp;quot;incorrect code compiled due to a bug and could behave reasonably&amp;quot; (if the label was not referenced in the code).&lt;br/&gt;However, such incorrectly placed label makes no sense, and it might be reasonable to simply prohibit them in the next version.&lt;/p&gt;\n&lt;h1&gt;Target Version&lt;/h1&gt;\n&lt;ul class=\&quot;wiki-list0\&quot;&gt;\n&lt;li&gt;1.3 - warnings + quick-fix to remove pointless labels&lt;/li&gt;\n&lt;li&gt;1.4 - errors&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Alexander Chernikov&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;Dmitry.Petrov.1&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;9&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;sashache&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;6&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565702315918&quot;},{&quot;name&quot;:&quot;resolved&quot;,&quot;value&quot;:&quot;1532509716957&quot;},{&quot;name&quot;:&quot;links&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;KT-22681&quot;,&quot;type&quot;:&quot;Relates&quot;,&quot;role&quot;:&quot;relates to&quot;},{&quot;value&quot;:&quot;KT-26431&quot;,&quot;type&quot;:&quot;Relates&quot;,&quot;role&quot;:&quot;relates to&quot;},{&quot;value&quot;:&quot;KT-22239&quot;,&quot;type&quot;:&quot;Duplicate&quot;,&quot;role&quot;:&quot;is duplicated by&quot;},{&quot;value&quot;:&quot;KT-25863&quot;,&quot;type&quot;:&quot;Duplicate&quot;,&quot;role&quot;:&quot;is duplicated by&quot;},{&quot;value&quot;:&quot;KT-25865&quot;,&quot;type&quot;:&quot;Duplicate&quot;,&quot;role&quot;:&quot;is duplicated by&quot;},{&quot;value&quot;:&quot;KT-33259&quot;,&quot;type&quot;:&quot;Duplicate&quot;,&quot;role&quot;:&quot;is duplicated by&quot;},{&quot;value&quot;:&quot;KT-20535&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-21509&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-22197&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-22254&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-22270&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-22338&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-24055&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-24157&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-25346&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-25863&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-26417&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-27012&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-27553&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-28500&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-28956&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-29181&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-30338&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-31996&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;parent for&quot;},{&quot;value&quot;:&quot;KT-10725&quot;,&quot;type&quot;:&quot;Subtask&quot;,&quot;role&quot;:&quot;subtask of&quot;}]},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Bug&quot;],&quot;valueId&quot;:[&quot;Bug&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e30000&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Priority&quot;,&quot;value&quot;:[&quot;Normal&quot;],&quot;valueId&quot;:[&quot;Normal&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e6f6cf&quot;,&quot;fg&quot;:&quot;#4da400&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Fixed&quot;],&quot;valueId&quot;:[&quot;Fixed&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#409600&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;Language design&quot;,&quot;Frontend. Resolution and Inference&quot;],&quot;valueId&quot;:[&quot;Language design&quot;,&quot;Frontend. Resolution and Inference&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Target versions&quot;,&quot;value&quot;:[&quot;1.3-M2&quot;],&quot;valueId&quot;:[&quot;1.3-M2&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Fix in builds&quot;,&quot;value&quot;:[&quot;1.2.70-dev-694&quot;,&quot;1.3-M2-eap-3&quot;],&quot;valueId&quot;:[&quot;1.2.70-dev-694&quot;,&quot;1.3-M2-eap-3&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Yes&quot;],&quot;valueId&quot;:[&quot;Yes&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;Dmitry.Petrov.1&quot;,&quot;fullName&quot;:&quot;Dmitry Petrov&quot;}]}],&quot;comment&quot;:[{&quot;id&quot;:&quot;27-2679918&quot;,&quot;author&quot;:&quot;Dmitry.Petrov.1&quot;,&quot;authorFullName&quot;:&quot;Dmitry Petrov&quot;,&quot;issueId&quot;:&quot;KT-22274&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;NB references to anonymous objects via lables on object literal expression are not supported:&lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;val x1 = X1@ object {&lt;br/&gt;    val x2 = X2@ object {&lt;br/&gt;        val xx = this@X1 // Unresolved reference: @X1&lt;br/&gt;    }&lt;br/&gt;}&lt;/pre&gt;&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1516791302303,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2708619&quot;,&quot;author&quot;:&quot;Andrey.Breslav&quot;,&quot;authorFullName&quot;:&quot;Andrey Breslav&quot;,&quot;issueId&quot;:&quot;KT-22274&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Approved by the &lt;a href=\&quot;https://docs.google.com/document/d/1ReH84Cw_ZhGOUM_MdMQbLjzB0edXIeaFuBUF5molsuI/preview#heading=h.5d7lwag9ga3j\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener noreferrer\&quot;&gt;Language Committee&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1518686422176,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2721398&quot;,&quot;author&quot;:&quot;Dmitry.Petrov.1&quot;,&quot;authorFullName&quot;:&quot;Dmitry Petrov&quot;,&quot;issueId&quot;:&quot;KT-22274&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;&lt;b data-user-id=\&quot;11-14623\&quot;&gt;Andrey Breslav&lt;/b&gt; &lt;br/&gt;&lt;br/&gt;Slightly different proposal (discussed F2F with &lt;b data-user-id=\&quot;11-177959\&quot;&gt;Stanislav Erokhin&lt;/b&gt;):&lt;br/&gt;&lt;br/&gt;(1) Labels on statements that can&amp;#39;t be referenced via label (everything except lambdas and loops, possibly&lt;br/&gt;parenthesized and/or annotated) are a warning.&lt;br/&gt;&lt;br/&gt;(2) &lt;code class=\&quot;inline-code\&quot;&gt;return@L&lt;/code&gt; where &lt;code class=\&quot;inline-code\&quot;&gt;L&lt;/code&gt; refers to an incorrect statement (everything except lambdas, possibly parenthesized and/or annotated) are an error.&lt;br/&gt;&lt;br/&gt;Since currently compiler fails with an internal error or produces incorrect bytecode in case of (2), it seems ok to implement this proposal without a deprecation cycle.&lt;br/&gt;&lt;br/&gt;Should we run it through the design committee again?&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1519735900489,&quot;updated&quot;:1519736432057,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2721458&quot;,&quot;author&quot;:&quot;Andrey.Breslav&quot;,&quot;authorFullName&quot;:&quot;Andrey Breslav&quot;,&quot;issueId&quot;:&quot;KT-22274&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Is (2) the only thing that differs from the proposal? Do you imply that (1) goes through a deprecation cycle as planned?&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1519737686563,&quot;updated&quot;:1518686422149,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2722301&quot;,&quot;author&quot;:&quot;Dmitry.Petrov.1&quot;,&quot;authorFullName&quot;:&quot;Dmitry Petrov&quot;,&quot;issueId&quot;:&quot;KT-22274&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;(1) doesn&amp;#39;t seem to require deprecation cycle, it&amp;#39;a warning, not an error. Code that was valid remains valid, except for &amp;quot;warnings are errors&amp;quot; compilation mode.&lt;br/&gt;&lt;br/&gt;(2) is different from the original proposal.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1519799451610,&quot;updated&quot;:1519799464090,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2728276&quot;,&quot;author&quot;:&quot;Andrey.Breslav&quot;,&quot;authorFullName&quot;:&quot;Andrey Breslav&quot;,&quot;issueId&quot;:&quot;KT-22274&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;(1) to me is part of a deprecation cycle: these warning are to be turned into errors in a future release&lt;/p&gt;\n&lt;p&gt;(2) Seems fine by me, we&amp;#39;ll check this with the Committee, but I think it&amp;#39;s safe to go ahead and implement it&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1520010738950,&quot;updated&quot;:1519737686446,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2772473&quot;,&quot;author&quot;:&quot;Stanislav.Erokhin&quot;,&quot;authorFullName&quot;:&quot;Stanislav Erokhin&quot;,&quot;issueId&quot;:&quot;KT-22274&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;&lt;a href=\&quot;https://docs.google.com/document/d/1ReH84Cw_ZhGOUM_MdMQbLjzB0edXIeaFuBUF5molsuI/edit#heading=h.xmrj33x4ns7i\&quot; target=\&quot;_blank\&quot; rel=\&quot;noopener noreferrer\&quot;&gt;Language Committee Decision&lt;/a&gt;: (2): Approved&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1521821313366,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2969355&quot;,&quot;author&quot;:&quot;Dmitry.Petrov.1&quot;,&quot;authorFullName&quot;:&quot;Dmitry Petrov&quot;,&quot;issueId&quot;:&quot;KT-22274&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;package test&lt;br/&gt;&lt;br/&gt;fun test(xs: List&amp;lt;String&amp;gt;) {&lt;br/&gt;    L@ for (x in xs) {&lt;br/&gt;        println(x)&lt;br/&gt;        if (x.length &amp;gt; 1) {&lt;br/&gt;            println(&amp;quot;zip!&amp;quot;)&lt;br/&gt;            return@L // NB: return&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;    println(&amp;quot;zap!&amp;quot;)&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;fun main(args: Array&amp;lt;String&amp;gt;) {&lt;br/&gt;    test(listOf(&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;cde&amp;quot;, &amp;quot;f&amp;quot;))&lt;br/&gt;}&lt;/pre&gt;&lt;br/&gt;This code compiles without an internal error, and prints&lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;a&lt;br/&gt;b&lt;br/&gt;cde&lt;br/&gt;zip!&lt;/pre&gt;So, here &lt;code class=\&quot;inline-code\&quot;&gt;return@L&lt;/code&gt; works as &lt;code class=\&quot;inline-code\&quot;&gt;return@test&lt;/code&gt; (although that was probably unintentional).&lt;br/&gt;&lt;br/&gt;Technically it looks like we still have to make this restriction a &amp;quot;language feature&amp;quot; of 1.3+.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1532421384937,&quot;updated&quot;:1532421431820,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3131271&quot;,&quot;author&quot;:&quot;Alexey.Belkov&quot;,&quot;authorFullName&quot;:&quot;Alexey Belkov&quot;,&quot;issueId&quot;:&quot;KT-22274&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;For searchability, this is the warning currently produced (1.3.0):&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;&lt;code&gt;fun foo() {\n    L1@ val x = 42 // Warning: Label is redundant, because it can not be referenced in either ''break'', ''continue'', or ''return'' expression\n\n    loop@ for (i in 1..100) {\n        return@loop // Warning: Target label does not denote a function\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1541003646389,&quot;updated&quot;:1545398929423,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]}],&quot;tag&quot;:[{&quot;value&quot;:&quot;for-language-committee&quot;,&quot;cssClass&quot;:&quot;c20&quot;},{&quot;value&quot;:&quot;language-committee-approved&quot;,&quot;cssClass&quot;:&quot;c20&quot;}]}, {&quot;id&quot;:&quot;KT-33304&quot;,&quot;entityId&quot;:&quot;25-2462944&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;Can't put a breakpoint to the first line in file&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Yan Zhulanow&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1565698530066&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;33304&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Example (Kotlin 1.3.60):&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;&lt;code&gt;fun foo() { block { println(&amp;quot;foo&amp;quot;) } }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Clicking on gutter doesn&amp;#39;t put a line/method/lambda breakpoint.&lt;/p&gt;\n&lt;/div&gt;&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Yan Zhulanow&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;yanex&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;yanex&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565701819126&quot;},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Bug&quot;],&quot;valueId&quot;:[&quot;Bug&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e30000&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Priority&quot;,&quot;value&quot;:[&quot;Major&quot;],&quot;valueId&quot;:[&quot;Major&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#ffee9c&quot;,&quot;fg&quot;:&quot;#b45f06&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;In Progress&quot;],&quot;valueId&quot;:[&quot;In Progress&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#ff7123&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Affected versions&quot;,&quot;value&quot;:[&quot;1.3.60&quot;],&quot;valueId&quot;:[&quot;1.3.60&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;IDE. Debugger&quot;],&quot;valueId&quot;:[&quot;IDE. Debugger&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Target versions&quot;,&quot;value&quot;:[&quot;1.3.60&quot;],&quot;valueId&quot;:[&quot;1.3.60&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;yanex&quot;,&quot;fullName&quot;:&quot;Yan Zhulanow&quot;}]}],&quot;comment&quot;:[],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-33303&quot;,&quot;entityId&quot;:&quot;25-2462907&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;\&quot;Smart step into\&quot; doesn't work for library declarations&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Yan Zhulanow&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1565697605710&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;33303&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Example (Kotlin 1.3.41/1.3.50/1.3.60, IDEA 2019.1):&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;&lt;code&gt;fun main(args: Array&amp;lt;String&amp;gt;) {\n    //Breakpoint!\n    StringReader(&amp;quot;OK&amp;quot;).readText()\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Running &amp;quot;Smart step into&amp;quot; action will not step into the &amp;#39;readText()&amp;#39; function declaration.&lt;/p&gt;\n&lt;/div&gt;&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Yan Zhulanow&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;yanex&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;yanex&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565701812564&quot;},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Bug&quot;],&quot;valueId&quot;:[&quot;Bug&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e30000&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Priority&quot;,&quot;value&quot;:[&quot;Major&quot;],&quot;valueId&quot;:[&quot;Major&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#ffee9c&quot;,&quot;fg&quot;:&quot;#b45f06&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;In Progress&quot;],&quot;valueId&quot;:[&quot;In Progress&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#ff7123&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Affected versions&quot;,&quot;value&quot;:[&quot;1.3.50&quot;],&quot;valueId&quot;:[&quot;1.3.50&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;IDE. Debugger&quot;],&quot;valueId&quot;:[&quot;IDE. Debugger&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Target versions&quot;,&quot;value&quot;:[&quot;1.3.60&quot;],&quot;valueId&quot;:[&quot;1.3.60&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;yanex&quot;,&quot;fullName&quot;:&quot;Yan Zhulanow&quot;}]}],&quot;comment&quot;:[],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-33293&quot;,&quot;entityId&quot;:&quot;25-2462408&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;\&quot;Convert Code From Java\&quot; on paste still converts code if \&quot;No\&quot; button is selected using keyboard&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Dmitry Petrov&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1565680666658&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;33293&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;ol class=\&quot;wiki-list0\&quot;&gt;\n&lt;li&gt;Copy some code from Java source file to the clipboard.&lt;/li&gt;\n&lt;li&gt;Go to a Kotlin source file, and paste it.&lt;/li&gt;\n&lt;li&gt;&amp;quot;Convert Code From Java&amp;quot; popup appears. Press &lt;code class=\&quot;inline-code\&quot;&gt;Tab&lt;/code&gt;, now it looks like:&lt;br/&gt;&lt;img src=\&quot;https://youtrack.jetbrains.com/_persistent/image.png?file=74-705726&amp;amp;c=false&amp;amp;updated=1565680524058\&quot; alt=\&quot;\&quot; /&gt;&lt;br/&gt;As you can see, &amp;quot;No&amp;quot; button is selected.&lt;/li&gt;\n&lt;li&gt;Now press &lt;code class=\&quot;inline-code\&quot;&gt;Enter&lt;/code&gt;. The code is converted, which isn&amp;#39;t something you expect when you select &amp;quot;No&amp;quot;.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;If you took your hands off the keyboard, take your mouse, and click &amp;quot;No&amp;quot; button, everything works as expected (code is NOT converted).&lt;/p&gt;\n&lt;p&gt;NB this makes editing mixed-language testData files in Kotlin project somewhat painful.&lt;/p&gt;\n&lt;/div&gt;&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Alexander Chernikov&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;Dmitry.Petrov.1&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;3&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;sashache&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565701687241&quot;},{&quot;name&quot;:&quot;resolved&quot;,&quot;value&quot;:&quot;1565699067117&quot;},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Bug&quot;],&quot;valueId&quot;:[&quot;Bug&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e30000&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;As Designed&quot;],&quot;valueId&quot;:[&quot;As Designed&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;IDE&quot;,&quot;Tools. J2K&quot;],&quot;valueId&quot;:[&quot;IDE&quot;,&quot;Tools. J2K&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;Yes&quot;],&quot;valueId&quot;:[&quot;Yes&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Reproduced&quot;],&quot;valueId&quot;:[&quot;Reproduced&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;Alefas&quot;,&quot;fullName&quot;:&quot;Alexander Podkhalyuzin&quot;}]},{&quot;name&quot;:&quot;Tester (Kotlin)&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;sashache&quot;,&quot;fullName&quot;:&quot;Alexander Chernikov&quot;}]},{&quot;name&quot;:&quot;attachments&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;image.png&quot;,&quot;id&quot;:&quot;74-705726&quot;,&quot;url&quot;:&quot;https://youtrack.jetbrains.com/_persistent/image.png?file=74-705726&amp;c=true&quot;}]}],&quot;comment&quot;:[{&quot;id&quot;:&quot;27-3651048&quot;,&quot;author&quot;:&quot;sashache&quot;,&quot;authorFullName&quot;:&quot;Alexander Chernikov&quot;,&quot;issueId&quot;:&quot;KT-33293&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;To my understanding this does not relate to J2K at all.&lt;br/&gt;In Swing &lt;strong&gt;Space&lt;/strong&gt; key presses selected button, while Enter key always presses default button.&lt;br/&gt;(Unless the dialog is customized. Do all other dialogs really work differently?)&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565689326970,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3651443&quot;,&quot;author&quot;:&quot;Dmitry.Petrov.1&quot;,&quot;authorFullName&quot;:&quot;Dmitry Petrov&quot;,&quot;issueId&quot;:&quot;KT-33293&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Ok, looks like not a bug, then.&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565699052251,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3651633&quot;,&quot;author&quot;:&quot;sashache&quot;,&quot;authorFullName&quot;:&quot;Alexander Chernikov&quot;,&quot;issueId&quot;:&quot;KT-33293&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;Just checked with New Project wizard and Move dialog: they do the same.&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565701674446,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]}],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-33034&quot;,&quot;entityId&quot;:&quot;25-2443677&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;Kotlin/Native compiler: TypeCastException during serialization of a backing field of a property fake-overriding several base ones&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Ilya Matveev&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1564475510908&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;33034&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;The K/N compiler crashes during compilation of the following code into a klib:&lt;/p&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;kotlin&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint linenums\&quot;&gt;&lt;code class=\&quot;language-kotlin\&quot;&gt;open class A {\n    open var size: Int = 56\n}\n\ninterface C&amp;lt;T&amp;gt; {\n    var size: T\n}\n\nopen class B : C&amp;lt;Int&amp;gt;, A()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The crash stacktrace:&lt;/p&gt;\n&lt;div class=\&quot;wiki-exception-wrapper\&quot;&gt;&lt;span class=\&quot;wiki-plus wiki-minus\&quot;&gt;&lt;/span&gt;&lt;pre class=\&quot;wiki-exception-title wiki-hidden\&quot;&gt;exception: kotlin.TypeCastException: null cannot be cast to non-null type org.jetbrains.kotlin.ir.declarations.IrField&lt;/pre&gt;&lt;span class=\&quot;wiki-hellip wiki-hidden\&quot;&gt;...&lt;/span&gt;&lt;pre class=\&quot;wiki-exception\&quot;&gt;&lt;p&gt;exception: kotlin.TypeCastException: null cannot be cast to non-null type org.jetbrains.kotlin.ir.declarations.IrField\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.serialization.DescriptorReferenceSerializer.serializeDescriptorReference(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/serialization/DescriptorReferenceSerializer.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/serialization/DescriptorReferenceSerializer.kt\&quot; lne=\&quot;91\&quot; data-line-number=\&quot;91\&quot;&gt;SerializeDescriptorReference.kt:91&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.serialization.IrModuleSerializer.serializeIrSymbolData(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; lne=\&quot;146\&quot; data-line-number=\&quot;146\&quot;&gt;IrModuleSerializer.kt:146&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.serialization.IrModuleSerializer.serializeIrSymbol(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; lne=\&quot;156\&quot; data-line-number=\&quot;156\&quot;&gt;IrModuleSerializer.kt:156&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.serialization.IrModuleSerializer.serializeIrDeclarationBase(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; lne=\&quot;871\&quot; data-line-number=\&quot;871\&quot;&gt;IrModuleSerializer.kt:871&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.serialization.IrModuleSerializer.serializeIrField(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; lne=\&quot;1011\&quot; data-line-number=\&quot;1011\&quot;&gt;IrModuleSerializer.kt:1011&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.serialization.IrModuleSerializer.serializeIrProperty(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; lne=\&quot;1000\&quot; data-line-number=\&quot;1000\&quot;&gt;IrModuleSerializer.kt:1000&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.serialization.IrModuleSerializer.serializeDeclaration(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; lne=\&quot;1116\&quot; data-line-number=\&quot;1116\&quot;&gt;IrModuleSerializer.kt:1116&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.serialization.IrModuleSerializer.serializeIrDeclarationContainer(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; lne=\&quot;1041\&quot; data-line-number=\&quot;1041\&quot;&gt;IrModuleSerializer.kt:1041&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.serialization.IrModuleSerializer.serializeIrClass(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; lne=\&quot;1068\&quot; data-line-number=\&quot;1068\&quot;&gt;IrModuleSerializer.kt:1068&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.serialization.IrModuleSerializer.serializeDeclaration(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; lne=\&quot;1112\&quot; data-line-number=\&quot;1112\&quot;&gt;IrModuleSerializer.kt:1112&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.serialization.IrModuleSerializer.serializeIrFile(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; lne=\&quot;1148\&quot; data-line-number=\&quot;1148\&quot;&gt;IrModuleSerializer.kt:1148&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.serialization.IrModuleSerializer.serializeModule(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; lne=\&quot;1201\&quot; data-line-number=\&quot;1201\&quot;&gt;IrModuleSerializer.kt:1201&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.serialization.IrModuleSerializer.serializedIrModule(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/serialization/IrModuleSerializer.kt\&quot; lne=\&quot;1220\&quot; data-line-number=\&quot;1220\&quot;&gt;IrModuleSerializer.kt:1220&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.konan.ToplevelPhasesKt$serializerPhase$1.invoke(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/konan/ToplevelPhasesKt$serializerPhase$1.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/konan/ToplevelPhasesKt$serializerPhase$1.kt\&quot; lne=\&quot;212\&quot; data-line-number=\&quot;212\&quot;&gt;ToplevelPhases.kt:212&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; org.jetbrains.kotlin.backend.konan.ToplevelPhasesKt$serializerPhase$1.invoke(ToplevelPhases.kt)\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$namedOpUnitPhase$1.invoke(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/phaser/PhaseBuildersKt$namedOpUnitPhase$1.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/phaser/PhaseBuildersKt$namedOpUnitPhase$1.kt\&quot; lne=\&quot;115\&quot; data-line-number=\&quot;115\&quot;&gt;PhaseBuilders.kt:115&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$namedOpUnitPhase$1.invoke(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/phaser/PhaseBuildersKt$namedOpUnitPhase$1.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/phaser/PhaseBuildersKt$namedOpUnitPhase$1.kt\&quot; lne=\&quot;113\&quot; data-line-number=\&quot;113\&quot;&gt;PhaseBuilders.kt:113&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.phaser.AbstractNamedPhaseWrapper$runBody$1.invoke(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/phaser/AbstractNamedPhaseWrapper$runBody$1.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/phaser/AbstractNamedPhaseWrapper$runBody$1.kt\&quot; lne=\&quot;128\&quot; data-line-number=\&quot;128\&quot;&gt;CompilerPhase.kt:128&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.downlevel(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/phaser/CompilerPhaseKt.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/phaser/CompilerPhaseKt.kt\&quot; lne=\&quot;24\&quot; data-line-number=\&quot;24\&quot;&gt;CompilerPhase.kt:24&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.phaser.AbstractNamedPhaseWrapper.runBody(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/phaser/AbstractNamedPhaseWrapper.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/phaser/AbstractNamedPhaseWrapper.kt\&quot; lne=\&quot;127\&quot; data-line-number=\&quot;127\&quot;&gt;CompilerPhase.kt:127&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.phaser.AbstractNamedPhaseWrapper.invoke(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/phaser/AbstractNamedPhaseWrapper.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/phaser/AbstractNamedPhaseWrapper.kt\&quot; lne=\&quot;105\&quot; data-line-number=\&quot;105\&quot;&gt;CompilerPhase.kt:105&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/phaser/CompositePhase.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/phaser/CompositePhase.kt\&quot; lne=\&quot;28\&quot; data-line-number=\&quot;28\&quot;&gt;PhaseBuilders.kt:28&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.phaser.AbstractNamedPhaseWrapper$runBody$1.invoke(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/phaser/AbstractNamedPhaseWrapper$runBody$1.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/phaser/AbstractNamedPhaseWrapper$runBody$1.kt\&quot; lne=\&quot;128\&quot; data-line-number=\&quot;128\&quot;&gt;CompilerPhase.kt:128&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.downlevel(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/phaser/CompilerPhaseKt.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/phaser/CompilerPhaseKt.kt\&quot; lne=\&quot;24\&quot; data-line-number=\&quot;24\&quot;&gt;CompilerPhase.kt:24&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.phaser.AbstractNamedPhaseWrapper.runBody(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/phaser/AbstractNamedPhaseWrapper.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/phaser/AbstractNamedPhaseWrapper.kt\&quot; lne=\&quot;127\&quot; data-line-number=\&quot;127\&quot;&gt;CompilerPhase.kt:127&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.phaser.AbstractNamedPhaseWrapper.invoke(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/phaser/AbstractNamedPhaseWrapper.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/phaser/AbstractNamedPhaseWrapper.kt\&quot; lne=\&quot;105\&quot; data-line-number=\&quot;105\&quot;&gt;CompilerPhase.kt:105&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/common/phaser/CompilerPhaseKt.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/common/phaser/CompilerPhaseKt.kt\&quot; lne=\&quot;42\&quot; data-line-number=\&quot;42\&quot;&gt;CompilerPhase.kt:42&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.backend.konan.KonanDriverKt.runTopLevelPhases(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/backend/konan/KonanDriverKt.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/backend/konan/KonanDriverKt.kt\&quot; lne=\&quot;27\&quot; data-line-number=\&quot;27\&quot;&gt;KonanDriver.kt:27&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.cli.bc.K2Native.doExecute(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/cli/bc/K2Native.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/cli/bc/K2Native.kt\&quot; lne=\&quot;74\&quot; data-line-number=\&quot;74\&quot;&gt;K2Native.kt:74&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.cli.bc.K2Native.doExecute(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/cli/bc/K2Native.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/cli/bc/K2Native.kt\&quot; lne=\&quot;34\&quot; data-line-number=\&quot;34\&quot;&gt;K2Native.kt:34&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/cli/common/CLICompiler.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/cli/common/CLICompiler.kt\&quot; lne=\&quot;84\&quot; data-line-number=\&quot;84\&quot;&gt;CLICompiler.kt:84&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/cli/common/CLICompiler.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/cli/common/CLICompiler.kt\&quot; lne=\&quot;42\&quot; data-line-number=\&quot;42\&quot;&gt;CLICompiler.kt:42&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.cli.common.CLITool.exec(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/cli/common/CLITool.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/cli/common/CLITool.kt\&quot; lne=\&quot;104\&quot; data-line-number=\&quot;104\&quot;&gt;CLITool.kt:104&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.cli.common.CLITool.exec(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/cli/common/CLITool.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/cli/common/CLITool.kt\&quot; lne=\&quot;82\&quot; data-line-number=\&quot;82\&quot;&gt;CLITool.kt:82&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.cli.common.CLITool.exec(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/cli/common/CLITool.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/cli/common/CLITool.kt\&quot; lne=\&quot;50\&quot; data-line-number=\&quot;50\&quot;&gt;CLITool.kt:50&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.cli.common.CLITool$Companion.doMainNoExit(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/cli/common/CLITool$Companion.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/cli/common/CLITool$Companion.kt\&quot; lne=\&quot;215\&quot; data-line-number=\&quot;215\&quot;&gt;CLITool.kt:215&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.cli.common.CLITool$Companion.doMain(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/cli/common/CLITool$Companion.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/cli/common/CLITool$Companion.kt\&quot; lne=\&quot;207\&quot; data-line-number=\&quot;207\&quot;&gt;CLITool.kt:207&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.cli.bc.K2Native$Companion$main$1.invoke(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/cli/bc/K2Native$Companion$main$1.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/cli/bc/K2Native$Companion$main$1.kt\&quot; lne=\&quot;224\&quot; data-line-number=\&quot;224\&quot;&gt;K2Native.kt:224&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.cli.bc.K2Native$Companion$main$1.invoke(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/cli/bc/K2Native$Companion$main$1.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/cli/bc/K2Native$Companion$main$1.kt\&quot; lne=\&quot;221\&quot; data-line-number=\&quot;221\&quot;&gt;K2Native.kt:221&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.konan.util.UtilKt.profileIf(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/konan/util/UtilKt.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/konan/util/UtilKt.kt\&quot; lne=\&quot;26\&quot; data-line-number=\&quot;26\&quot;&gt;Util.kt:26&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.konan.util.UtilKt.profile(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/konan/util/UtilKt.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/konan/util/UtilKt.kt\&quot; lne=\&quot;21\&quot; data-line-number=\&quot;21\&quot;&gt;Util.kt:21&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.cli.bc.K2Native$Companion.main(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/cli/bc/K2Native$Companion.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/cli/bc/K2Native$Companion.kt\&quot; lne=\&quot;223\&quot; data-line-number=\&quot;223\&quot;&gt;K2Native.kt:223&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.cli.bc.K2NativeKt.main(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/cli/bc/K2NativeKt.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/cli/bc/K2NativeKt.kt\&quot; lne=\&quot;325\&quot; data-line-number=\&quot;325\&quot;&gt;K2Native.kt:325&lt;/a&gt;)&lt;/span&gt;\n&lt;span class=\&quot;wiki-exception-line-start\&quot;&gt;at&lt;/span&gt; &lt;span&gt;org.jetbrains.kotlin.cli.utilities.MainKt.main(&lt;a class=\&quot;dsLink\&quot; txt=\&quot;org/jetbrains/kotlin/cli/utilities/MainKt.kt\&quot; data-file-path=\&quot;org/jetbrains/kotlin/cli/utilities/MainKt.kt\&quot; lne=\&quot;16\&quot; data-line-number=\&quot;16\&quot;&gt;main.kt:16&lt;/a&gt;)&lt;/span&gt;&lt;/p&gt;\n&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Ilya Matveev&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;Ilya.Matveev&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;Ilya.Matveev&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565701113280&quot;},{&quot;name&quot;:&quot;resolved&quot;,&quot;value&quot;:&quot;1565701061833&quot;},{&quot;name&quot;:&quot;links&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;KT-33077&quot;,&quot;type&quot;:&quot;Depend&quot;,&quot;role&quot;:&quot;is required for&quot;}]},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Bug&quot;],&quot;valueId&quot;:[&quot;Bug&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e30000&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Priority&quot;,&quot;value&quot;:[&quot;Major&quot;],&quot;valueId&quot;:[&quot;Major&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#ffee9c&quot;,&quot;fg&quot;:&quot;#b45f06&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Fixed&quot;],&quot;valueId&quot;:[&quot;Fixed&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#409600&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;Native&quot;],&quot;valueId&quot;:[&quot;Native&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Target versions&quot;,&quot;value&quot;:[&quot;1.3.60&quot;],&quot;valueId&quot;:[&quot;1.3.60&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Yes&quot;],&quot;valueId&quot;:[&quot;Yes&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;Ilya.Matveev&quot;,&quot;fullName&quot;:&quot;Ilya Matveev&quot;}]}],&quot;comment&quot;:[],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-33279&quot;,&quot;entityId&quot;:&quot;25-2461697&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;Kotlin/Native: Tailrec methods from libraries are not lowered&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Ilya Matveev&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1565614679057&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;33279&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;Steps to reproduce:&lt;/p&gt;\n&lt;ol class=\&quot;wiki-list0\&quot;&gt;\n&lt;li&gt;Build a K/N library with the following code:&lt;/li&gt;\n&lt;/ol&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;kotlin&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint linenums\&quot;&gt;&lt;code class=\&quot;language-kotlin\&quot;&gt;class A {\n    tailrec fun f1(c : Int) {\n        if (c &amp;gt; 0) f1(c - 1)\n    }\n}\n\nfun box() {\n    A().f1(1000000)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;ol start=\&quot;2\&quot; class=\&quot;wiki-list0\&quot;&gt;\n&lt;li&gt;Build an executable against this library. Call the &lt;code class=\&quot;inline-code\&quot;&gt;box&lt;/code&gt; function from this executable:&lt;/li&gt;\n&lt;/ol&gt;\n&lt;span class=\&quot;markdown-language-tag\&quot;&gt;kotlin&lt;/span&gt;&lt;pre class=\&quot;wikicode prettyprint linenums\&quot;&gt;&lt;code class=\&quot;language-kotlin\&quot;&gt;fun main() {\n    box()\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;ol start=\&quot;3\&quot; class=\&quot;wiki-list0\&quot;&gt;\n&lt;li&gt;Run the resulting executable. It crashes with a segfault.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;Note that if &lt;code class=\&quot;inline-code\&quot;&gt;class A&lt;/code&gt; and &lt;code class=\&quot;inline-code\&quot;&gt;fun box&lt;/code&gt; are compiled into a final executable directly, this crash isn&amp;#39;t observed.&lt;/p&gt;\n&lt;/div&gt;&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Ilya Matveev&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;Ilya.Matveev&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;Ilya.Matveev&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565701062473&quot;},{&quot;name&quot;:&quot;resolved&quot;,&quot;value&quot;:&quot;1565701062400&quot;},{&quot;name&quot;:&quot;links&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;KT-33077&quot;,&quot;type&quot;:&quot;Depend&quot;,&quot;role&quot;:&quot;is required for&quot;}]},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Bug&quot;],&quot;valueId&quot;:[&quot;Bug&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e30000&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Priority&quot;,&quot;value&quot;:[&quot;Major&quot;],&quot;valueId&quot;:[&quot;Major&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#ffee9c&quot;,&quot;fg&quot;:&quot;#b45f06&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Fixed&quot;],&quot;valueId&quot;:[&quot;Fixed&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#409600&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Affected versions&quot;,&quot;value&quot;:[&quot;1.3.40&quot;],&quot;valueId&quot;:[&quot;1.3.40&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;Backend. IR&quot;],&quot;valueId&quot;:[&quot;Backend. IR&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Target versions&quot;,&quot;value&quot;:[&quot;1.3.60&quot;],&quot;valueId&quot;:[&quot;1.3.60&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Yes&quot;],&quot;valueId&quot;:[&quot;Yes&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Assignee&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;Ilya.Matveev&quot;,&quot;fullName&quot;:&quot;Ilya Matveev&quot;}]}],&quot;comment&quot;:[],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-12140&quot;,&quot;entityId&quot;:&quot;25-1193957&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;Explicit type arguments for generic function callable references&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Samuel Pastva&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1461875157224&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;12140&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;Could you please allow us to reference generic functions like normal ones? Especially if their type can be easily inferred?&lt;br/&gt;&lt;br/&gt;Example:&lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;fun &amp;lt;T&amp;gt; f1(x: T, a: (T) -&amp;gt; Int): Int {&lt;br/&gt;    return a(x)&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;fun &amp;lt;T&amp;gt; f2(b: T): Int = 42&lt;br/&gt;&lt;br/&gt;val z = f1(3, ::f2)&lt;/pre&gt;&lt;br/&gt;This will not compile because ::f2 is not a valid function reference (compiler thinks it&amp;#39;s an Int, probably considering it a function call). However, if replaced by { f2(it) }, everything works fine. &lt;br/&gt;&lt;br/&gt;Therefore I would like to propose something like ::f2&amp;lt;type&amp;gt; notation for generic function references with &amp;lt;type&amp;gt; part being optional if it can be inferred. Would such thing be possible?&lt;br/&gt;&lt;br/&gt;(Maybe if someone can point me into the right direction I can have a look at it and make a pull request :))&lt;/div&gt;\n&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Markus Padourek&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;daemontus&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;5&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;Markus.Padourek&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;15&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565700735384&quot;},{&quot;name&quot;:&quot;links&quot;,&quot;value&quot;:[{&quot;value&quot;:&quot;KT-13003&quot;,&quot;type&quot;:&quot;Relates&quot;,&quot;role&quot;:&quot;relates to&quot;}]},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Problem&quot;],&quot;valueId&quot;:[&quot;Problem&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#fce5f1&quot;,&quot;fg&quot;:&quot;#dc5766&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;To be discussed&quot;],&quot;valueId&quot;:[&quot;To be discussed&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#0070e4&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;Language design&quot;],&quot;valueId&quot;:[&quot;Language design&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Yes&quot;],&quot;valueId&quot;:[&quot;Yes&quot;],&quot;color&quot;:null}],&quot;comment&quot;:[{&quot;id&quot;:&quot;27-1443804&quot;,&quot;author&quot;:&quot;Andrey.Breslav&quot;,&quot;authorFullName&quot;:&quot;Andrey Breslav&quot;,&quot;issueId&quot;:&quot;KT-12140&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;Something along these lines is on the table&lt;/div&gt;\n&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1464022336850,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:false,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-2829976&quot;,&quot;author&quot;:&quot;Markus_M&quot;,&quot;authorFullName&quot;:&quot;Markus M&quot;,&quot;issueId&quot;:&quot;KT-12140&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;It would be very helpful to have at least partial implementation of this feature if a full-fledged implementation poses a problem. For example to be able to reflect some basic properties of the function in question.&lt;br/&gt;In my case, I needed to print the name of a function.&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1524123890829,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3249347&quot;,&quot;author&quot;:&quot;Alexey.Belkov&quot;,&quot;authorFullName&quot;:&quot;Alexey Belkov&quot;,&quot;issueId&quot;:&quot;KT-12140&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;&lt;b data-user-id=\&quot;11-199087\&quot; title=\&quot;Samuel Pastva\&quot;&gt;@Samuel Pastva&lt;/b&gt; Note that in Kotlin 1.3.11 your original example compiles successfully.&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1547035718600,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3249560&quot;,&quot;author&quot;:&quot;daemontus&quot;,&quot;authorFullName&quot;:&quot;Samuel Pastva&quot;,&quot;issueId&quot;:&quot;KT-12140&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;&lt;b data-user-id=\&quot;11-394901\&quot; title=\&quot;Alexey Belkov\&quot;&gt;@Alexey Belkov&lt;/b&gt; Cool! I&amp;#39;m guessing in most use cases the type should be relatively easy to infer, so I&amp;#39;ll do without the explicit ::f2&amp;lt;type&amp;gt; notation :)&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1547041080512,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]},{&quot;id&quot;:&quot;27-3651579&quot;,&quot;author&quot;:&quot;Markus.Padourek&quot;,&quot;authorFullName&quot;:&quot;Markus Padourek&quot;,&quot;issueId&quot;:&quot;KT-12140&quot;,&quot;parentId&quot;:null,&quot;deleted&quot;:false,&quot;jiraId&quot;:null,&quot;text&quot;:&quot;&lt;div class=\&quot;wiki text common-markdown\&quot;&gt;&lt;p&gt;I have a code sample with kotlin 1.3.41 that is failing in exactlz the same issue as described. So it would be nice if something like ::f2&amp;lt;type&amp;gt; can still be supported for the cases where the type can not be inferred.&lt;/p&gt;\n&lt;/div&gt;&quot;,&quot;shownForIssueAuthor&quot;:false,&quot;created&quot;:1565700735427,&quot;updated&quot;:0,&quot;permittedGroup&quot;:null,&quot;markdown&quot;:true,&quot;replies&quot;:[]}],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-33300&quot;,&quot;entityId&quot;:&quot;25-2462550&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;\&quot;Create type parameter from usage\&quot; suggests for top level property&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Dmitry Gridin&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1565685970918&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;33300&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;val n = fun() {&lt;br/&gt;    val b: T&lt;br/&gt;}&lt;/pre&gt;&lt;/div&gt;\n&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Anton Yalyshev&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;Dmitry.Gridin&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;Anton.Yalyshev&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565698555647&quot;},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Bug&quot;],&quot;valueId&quot;:[&quot;Bug&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e30000&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Priority&quot;,&quot;value&quot;:[&quot;Normal&quot;],&quot;valueId&quot;:[&quot;Normal&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e6f6cf&quot;,&quot;fg&quot;:&quot;#4da400&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Backlog&quot;],&quot;valueId&quot;:[&quot;Backlog&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e6f6cf&quot;,&quot;fg&quot;:&quot;#4da400&quot;}},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;IDE. Inspections and Intentions&quot;],&quot;valueId&quot;:[&quot;IDE. Inspections and Intentions&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Yes&quot;],&quot;valueId&quot;:[&quot;Yes&quot;],&quot;color&quot;:null}],&quot;comment&quot;:[],&quot;tag&quot;:[]}, {&quot;id&quot;:&quot;KT-33299&quot;,&quot;entityId&quot;:&quot;25-2462540&quot;,&quot;jiraId&quot;:null,&quot;field&quot;:[{&quot;name&quot;:&quot;projectShortName&quot;,&quot;value&quot;:&quot;KT&quot;},{&quot;name&quot;:&quot;summary&quot;,&quot;value&quot;:&quot;\&quot;Create type parameter from usage\&quot; should work with backticks&quot;},{&quot;name&quot;:&quot;reporterFullName&quot;,&quot;value&quot;:&quot;Dmitry Gridin&quot;},{&quot;name&quot;:&quot;created&quot;,&quot;value&quot;:&quot;1565685889118&quot;},{&quot;name&quot;:&quot;numberInProject&quot;,&quot;value&quot;:&quot;33299&quot;},{&quot;name&quot;:&quot;description&quot;,&quot;value&quot;:&quot;&lt;div class=\&quot;wiki text prewrapped\&quot;&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;fun a() {&lt;br/&gt;    val c: `test text`&lt;br/&gt;}&lt;/pre&gt;after:&lt;br/&gt;&lt;pre class=\&quot;wikicode prettyprint\&quot;&gt;fun &amp;lt;test&amp;gt; a() {&lt;br/&gt;    val c: `test text`&lt;br/&gt;}&lt;/pre&gt;&lt;/div&gt;\n&quot;},{&quot;name&quot;:&quot;updaterFullName&quot;,&quot;value&quot;:&quot;Anton Yalyshev&quot;},{&quot;name&quot;:&quot;reporterName&quot;,&quot;value&quot;:&quot;Dmitry.Gridin&quot;},{&quot;name&quot;:&quot;commentsCount&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updaterName&quot;,&quot;value&quot;:&quot;Anton.Yalyshev&quot;},{&quot;name&quot;:&quot;markdown&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;name&quot;:&quot;wikified&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;name&quot;:&quot;votes&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;name&quot;:&quot;updated&quot;,&quot;value&quot;:&quot;1565698555646&quot;},{&quot;name&quot;:&quot;Type&quot;,&quot;value&quot;:[&quot;Bug&quot;],&quot;valueId&quot;:[&quot;Bug&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e30000&quot;,&quot;fg&quot;:&quot;#fff&quot;}},{&quot;name&quot;:&quot;Priority&quot;,&quot;value&quot;:[&quot;Normal&quot;],&quot;valueId&quot;:[&quot;Normal&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e6f6cf&quot;,&quot;fg&quot;:&quot;#4da400&quot;}},{&quot;name&quot;:&quot;State&quot;,&quot;value&quot;:[&quot;Backlog&quot;],&quot;valueId&quot;:[&quot;Backlog&quot;],&quot;color&quot;:{&quot;bg&quot;:&quot;#e6f6cf&quot;,&quot;fg&quot;:&quot;#4da400&quot;}},{&quot;name&quot;:&quot;Subsystems&quot;,&quot;value&quot;:[&quot;IDE. Inspections and Intentions&quot;],&quot;valueId&quot;:[&quot;IDE. Inspections and Intentions&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Change processed&quot;,&quot;value&quot;:[&quot;No&quot;],&quot;valueId&quot;:[&quot;No&quot;],&quot;color&quot;:null},{&quot;name&quot;:&quot;Triaged&quot;,&quot;value&quot;:[&quot;Yes&quot;],&quot;valueId&quot;:[&quot;Yes&quot;],&quot;color&quot;:null}],&quot;comment&quot;:[],&quot;tag&quot;:[]}]" />
      </map>
    </option>
  </component>
</application>